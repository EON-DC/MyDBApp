concept,meaning,category,fullName
데이터베이스 설계,사용자의 요구를 분석하여 그것을 컴퓨터에 저장할 수 있는 데이터베이스의 구조에 맞게 변형한 후 특정 DBMS로 데이터베이스를 구현하여 일반 사용자들이 사용하게 하는 것,데이터베이스 설계,
무결성,"삽입, 삭제, 갱신 등의 연산 후에도 데이터베이스에 저장된 데이터가 정해진 제약 조건을 항상 만족해야한다",데이터베이스 설계 시 고려사항,
일관성,"데이터베이스에 저장된 데이터들 사이나, 특정 질의에 대한 응답이 처음부터 끝까지 변함없이 일정해야한다.",데이터베이스 설계 시 고려사항,
회복,시스템에 장애가 발생했을 때 장애 발생 직전의 상태로 복구할 수 있어야한다.,데이터베이스 설계 시 고려사항,
보안,불법적인 데이터의 노출 또는 변경이나 손실로부터 보호할 수 있어야한다.,데이터베이스 설계 시 고려사항,
효율성,"응답시간의 단축, 시스템의 생산성, 저장 공간의 최적화 등이 가능해야한다.",데이터베이스 설계 시 고려사항,
데이터베이스 확장,데이터베이스 운영에 영향을 주지 않으면서 지속적으로 데이터를 추가할 수 있어야한다.,데이터베이스 설계 시 고려사항,
요구 조건 분석,데이터베이스 설계 때 하는 일 : 요구 조건 명세서 작성,데이터베이스 설계 순서,
개념적 설계,"데이터베이스 설계 때 하는 일 : 개념 스키마, 트랜잭션 모델링, E-R 모델",데이터베이스 설계 순서,
논리적 설계,"데이터베이스 설계 때 하는 일 : 목표 DBMS에 맞는 논리 스키마 설계, 트랜잭션 인터페이스 설계",데이터베이스 설계 순서,
물리적 설계,데이터베이스 설계 때 하는 일 : 목표 DBMS에 맞는 물리적 구조의 데이터로 변환,데이터베이스 설계 순서,
구현,"데이터베이스 설계 때 하는 일 : 목표 DBMS의 DDL(데이터 정의어)로 데이터베이스 생성, 트랜잭션 작성",데이터베이스 설계 순서,
요구 조건 분석,"데이터베이스를 사용할 사람들로부터 필요한 용도를 파악하는 것, 데이터 사용자에 따른 수행 업무와 필요한 데이터의 종류, 용도, 처리 형태, 흐름, 제약 조건 등을 수집하고, 이를 바탕으로 요구 조건 명세를 작성한다.",데이터베이스 설계 순서,
개념적 설계,"정보의 구조를 얻기 위하여 현실 세계의 무한성과 계속성을 이해하고, 다른 사람과 통신하기 위하여 현실 세계에 대한 인식을 추상적 개념으로 표현하는 과정이다. 개념스키마 모델링, 트랜잭션 모델링을 병행 수행하고, DBMS 독립적인 E-R 다이어그램, 개념 스키마를 설계한다.",데이터베이스 설계,
논리적 설계(),"현실 세계에서 발생하는 자료를 컴퓨터가 이해하고 처리할 수 있는 물리적 저장장치에 저장할 수 있도록 변환하기 위해 특정 DBMS가 지원하는 논리적 자료 구조를 변환시키는 과정이다. 개념 스키라를 평가, 정제하여 DBMS마다 다른 논리적 스키마를 설게한다. 트랜잭션의 인터페이스를 설계한다. RDBMS의 경우 테이블을 설계하는 단계이다.",데이터베이스 설계,
물리적 설계(데이터베이스 설계),"논리적 구조로 표현된 데이터들을 디스크 등의 물리적 저장장치에 저장할 수 있는 물리적 구조의 데이터로 변환하는 과정이다. 데이터베이스 파일의 저장 구조 및 엑세스 경로를 결정한다. 저장 레코드의 양식, 순서, 접근 정보 등에 대한 방법을 묘사한다. 트랜잭션 처리량, 응답시간, 용량, 저장공간의 효율화 등을 고려한다.",데이터베이스 설계,
데이터베이스 구현(데이터베이스 설계),"DDL 을 이용하여 데이터베이스 스키마를 기술한 후 컴파일 하여 빈 데이터베이스 파일을 생성한다. 빈 데이터베이스 파일에 데이터를 입력하고, 응용 프로그램을 위한 트랜잭션을 작성한다.",데이터베이스 설계,
데이터 모델,"현실 세계의 정보들을 컴퓨터에 표현하기 위해서 단순화, 추상화하여 체계적으로 표현한 개념적 모형",데이터 모델,
개체,"데이터베이스에 표현하려는 것으로, 사람이 생각하는 개념이나 정보 같은 현실 세계의 대상체",데이터 모델 구성 요소,
속성,데이터의 가장 작은 논리적 단위로서 파일 구조상의 데이터 항목 또는 필드에 해당한다.,데이터 모델 구성 요소,
관계,개체 간의 관계 또는 속성 간의 논리적인 연결을 의미한다.,데이터 모델 구성 요소,
개념적 데이터 모델,"현실 세계에 대한 인간의 이해를 돕기 위해 현실 세계에 대한 인식을 추상적 개념으로 표현하는 과정, ___ 모델은 속성들로 기술된 개체 타입과 이 개체 타입들 간의 관계를 이용하여 현실 세계를 표현한다. 대표적으로 E-R 모델이 있다. 인간이 이해할 수 있는 정보 구조로 표현하기 때문에 정보 모델이라고도 한다.",데이터 모델,
논리적 데이터 모델,"개념적 모델링 과정에서 얻은 개념적 구조를 컴퓨터가 이해하고 처리할 수 있는 컴퓨터 세계의 환경에 맞도록 변환하는 과정, ___ 모델은 필드로 기술된 데이터 타입과 이 데이터 타입들 간의 관계를 이용하여 현실 세계를 표현한다. 특정 DBMS는 특정 논리적 데이터 모델 하나만 선정하여 사용한다. 데이터간의 관계를 어떻게 표현하느냐에 따라 관계 모델, 계층 모델, 네트워크 모델로 구분한다.",데이터 모델,
개체 품질 검증 항목,"논리 데이터 모델이 기업에 적합한지 확인하기 위해 품질을 검증하는 것이다. 개체, 속성, 관계, 식별자, 모델 전반 등에 대하여 검토 체크리스트를 작성하고, 체크리스트의 각 항목을 확인하는 방식으로 검증한다.",논리적 데이터 모델의 품질 검증,
속성 품질 검증 항목,"단수 명사 여부, 속성의 값 존재 여부 및 개수, 도메인 정의, 반복되는 속성, 그룹화 가능 속성, 주 식별자 및 비 식별자에 의존하는 속성, 다치종속 속성 등",논리적 데이터 모델의 품질 검증,
관계 품질 검증 항목,"관계의 명칭, 2개 이상의 노드와 관계 존재 여부, 노드의 기수성과 선택성, 필수적 관계, 유효한 관계, 중복된 관계, 외부식별자 존재 여부, 참조 무결성 여부 등",논리적 데이터 모델의 품질 검증,
식별자 품질 검증 항목,"식별자의 명칭, 정의, 구성, 정합성, 크기, 순서 등",논리적 데이터 모델의 품질 검증,
전반적인 품질 검증 항목,"주제 영역 구성의 적절성, 데이터 모델 상에 정규화 여부, 다대다 관계 해소 여부, 이력 관리 대상 선정 확인, 이력 관리 방법의 적절성 확인",논리적 데이터 모델의 품질 검증,
구조,논리적으로 표현된 개체 타입들 간의 관계로서 데이터 구조 및 정적 성질을 표현한다.,데이터 모델에 표시할 요소,
연산,데이터베이스에 저장된 실제 데이터를 처리하는 작업에 대한 명세로서 데이터베이스를 조작하는 기본 도구다.,데이터 모델에 표시할 요소,
제약 조건,데이터베이스에 저장될 수 있는 실제 데이터의 논리적인 제약 조건이다.,데이터 모델에 표시할 요소,
개체 선정 방법,업무 분석에 관한 내용을 구체적으로 설명한 업무 기술서를 이용한다. 실제 업무를 담당하고 있는 담당자와 인터뷰를 한다. 업무 기술서와 인터뷰에서 확인하지 못한 정보가 있는지 실제 업무를 직접 견학하여 확인한다. 실제 업무에 사용되고 있는 장부와 전표를 이용한다.,데이터 모델 - 개체,
BPR,"기업이 경쟁에서 우위를 확보하기 위해 기업의 핵심 부문인 비용, 품질, 서비스, 스피드와 같은 요인들이 획기적인 향상을 이룰 수 있도록, 프로세스를 기반으로 비즈니스 시스템을 근본적으로 재설계하여 혁신적인 성과를 추구하는 것",개체 선정 방법,Business Process Reengineering
DFD,요구사항 분석에서 자료의 흐름 및 변환 과정과 기능을 도형,개체 선정 방법,Data Flow Diagram
Data Store,"시스템에서의 자료 저장소(파일, 데이터베이스)를 의미함",개체 선정 방법,
속성,"데이터베이스를 구성하는 가장 작은 논리적 단위, 파일 구조상의 데이터 항목 또는 데이터 필드에 해당, 개체를 구성하는 항목, 개체의 특성을 기술한다.",데이터 모델 - 속성,
"Degree, 차수",속성의 개수를 의미한다,데이터 모델 - 속성,
기본 속성,"업무 분석을 통해 정의한 속성, 가장 많고 일반적임, 업무로부터 분석한 속성 이더라도, 업무상 코드로 정의한 속성은 __에서 제외함",데이터 모델 - 속성,
설계 속성,"원래 업무상 존재하지 않고, __ 과정에서 도출해내는 속성, 업무에 필요한 데이터 외에 데이터 모델링을 위해 업무를 규칙화하려고 속성을 새로 만들거나 변형하여 정의하는 속성이다.",데이터 모델 - 속성,
파생 속성,"다른 속성으로부터 계산이나 변형 등의 영향을 받아 발생하는 속성, 되도록 적은 수를 정의함",데이터 모델 - 속성,
원시 속성,다른 속성을 통해 다시 재현할 수 없는 속성을 의미함. __ 속성을 버리면 해당 속성 정보가 완전히 소실되므로 버릴 수 없음,데이터 모델 - 속성,
기본키 속성,개체를 식별할 수 있는 속성,데이터 모델 - 속성,
외래키 속성,다른 개체와의 관계에서 포함되는 속성,데이터 모델 - 속성,
1:1 관계,개체 집합 A의 각 원소가 개체 집합 B 원소 한 개와 대응하는 관계,데이터 모델 - 관계,
1:N 관계,"개체 집합 A의 각 원소는 개체 집합 B의 원소 여러 개와 대응하고 있지만, 개체 집합 B의 각 원소는 개체 집합 A의 원소 한 개와 대응하는 관계이다.",데이터 모델 - 관계,
N:N 관계,"개체 집합 A의 각 원소는 개체 집합 B의 원소 여러 개와 대응하고, 개체 집합 B의 각 원소도 개체 집합 A의 원소 여러 개와 대응하는 관계이다.",데이터 모델 - 관계,
종속 관계,"두 개체 사이의 주 ・ 종 관계를 표현한 것으로, 식별 관계와 비식별 관계가 있다.",데이터 모델 - 관계,
중복 관계,두 개체 사이에 2번 이상의 종속 관계가 발생하는 관계이다.,데이터 모델 - 관계,
재귀 관계,개체가 자기 자신과 관계를 갖는 것으로 순환 관계라고도 한다.,데이터 모델 - 관계,
배타 관계,"개체의 속성이나 구분자를 기준으로 개체의 특성을 분할하는 관계로 배타 AND, OR 관계로 구분한다. ",데이터 모델 - 관계,
식별 관계,"개체 A, B 사이의 관계에서 A 개체의 기본키가 B개체의 외래키이면서 동시에 기본키가 되는 관계, B 개체의 존재 여부가 A 개체의 존재 여부에 의존적인 경우에 발생함, E-R 도형에서는 실선으로 표시함",데이터 모델 - 관계,
비식별 관계,"A개체의 기본키가 B개체의 비기본키 영역에서 외래키가 되는 관계, B개체는 A 개체의 조냊 여부와 관계없이 존재함",데이터 모델 - 관계,
주 식별자,개체를 대표하는 유일한 식별자,식별자,Primary Identifier
보조 식별자,"주 식별자를 대신하여 개체를 식별할 수 있는 속성, 일반적으로 유니크 인덱스로 지정되어 사용함",식별자,Alternative Identifier
내부 식별자,개체 내에서 스스로 만들어지는 식별자,식별자,Internal Identifier
외부 식별자,다른 개체와의 관계에 의해 결정되는 식별자. 자신의 개체에서 다른 개체를 찾아가는 연결자 역할을 함,식별자,Foreign Identifier
단일 식별자,한 가지 속성으로만 구성된 식별자,식별자,Single Identifier
복합 식별자,두 개 이상의 속성으로 구성된 식별자,식별자,Composit Identifier
원조 식별자,"업무에 의해 만들어지는 가공되지 않은 원래의 식별자, 본질 식별자라고도 함",식별자,Original Identifier
대리 식별자,주 식별자의 속성이 두 개 이상인 경우 속성들을 하나의 속성으로 묶어 사용하는 식별자로 인조 식별자라고도 함,식별자,Surrogate Identifier
피터 첸,E-R 모델 만든사람,E-R모델,
E-R모델,개체 타입과 이들 간의 관계 타입을 이용하여 현실 세계를 개념적으로 표현한다,E-R모델,
사각형,개체 타입,E-R모델,
마름모,관계 타입,E-R모델,
타원,속성,E-R모델,
이중 타원,다중값 속성,E-R모델,
밑줄 타원,기본키 속성,E-R모델,
복수 타원,복합 속성,E-R모델,
관계,"1:1, 1:N, N:M 등의 개체 간 관계에 대한 대응수를 선위에 기술함",E-R모델,
"선, 링크",개체 타입과 속성을 연결,E-R모델,
관계형 데이터 모델,"2차원적인 표를 이용해서 데이터 상호 관계를 정의하는 DB구조, 테이블 내에 있는 속성들 간의 관계를 설정하거나 테이블 간의 관계를 설정하여 이용한다.",관계형 데이터 모델,
릴레이션,"관계형 데이터베이스를 구성하는 개체나 관계를 아울러 이르는 말, 표로 표현함",관계형 데이터 모델,
튜플,"릴레이션을 구성하는 각각의 행, 속성의 모임으로 구성됨",관계형 데이터 모델,
Cardinality,"기수, 대응수라고도 하며, 튜플의 수를 의미한다.(=row)",관계형 데이터 모델,
속성,"데이터베이스를 구성하는 가장 작은 논리적 단위, 파일 구조상의 데이터 항목 또는 필드에 해당함. 개체의 속성을 기술한다",관계형 데이터 모델,
Degree,"차수라고도 하며, 속성의 수를 의미한다.(=col)",관계형 데이터 모델,
Domain,하나의 Attribute가 취할 수 있는 같은 타입의 원자값들의 집합임,관계형 데이터 모델,
후보키,"릴레이션을 구성하는 속성들 중에서 튜플을 유일하게 식별하기 위해 사용하는 속성들의 부분집합, 기본키로 사용할 수 있는 속성들을 의미함. 유일성과 최소성을 만족시켜야함",관계형 데이터베이스의 제약 조건,
유일성,하나의 키 값으로 하나의 튜플만을 유일하게 식별할 수 있어야한다.,관계형 데이터베이스의 제약 조건,
최소성,모든 레코드들을 유일하게 식별하는데 꼭 필요한 속성으로만 구성되어야 한다.,관계형 데이터베이스의 제약 조건,
기본키,"후보키 중에서 특별히 선정된 주(Main Key)로 중복된 값을 가질 수 없다., Null 값을 가질 수 없다.",관계형 데이터베이스의 제약 조건,
대체키,후보키가 둘 이상일 때 기본키를 제외한 나머지 후보키를 의미한다.,관계형 데이터베이스의 제약 조건,
슈퍼키,"한 릴레이션 내에 있는 속성들의 집합으로 구성된 키로서 릴레이션을 구성하는 모든 튜플들 중 슈퍼키로 구성된 속성의 집합과 동일한 값은 나타나지 않는다. 릴레이션에 대해 모든 튜플에 대해 유일성은 만족시키지만, 최소성은 만족시키지 못함",관계형 데이터베이스의 제약 조건,
외래키,"다른 릴레이션의 기본키를 참조하는 속성 또는 속성들의 집합을 의미함, __로 지정되면 참조 릴레이션의 기본키에 없는 값은 입력할 수 없다.",관계형 데이터베이스의 제약 조건,
무결성,데이터베이스에 저장된 데이터 값과 그것이 표현하는 현실 세계의 실제 값이 일치하는 정확성을 의미한다.,관계형 데이터베이스의 제약 조건,
개체 무결성,기본 테이블의 기본키를 구성하는 어떤 속성도 NULL 값이나 중복 값을 가질 수 없다는 규정,관계형 데이터베이스의 제약 조건,
도메인 무결성,주어진 속성 값이 정의된 도메인에 속한 값이어야한다는 규정,관계형 데이터베이스의 제약 조건,
참조 무결성,외래키 값은 Null이거나 참조 릴레이션의 기본키 값과 동일해야한다. 릴레이션은 참조할 수 없는 외래키 값을 가질 수 없다는 규정,관계형 데이터베이스의 제약 조건,
사용자 정의 무결성,속성 값들이 사용자가 정의한 제약 조건에 만족해야 한다는 규정,관계형 데이터베이스의 제약 조건,
관계대수,관계형 데이터베이스에서 원하는 정보와 그 정보를 검색하기 위해서 어떻게 유도하는가를 기술한 절차적 언어,관계대수 및 관계해석,
순수 관계 연산자,관계 데이터베이스를 적용하기 위해 특별히 개발한 __ 연산자,관계대수 및 관계해석,
일반 집합 연산자,수학적 __ 이론에서 사용하는 일반 __ 연산자,관계대수 및 관계해석,
Select,릴레이션에 존재하는 튜플 중에서 선택 조건을 만족하는 튜플의 부분집합을 구하여 새로운 릴레이션을 만드는 연산,관계대수 및 관계해석,
Project,"주어진 릴레이션에서 속성 리스트에 제시된 속성 값만을 추출하여 새로운 릴레이션을 만드는 연산, 연산 결과에 중복이 발생하면 중복이 제거됨",관계대수 및 관계해석,
Join,공통 속성을 중심으로 두 개의 릴레이션을 하나로 합쳐서 새로운 릴레이션을 만드는 연산,관계대수 및 관계해석,
Division,"두 개의 릴레이션 R(X)와 S(Y)가 있을 때, R의 속성이 S의 속성값을 모두 가진 튜플에서 S가 가진 속성을 제외한 속성만을 구하는 연산",관계대수 및 관계해석,
합병 조건,__하려는 두 릴레이션 간에 속성의 수가 같고 대응되는 속성별로 도메인이 같아야하는 조건,관계대수 및 관계해석,
Union,"두 릴레이션에 존재하는 튜플의 합집합을 구하되, 결과로 생성된 릴레이션에서 중복되는 튜플은 제거되는 연산",관계대수 및 관계해석,
Intersection,두 릴레이션에 존재하는 튜플의 교집합을 구하는 연산,관계대수 및 관계해석,
Difference,두 릴레이션에 존재하는 튜플의 차집합을 구하는 연산,관계대수 및 관계해석,
Cartesian product,두 릴레이션에 있는 튜플들의 순서쌍을 구하는 연산,관계대수 및 관계해석,
관계해석,"관계 데이터의 연산을 표현하는 방법으로, 원하는 정보를 정의할 때는 계산 수식을 사용한다.",관계대수 및 관계해석,
전칭 정량자,∀ 가능한 모든 튜플에 대하여,관계대수 및 관계해석,
존재 전량자,∃ 하나라도 일치하는 튜플이 있음,관계대수 및 관계해석,
정규화,"종속성 이론을 이용하여 잘못 설계된 관계형 스키마를 더 작은 속성의 세트로 쪼개어 바람직한 스키마로 만들어 가는 과정, 차수가 높아질수록 만족시켜야할 제약 조건이 늘어난다.",정규화,
논리적 설계 단계,데이터베이스의 정규화가 수행되는 시점,정규화,
이상,정규화를 거치지 않으면 데이터베이스 내에 데이터들이 불필요하게 중복되어 릴레이션 조작 시 예기치 못한 곤란한 현상,정규화,
삽입 이상,릴레이션에 데이터를 삽입할 때 의도와는 상관없이 원하지 않은 값들도 함께 삽입되는 현상,정규화,
삭제 이상,릴레이션에서 한 튜플을 삭제할 때 의도와는 상관 없는 값들도 함께 삭제되는 연쇄가 일어나는 현상,정규화,
갱신 이상,릴레이션에서 튜플에 있는 속성값을 갱신할 때 일부 튜플의 정보만 갱신되어 정보에 모순이 생기는 현상,정규화,
무손실 표현,하나의 스키라를 다른 스키마로 변환할 때 정보의 손실이 있어서는 안된다,정규화의 원칙,
분리의 원칙,하나의 독립된 관계성은 하나의 독립된 릴레이션으로 분리시켜 표현해야한다.,정규화의 원칙,
1NF,릴레이션에 속한 모든 도메인이 원자값만으로 되어있는 정규형,정규화,
2NF,기본키가 아닌 모든 속성이 기본키에 대하여 완전 함수적 종속을 만족하는 정규형(부분적 종속 함수를 제거한 상태),정규화,
3NF,기본키가 아닌 모든 속성이 기본키에 대해 이행적 종속을 만족하지 않는 정규형,정규화,
BCNF,"결정자가 모두 후보키인 정규형, 강한 제3정규형이라고도 함. 키가 아닌 모든 속성은 각 키에 대해 완전 종속해야함.",정규화,Boyce-Codd
4NF,다치 종속 A -> B가 성립하는 경우 모든 속성이 A에 함수적 종속 관계를 만족하는 정규형,정규화,
5NF,릴레이션 R의 모든 조인 종속이 R의 후보키를 통해서만 성립되는 정규형,정규화,
함수적 종속,"데이터들이 어떤 기준값에 의해 종속되는 것을 의미, 학번 -> 이름, 완전 __ / 부분 __ 구분됨",정규화,
이행적 종속,"A->B 이고 B->C 일 때, A -> C를 만족하는 관계",정규화,
결정자,"속성 간의 종속성을 규명할 때 기준이 되는 값 (학번에 따라 이름이 결정되는 경우, '학번' 포지션)",정규화,Determinant
종속자,"결정자에 의해 정해지는 값을 의미함 (학번에 따라 이름이 결정되는 경우, '이름' 포지션)",정규화,Dependent
다치 종속,"A, B, C 3개의 속성을 가진 릴레이션 R에서 어떤 복합 속성(A, C)에 대응하는 B의 값이 A 값에만 종속되고 C 값에는 무관하면 B는 A에 다치 종속이라하고 'A ->> B'로 표기",정규화,Multi Valued Dependency
조인 종속,"릴레이션 R의 속성에 대한 부분집합 A, B, ∙ ∙ ∙, C 가 있다고 할 때, A, B, ∙ ∙ ∙, C를 모두 조인한 결과가 자신과 동일한 경우 릴레이션 R은 ___ 를 만족한다고 한다",정규화,Join Dependency
반정규화,"시스템의 성능 향상, 개발 및 운영의 편의성 등을 위해 정규화된 데이터 모델을 통합, 중복, 분리하는 과정",반정규화,
테이블 통합,두 개의 테이블이 조인되는 경우가 많아 하나의 테이블로 합쳐 사용하는 것이 성능 향상에 도움이 될 경우 수행,반정규화,
테이블 분할,"수평 / 수직으로 __ 하는 방법이 있으며, 각각 레코드별로 사용빈도가 큰 경우 사용빈도에 따라 혹은 속성이 너무 많을 경우 속성을 기준으로 __ 하는 것을 의미한다.",반정규화,
중복 테이블 추가,"여러 테이블에서 데이터를 추출해서 사용해야하거나 다른 서버에 저장된 테이블을 이용할 경우, __ 시행하여 작업의 효율성을 향상시킬 수 있다.",반정규화,
집계 테이블의 추가,"__를 위한 테이블을 생성하고, 각 원본 테이블에 트리거를 설정하여 사용하는 것, 트리거의 오버헤드에 유의한다.",반정규화,
진행 테이블의 추가,"이력 관리 등의 목적으로 추가하는 테이블로, 적절한 데이터 양의 유지와 활용도를 높이기 위해 기본키를 적절히 설정",반정규화,
중복 속성 추가,데이터를 처리할 때 데이터를 조회하는 경로를 단축하기 위해 자주 사용하는 속성을 하나 더 추가하는 것,반정규화,
시스템 카탈로그,시스템과 관련 있는 다양한 객체에 관한 정보를 포함하는 시스템 데이터베이스,시스템 카탈로그,
메타 데이터,"시스템 카탈로그에 저장된 정보를 지칭함, 유형에 따라 데이터베이스 객체 정보, 사용자 정보, 무결성 제약 조건 정보 등이 있음",시스템 카탈로그,
카탈로그의 갱신,"사용자가 SQL문을 실행시켜 기본 테이블, 뷰, 인덱스 등에 변화를 주면 시스템이 자동으로 갱신한다",시스템 카탈로그,
분산 시스템에서의 카탈로그,"보통은 릴레이션, 인덱스, 사용자 등의 정보를 포함할 뿐 아니라 위치 투명성 및 중복 투명성을 제공하기 위해 필요한 모든 제어 정보를 가진다.",시스템 카탈로그,
DDL compiler,데이터 정의어를 메타 데이터를 갖는 테이블로 변환하여 데이터 사전에 저장시킨다,시스템 카탈로그,
DML compiler,응용 프로그램에 삽입된 ___ 문을 주 언어로 표현한 프로시저 호출로 변환하여 질의 처리기와 상호 통신한다,시스템 카탈로그,
Data Dictionary,"데이터를 실제로 접근하는데 필요한 정보를 관리 유지하는 시스템, 시스템 카탈로그와는 다르게 ___는 시스템만 접근할 수 있다",시스템 카탈로그,
질의 최적화기,사용자의 요구를 효율적인 형태로 변환하고 질의를 처리하는게 좋은 전략을 모색한다,시스템 카탈로그,
트랜잭션 처리기,복수 사용자 환경에서 평행으로 동시에 일어나는 ___ 문제를 해결하여 각각의 사용자가 데이터베이스 자원을 배타적으로 이용할 수 있도록 한다.,시스템 카탈로그,
저장 레코드,물리적 데이터베이스 구조의 기본적인 데이터 단위,물리 데이터베이스 설계,
물리적 설계 시 고려사항,"인덱스 구조, 레코드 크기, 파일에 존재하는 레코드 개수, 파일에 대한 트랜잭션의 갱신과 참조 성향, 성능 향상을 위한 개념 스키마의 변경 여부 검토, 빈번한 질의와 트랜잭션들의 수행속도를 높이기 위한 고려, 시스템 운용 시 파일 크기의 변화 가능성",물리 데이터베이스 설계,
트랜잭션,데이터베이스의 상태를 변환시키는 하나의 논리적 기능을 수행하기 위한 작업의 단위 또는 한꺼번에 모두 수행되어야할 일련의 연산들을 의미,물리 데이터베이스 설계,
개념 스키마,"데이터베이스의 전체적인 논리적 구조로서, 모든 응용 프로그램이나 사용자들이 필요로하는 데이터를 종합한 조직 전체의 데이터베이스로 하나만 존재함",물리 데이터베이스 설계,
반응시간,트랜잭션 수행을 요구한 시점으로부터 처리 결과를 얻을 때까지의 경과 시간,물리 데이터베이스 설계,
공간 활용도,데이터베이스 파일과 액세스 경로 구조에 의해 사용되는 저장 공간의 양,물리 데이터베이스 설계,
트랜잭션 처리량,단위시간 동안 데이터베이스 시스템에 의해 처리될 수 있는 트랜잭션의 평균 개수,물리 데이터베이스 설계,
데이터 명명 규칙,"데이터 표준화 및 논리 데이터베이스 설계의 결과물 등을 통해 파악, 일관성을 유지하고, 도메인과 데이터 사전에 대한 지식 필요",물리 데이터베이스 설계,
데이터 표준화,"데이터 정보 요소에 대한 명칭, 정의, 형식, 규칙에 대한 원칙을 수립하여 전체 시스템에 적용하는 것",물리 데이터베이스 설계,
도메인,"객체에 포함된 속성들의 데이터 타입, 크기 등을 표준화 규칙에 따라 일관성 있게 정의한 것",물리 데이터베이스 설계,
데이터 사전,"전체 프로젝트 과정에서 일관성 있는 데이터 이름과 인터페이스를 제공하기 위해 데이터 속성의 논리명, 물리명, 용어정의를 기술해 놓은 것",물리 데이터베이스 설계,
시스템 자원,데이터베이스 설치에 영향을 미칠 수 있는 물리적인 요소들로 사전에 미리 피악 필요,물리 데이터베이스 설계,
하드웨어 자원,"중앙처리장치, 메모리, 디스크, I/O controller, 네트워크 등의 물리적 요소",물리 데이터베이스 설계,
데이터베이스 관리 요소,"데이터베이스 시스템의 환경에 따라 달라질 수 있으므로 __ 파악 후 이를 기반으로 데이터베이스 시스템 조사 분석서를 작성한다. 파악할 것 : 데이터베이스 구조, 이중화 구성, 분산 데이터베이스, 접근 제어/통제, 암호화",물리 데이터베이스 설계,
테이블,데이터베이스의 가장 기본적인 객체로 로우와 컬럼으로 구성됨,데이터베이스 저장공간 설계,
일반 테이블,"현재 사용하는 대부분의 DBMS 에서 표준으로 사용되는 테이블 형태, Row 위치는 속성 값에 상관없이 데이터가 저장되는 순서에 따라 결정됨",데이터베이스 저장공간 설계,
클러스터드 인덱스 테이블,Primary key나 Index key의 순서에 따라 데이터가 저장되는 테이블,데이터베이스 저장공간 설계,
파티셔닝 테이블,"대용량의 테이블을 작은 논리적 단위인 파티션으로 나눈 테이블, 대용량의 데이터를 효과적으로 관리할 수 있지만, 키를 잘못 구성할 경우 성능 저하 등의 역효과를 초래할 수 있음",데이터베이스 저장공간 설계,
외부 테이블,"데이터베이스에서 일반 테이블처럼 이용할 수 있는 외부 파일로, 데이터베이스 내에 객체로 존재한다",데이터베이스 저장공간 설계,
임시 테이블,"트랜잭션이나 세션별로 데이터를 저장하고 처리할 수 있는 테이블로, 트랜잭션이 종료되면 삭제됨, 절차적인 처리를 위해 __ 사용함",데이터베이스 저장공간 설계,
컬럼,"테이블의 열을 구성하는 요소로 데이터 타입, 길이 등으로 정의함.",데이터베이스 저장공간 설계,
테이블스페이스,,데이터베이스 저장공간 설계,Tablespace
데이터웨어하우스,"조직이나 기업체의 중심이 되는 주요 업무 시스템에서 추출되어 새로이 생성된 데이터베이스로서, 의사결정지원 시스템을 지원하는 주체적, 통합적, 시간적 데이터의 집합체를 말함",데이터베이스 저장공간 설계,Data Warehouse
ETL,"데이터웨어하우스를 사용하여 추출, 변환, 적재하는 일련의 모든 과정을 의미함",데이터베이스 저장공간 설계,"Extraction, Transmission, Loading"
