concept,meaning,category,fullName
데이터베이스 설계,사용자의 요구를 분석하여 그것을 컴퓨터에 저장할 수 있는 데이터베이스의 구조에 맞게 변형한 후 특정 DBMS로 데이터베이스를 구현하여 일반 사용자들이 사용하게 하는 것,데이터베이스 설계,
무결성,"삽입, 삭제, 갱신 등의 연산 후에도 데이터베이스에 저장된 데이터가 정해진 제약 조건을 항상 만족해야한다",데이터베이스 설계 시 고려사항,
일관성,"데이터베이스에 저장된 데이터들 사이나, 특정 질의에 대한 응답이 처음부터 끝까지 변함없이 일정해야한다.",데이터베이스 설계 시 고려사항,
회복,시스템에 장애가 발생했을 때 장애 발생 직전의 상태로 복구할 수 있어야한다.,데이터베이스 설계 시 고려사항,
보안,불법적인 데이터의 노출 또는 변경이나 손실로부터 보호할 수 있어야한다.,데이터베이스 설계 시 고려사항,
효율성,"응답시간의 단축, 시스템의 생산성, 저장 공간의 최적화 등이 가능해야한다.",데이터베이스 설계 시 고려사항,
데이터베이스 확장,데이터베이스 운영에 영향을 주지 않으면서 지속적으로 데이터를 추가할 수 있어야한다.,데이터베이스 설계 시 고려사항,
요구 조건 분석,데이터베이스 설계 때 하는 일 : 요구 조건 명세서 작성,데이터베이스 설계 순서,
개념적 설계,"데이터베이스 설계 때 하는 일 : 개념 스키마, 트랜잭션 모델링, E-R 모델",데이터베이스 설계 순서,
논리적 설계,"데이터베이스 설계 때 하는 일 : 목표 DBMS에 맞는 논리 스키마 설계, 트랜잭션 인터페이스 설계",데이터베이스 설계 순서,
물리적 설계,데이터베이스 설계 때 하는 일 : 목표 DBMS에 맞는 물리적 구조의 데이터로 변환,데이터베이스 설계 순서,
구현,"데이터베이스 설계 때 하는 일 : 목표 DBMS의 DDL(데이터 정의어)로 데이터베이스 생성, 트랜잭션 작성",데이터베이스 설계 순서,
요구 조건 분석,"데이터베이스를 사용할 사람들로부터 필요한 용도를 파악하는 것, 데이터 사용자에 따른 수행 업무와 필요한 데이터의 종류, 용도, 처리 형태, 흐름, 제약 조건 등을 수집하고, 이를 바탕으로 요구 조건 명세를 작성한다.",데이터베이스 설계 순서,
개념적 설계,"정보의 구조를 얻기 위하여 현실 세계의 무한성과 계속성을 이해하고, 다른 사람과 통신하기 위하여 현실 세계에 대한 인식을 추상적 개념으로 표현하는 과정이다. 개념스키마 모델링, 트랜잭션 모델링을 병행 수행하고, DBMS 독립적인 E-R 다이어그램, 개념 스키마를 설계한다.",데이터베이스 설계,
논리적 설계,"현실 세계에서 발생하는 자료를 컴퓨터가 이해하고 처리할 수 있는 물리적 저장장치에 저장할 수 있도록 변환하기 위해 특정 DBMS가 지원하는 논리적 자료 구조를 변환시키는 과정이다. 개념 스키라를 평가, 정제하여 DBMS마다 다른 논리적 스키마를 설게한다. 트랜잭션의 인터페이스를 설계한다. RDBMS의 경우 테이블을 설계하는 단계이다.",데이터베이스 설계,
물리적 설계(데이터베이스 설계),"논리적 구조로 표현된 데이터들을 디스크 등의 물리적 저장장치에 저장할 수 있는 물리적 구조의 데이터로 변환하는 과정이다. 데이터베이스 파일의 저장 구조 및 엑세스 경로를 결정한다. 저장 레코드의 양식, 순서, 접근 정보 등에 대한 방법을 묘사한다. 트랜잭션 처리량, 응답시간, 용량, 저장공간의 효율화 등을 고려한다.",데이터베이스 설계,
데이터베이스 구현(데이터베이스 설계),"DDL 을 이용하여 데이터베이스 스키마를 기술한 후 컴파일 하여 빈 데이터베이스 파일을 생성한다. 빈 데이터베이스 파일에 데이터를 입력하고, 응용 프로그램을 위한 트랜잭션을 작성한다.",데이터베이스 설계,
데이터 모델,"현실 세계의 정보들을 컴퓨터에 표현하기 위해서 단순화, 추상화하여 체계적으로 표현한 개념적 모형",데이터 모델,
개체,"데이터베이스에 표현하려는 것으로, 사람이 생각하는 개념이나 정보 같은 현실 세계의 대상체",데이터 모델 구성 요소,
속성,데이터의 가장 작은 논리적 단위로서 파일 구조상의 데이터 항목 또는 필드에 해당한다.,데이터 모델 구성 요소,
관계,개체 간의 관계 또는 속성 간의 논리적인 연결을 의미한다.,데이터 모델 구성 요소,
개념적 데이터 모델,"현실 세계에 대한 인간의 이해를 돕기 위해 현실 세계에 대한 인식을 추상적 개념으로 표현하는 과정, ___ 모델은 속성들로 기술된 개체 타입과 이 개체 타입들 간의 관계를 이용하여 현실 세계를 표현한다. 대표적으로 E-R 모델이 있다. 인간이 이해할 수 있는 정보 구조로 표현하기 때문에 정보 모델이라고도 한다.",데이터 모델,
논리적 데이터 모델,"개념적 모델링 과정에서 얻은 개념적 구조를 컴퓨터가 이해하고 처리할 수 있는 컴퓨터 세계의 환경에 맞도록 변환하는 과정, ___ 모델은 필드로 기술된 데이터 타입과 이 데이터 타입들 간의 관계를 이용하여 현실 세계를 표현한다. 특정 DBMS는 특정 논리적 데이터 모델 하나만 선정하여 사용한다. 데이터간의 관계를 어떻게 표현하느냐에 따라 관계 모델, 계층 모델, 네트워크 모델로 구분한다.",데이터 모델,
개체 품질 검증 항목,"논리 데이터 모델이 기업에 적합한지 확인하기 위해 품질을 검증하는 것이다. 개체, 속성, 관계, 식별자, 모델 전반 등에 대하여 검토 체크리스트를 작성하고, 체크리스트의 각 항목을 확인하는 방식으로 검증한다.",논리적 데이터 모델의 품질 검증,
속성 품질 검증 항목,"단수 명사 여부, 속성의 값 존재 여부 및 개수, 도메인 정의, 반복되는 속성, 그룹화 가능 속성, 주 식별자 및 비 식별자에 의존하는 속성, 다치종속 속성 등",논리적 데이터 모델의 품질 검증,
관계 품질 검증 항목,"관계의 명칭, 2개 이상의 노드와 관계 존재 여부, 노드의 기수성과 선택성, 필수적 관계, 유효한 관계, 중복된 관계, 외부식별자 존재 여부, 참조 무결성 여부 등",논리적 데이터 모델의 품질 검증,
식별자 품질 검증 항목,"식별자의 명칭, 정의, 구성, 정합성, 크기, 순서 등",논리적 데이터 모델의 품질 검증,
전반적인 품질 검증 항목,"주제 영역 구성의 적절성, 데이터 모델 상에 정규화 여부, 다대다 관계 해소 여부, 이력 관리 대상 선정 확인, 이력 관리 방법의 적절성 확인",논리적 데이터 모델의 품질 검증,
구조,논리적으로 표현된 개체 타입들 간의 관계로서 데이터 구조 및 정적 성질을 표현한다.,데이터 모델에 표시할 요소,
연산,데이터베이스에 저장된 실제 데이터를 처리하는 작업에 대한 명세로서 데이터베이스를 조작하는 기본 도구다.,데이터 모델에 표시할 요소,
제약 조건,데이터베이스에 저장될 수 있는 실제 데이터의 논리적인 제약 조건이다.,데이터 모델에 표시할 요소,
개체 선정 방법,업무 분석에 관한 내용을 구체적으로 설명한 업무 기술서를 이용한다. 실제 업무를 담당하고 있는 담당자와 인터뷰를 한다. 업무 기술서와 인터뷰에서 확인하지 못한 정보가 있는지 실제 업무를 직접 견학하여 확인한다. 실제 업무에 사용되고 있는 장부와 전표를 이용한다.,데이터 모델 - 개체,
BPR,"기업이 경쟁에서 우위를 확보하기 위해 기업의 핵심 부문인 비용, 품질, 서비스, 스피드와 같은 요인들이 획기적인 향상을 이룰 수 있도록, 프로세스를 기반으로 비즈니스 시스템을 근본적으로 재설계하여 혁신적인 성과를 추구하는 것",개체 선정 방법,Business Process Reengineering
DFD,요구사항 분석에서 자료의 흐름 및 변환 과정과 기능을 도형,개체 선정 방법,Data Flow Diagram
Data Store,"시스템에서의 자료 저장소(파일, 데이터베이스)를 의미함",개체 선정 방법,
속성,"데이터베이스를 구성하는 가장 작은 논리적 단위, 파일 구조상의 데이터 항목 또는 데이터 필드에 해당, 개체를 구성하는 항목, 개체의 특성을 기술한다.",데이터 모델 - 속성,
기본 속성,"업무 분석을 통해 정의한 속성, 가장 많고 일반적임, 업무로부터 분석한 속성 이더라도, 업무상 코드로 정의한 속성은 __에서 제외함",데이터 모델 - 속성,
설계 속성,"원래 업무상 존재하지 않고, __ 과정에서 도출해내는 속성, 업무에 필요한 데이터 외에 데이터 모델링을 위해 업무를 규칙화하려고 속성을 새로 만들거나 변형하여 정의하는 속성이다.",데이터 모델 - 속성,
파생 속성,"다른 속성으로부터 계산이나 변형 등의 영향을 받아 발생하는 속성, 되도록 적은 수를 정의함",데이터 모델 - 속성,
원시 속성,다른 속성을 통해 다시 재현할 수 없는 속성을 의미함. __ 속성을 버리면 해당 속성 정보가 완전히 소실되므로 버릴 수 없음,데이터 모델 - 속성,
기본키 속성,개체를 식별할 수 있는 속성,데이터 모델 - 속성,
외래키 속성,다른 개체와의 관계에서 포함되는 속성,데이터 모델 - 속성,
1:1 관계,개체 집합 A의 각 원소가 개체 집합 B 원소 한 개와 대응하는 관계,데이터 모델 - 관계,
1:N 관계,"개체 집합 A의 각 원소는 개체 집합 B의 원소 여러 개와 대응하고 있지만, 개체 집합 B의 각 원소는 개체 집합 A의 원소 한 개와 대응하는 관계이다.",데이터 모델 - 관계,
N:N 관계,"개체 집합 A의 각 원소는 개체 집합 B의 원소 여러 개와 대응하고, 개체 집합 B의 각 원소도 개체 집합 A의 원소 여러 개와 대응하는 관계이다.",데이터 모델 - 관계,
종속 관계,"두 개체 사이의 주 ・ 종 관계를 표현한 것으로, 식별 관계와 비식별 관계가 있다.",데이터 모델 - 관계,
중복 관계,두 개체 사이에 2번 이상의 종속 관계가 발생하는 관계이다.,데이터 모델 - 관계,
재귀 관계,개체가 자기 자신과 관계를 갖는 것으로 순환 관계라고도 한다.,데이터 모델 - 관계,
배타 관계,"개체의 속성이나 구분자를 기준으로 개체의 특성을 분할하는 관계로 배타 AND, OR 관계로 구분한다. ",데이터 모델 - 관계,
식별 관계,"개체 A, B 사이의 관계에서 A 개체의 기본키가 B개체의 외래키이면서 동시에 기본키가 되는 관계, B 개체의 존재 여부가 A 개체의 존재 여부에 의존적인 경우에 발생함, E-R 도형에서는 실선으로 표시함",데이터 모델 - 관계,
비식별 관계,"A개체의 기본키가 B개체의 비기본키 영역에서 외래키가 되는 관계, B개체는 A 개체의 조냊 여부와 관계없이 존재함",데이터 모델 - 관계,
주 식별자,개체를 대표하는 유일한 식별자,식별자,Primary Identifier
보조 식별자,"주 식별자를 대신하여 개체를 식별할 수 있는 속성, 일반적으로 유니크 인덱스로 지정되어 사용함",식별자,Alternative Identifier
내부 식별자,개체 내에서 스스로 만들어지는 식별자,식별자,Internal Identifier
외부 식별자,다른 개체와의 관계에 의해 결정되는 식별자. 자신의 개체에서 다른 개체를 찾아가는 연결자 역할을 함,식별자,Foreign Identifier
단일 식별자,한 가지 속성으로만 구성된 식별자,식별자,Single Identifier
복합 식별자,두 개 이상의 속성으로 구성된 식별자,식별자,Composit Identifier
원조 식별자,"업무에 의해 만들어지는 가공되지 않은 원래의 식별자, 본질 식별자라고도 함",식별자,Original Identifier
대리 식별자,주 식별자의 속성이 두 개 이상인 경우 속성들을 하나의 속성으로 묶어 사용하는 식별자로 인조 식별자라고도 함,식별자,Surrogate Identifier
피터 첸,E-R 모델 만든사람,E-R모델,
E-R모델,개체 타입과 이들 간의 관계 타입을 이용하여 현실 세계를 개념적으로 표현한다,E-R모델,
사각형,개체 타입,E-R모델,
마름모,관계 타입,E-R모델,
타원,속성,E-R모델,
이중 타원,다중값 속성,E-R모델,
밑줄 타원,기본키 속성,E-R모델,
복수 타원,복합 속성,E-R모델,
관계,"1:1, 1:N, N:M 등의 개체 간 관계에 대한 대응수를 선위에 기술함",E-R모델,
선(링크),개체 타입과 속성을 연결,E-R모델,
관계형 데이터 모델,"2차원적인 표를 이용해서 데이터 상호 관계를 정의하는 DB구조, 테이블 내에 있는 속성들 간의 관계를 설정하거나 테이블 간의 관계를 설정하여 이용한다.",관계형 데이터 모델,
릴레이션,"관계형 데이터베이스를 구성하는 개체나 관계를 아울러 이르는 말, 표로 표현함",관계형 데이터 모델,
튜플,"릴레이션을 구성하는 각각의 행, 속성의 모임으로 구성됨",관계형 데이터 모델,
Cardinality,"기수, 대응수라고도 하며, 튜플의 수를 의미한다.(=row)",관계형 데이터 모델,
속성,"데이터베이스를 구성하는 가장 작은 논리적 단위, 파일 구조상의 데이터 항목 또는 필드에 해당함. 개체의 속성을 기술한다",관계형 데이터 모델,
Degree,"차수라고도 하며, 속성의 수를 의미한다.(=col)",관계형 데이터 모델,
Domain,하나의 Attribute가 취할 수 있는 같은 타입의 원자값들의 집합임,관계형 데이터 모델,
후보키,"릴레이션을 구성하는 속성들 중에서 튜플을 유일하게 식별하기 위해 사용하는 속성들의 부분집합, 기본키로 사용할 수 있는 속성들을 의미함. 유일성과 최소성을 만족시켜야함",관계형 데이터베이스의 제약 조건,
유일성,하나의 키 값으로 하나의 튜플만을 유일하게 식별할 수 있어야한다.,관계형 데이터베이스의 제약 조건,
최소성,모든 레코드들을 유일하게 식별하는데 꼭 필요한 속성으로만 구성되어야 한다.,관계형 데이터베이스의 제약 조건,
기본키,"후보키 중에서 특별히 선정된 주(Main Key)로 중복된 값을 가질 수 없다., Null 값을 가질 수 없다.",관계형 데이터베이스의 제약 조건,
대체키,후보키가 둘 이상일 때 기본키를 제외한 나머지 후보키를 의미한다.,관계형 데이터베이스의 제약 조건,
슈퍼키,"한 릴레이션 내에 있는 속성들의 집합으로 구성된 키로서 릴레이션을 구성하는 모든 튜플들 중 슈퍼키로 구성된 속성의 집합과 동일한 값은 나타나지 않는다. 릴레이션에 대해 모든 튜플에 대해 유일성은 만족시키지만, 최소성은 만족시키지 못함",관계형 데이터베이스의 제약 조건,
외래키,"다른 릴레이션의 기본키를 참조하는 속성 또는 속성들의 집합을 의미함, __로 지정되면 참조 릴레이션의 기본키에 없는 값은 입력할 수 없다.",관계형 데이터베이스의 제약 조건,
무결성,"데이터베이스에 저장된 데이터 값과 그것이 표현하는 현실 세계의 실제 값이 일치하는 정확성을 의미한다. 데이터의 정확성, 일관성을 유지하는 것",관계형 데이터베이스의 제약 조건,
개체 무결성,기본 테이블의 기본키를 구성하는 어떤 속성도 NULL 값이나 중복 값을 가질 수 없다는 규정,관계형 데이터베이스의 제약 조건,
도메인 무결성,주어진 속성 값이 정의된 도메인에 속한 값이어야한다는 규정,관계형 데이터베이스의 제약 조건,
참조 무결성,외래키 값은 Null이거나 참조 릴레이션의 기본키 값과 동일해야한다. 릴레이션은 참조할 수 없는 외래키 값을 가질 수 없다는 규정,관계형 데이터베이스의 제약 조건,
사용자 정의 무결성,속성 값들이 사용자가 정의한 제약 조건에 만족해야 한다는 규정,관계형 데이터베이스의 제약 조건,
관계대수,관계형 데이터베이스에서 원하는 정보와 그 정보를 검색하기 위해서 어떻게 유도하는가를 기술한 절차적 언어,관계대수 및 관계해석,
순수 관계 연산자,관계 데이터베이스를 적용하기 위해 특별히 개발한 __ 연산자,관계대수 및 관계해석,
일반 집합 연산자,수학적 __ 이론에서 사용하는 일반 __ 연산자,관계대수 및 관계해석,
Select,릴레이션에 존재하는 튜플 중에서 선택 조건을 만족하는 튜플의 부분집합을 구하여 새로운 릴레이션을 만드는 연산,관계대수 및 관계해석,
Project,"주어진 릴레이션에서 속성 리스트에 제시된 속성 값만을 추출하여 새로운 릴레이션을 만드는 연산, 연산 결과에 중복이 발생하면 중복이 제거됨",관계대수 및 관계해석,
Join,공통 속성을 중심으로 두 개의 릴레이션을 하나로 합쳐서 새로운 릴레이션을 만드는 연산,관계대수 및 관계해석,
Division,"두 개의 릴레이션 R(X)와 S(Y)가 있을 때, R의 속성이 S의 속성값을 모두 가진 튜플에서 S가 가진 속성을 제외한 속성만을 구하는 연산",관계대수 및 관계해석,
합병 조건,__하려는 두 릴레이션 간에 속성의 수가 같고 대응되는 속성별로 도메인이 같아야하는 조건,관계대수 및 관계해석,
Union,"두 릴레이션에 존재하는 튜플의 합집합을 구하되, 결과로 생성된 릴레이션에서 중복되는 튜플은 제거되는 연산",관계대수 및 관계해석,
Intersection,두 릴레이션에 존재하는 튜플의 교집합을 구하는 연산,관계대수 및 관계해석,
Difference,두 릴레이션에 존재하는 튜플의 차집합을 구하는 연산,관계대수 및 관계해석,
Cartesian product,두 릴레이션에 있는 튜플들의 순서쌍을 구하는 연산,관계대수 및 관계해석,
관계해석,"관계 데이터의 연산을 표현하는 방법으로, 원하는 정보를 정의할 때는 계산 수식을 사용한다.",관계대수 및 관계해석,
전칭 정량자,∀ 가능한 모든 튜플에 대하여,관계대수 및 관계해석,
존재 전량자,∃ 하나라도 일치하는 튜플이 있음,관계대수 및 관계해석,
정규화,"종속성 이론을 이용하여 잘못 설계된 관계형 스키마를 더 작은 속성의 세트로 쪼개어 바람직한 스키마로 만들어 가는 과정, 차수가 높아질수록 만족시켜야할 제약 조건이 늘어난다.",정규화,
논리적 설계 단계,데이터베이스의 정규화가 수행되는 시점,정규화,
이상,정규화를 거치지 않으면 데이터베이스 내에 데이터들이 불필요하게 중복되어 릴레이션 조작 시 예기치 못한 곤란한 현상,정규화,
삽입 이상,릴레이션에 데이터를 삽입할 때 의도와는 상관없이 원하지 않은 값들도 함께 삽입되는 현상,정규화,
삭제 이상,릴레이션에서 한 튜플을 삭제할 때 의도와는 상관 없는 값들도 함께 삭제되는 연쇄가 일어나는 현상,정규화,
갱신 이상,릴레이션에서 튜플에 있는 속성값을 갱신할 때 일부 튜플의 정보만 갱신되어 정보에 모순이 생기는 현상,정규화,
무손실 표현,하나의 스키라를 다른 스키마로 변환할 때 정보의 손실이 있어서는 안된다,정규화의 원칙,
분리의 원칙,하나의 독립된 관계성은 하나의 독립된 릴레이션으로 분리시켜 표현해야한다.,정규화의 원칙,
1NF,릴레이션에 속한 모든 도메인이 원자값만으로 되어있는 정규형,정규화,
2NF,기본키가 아닌 모든 속성이 기본키에 대하여 완전 함수적 종속을 만족하는 정규형(부분적 종속 함수를 제거한 상태),정규화,
3NF,기본키가 아닌 모든 속성이 기본키에 대해 이행적 종속을 만족하지 않는 정규형,정규화,
BCNF,"결정자가 모두 후보키인 정규형, 강한 제3정규형이라고도 함. 키가 아닌 모든 속성은 각 키에 대해 완전 종속해야함.",정규화,Boyce-Codd
4NF,다치 종속 A -> B가 성립하는 경우 모든 속성이 A에 함수적 종속 관계를 만족하는 정규형,정규화,
5NF,릴레이션 R의 모든 조인 종속이 R의 후보키를 통해서만 성립되는 정규형,정규화,
함수적 종속,"데이터들이 어떤 기준값에 의해 종속되는 것을 의미, 학번 -> 이름, 완전 __ / 부분 __ 구분됨",정규화,
이행적 종속,"A->B 이고 B->C 일 때, A -> C를 만족하는 관계",정규화,
결정자,"속성 간의 종속성을 규명할 때 기준이 되는 값 (학번에 따라 이름이 결정되는 경우, '학번' 포지션)",정규화,Determinant
종속자,"결정자에 의해 정해지는 값을 의미함 (학번에 따라 이름이 결정되는 경우, '이름' 포지션)",정규화,Dependent
다치 종속,"A, B, C 3개의 속성을 가진 릴레이션 R에서 어떤 복합 속성(A, C)에 대응하는 B의 값이 A 값에만 종속되고 C 값에는 무관하면 B는 A에 다치 종속이라하고 'A ->> B'로 표기",정규화,Multi Valued Dependency
조인 종속,"릴레이션 R의 속성에 대한 부분집합 A, B, ∙ ∙ ∙, C 가 있다고 할 때, A, B, ∙ ∙ ∙, C를 모두 조인한 결과가 자신과 동일한 경우 릴레이션 R은 ___ 를 만족한다고 한다",정규화,Join Dependency
반정규화,"시스템의 성능 향상, 개발 및 운영의 편의성 등을 위해 정규화된 데이터 모델을 통합, 중복, 분리하는 과정",반정규화,
테이블 통합,두 개의 테이블이 조인되는 경우가 많아 하나의 테이블로 합쳐 사용하는 것이 성능 향상에 도움이 될 경우 수행,반정규화,
테이블 분할,"수평 / 수직으로 __ 하는 방법이 있으며, 각각 레코드별로 사용빈도가 큰 경우 사용빈도에 따라 혹은 속성이 너무 많을 경우 속성을 기준으로 __ 하는 것을 의미한다.",반정규화,
중복 테이블 추가,"여러 테이블에서 데이터를 추출해서 사용해야하거나 다른 서버에 저장된 테이블을 이용할 경우, __ 시행하여 작업의 효율성을 향상시킬 수 있다.",반정규화,
집계 테이블의 추가,"__를 위한 테이블을 생성하고, 각 원본 테이블에 트리거를 설정하여 사용하는 것, 트리거의 오버헤드에 유의한다.",반정규화,
진행 테이블의 추가,"이력 관리 등의 목적으로 추가하는 테이블로, 적절한 데이터 양의 유지와 활용도를 높이기 위해 기본키를 적절히 설정",반정규화,
중복 속성 추가,데이터를 처리할 때 데이터를 조회하는 경로를 단축하기 위해 자주 사용하는 속성을 하나 더 추가하는 것,반정규화,
시스템 카탈로그,시스템과 관련 있는 다양한 객체에 관한 정보를 포함하는 시스템 데이터베이스,시스템 카탈로그,
메타 데이터,"시스템 카탈로그에 저장된 정보를 지칭함, 유형에 따라 데이터베이스 객체 정보, 사용자 정보, 무결성 제약 조건 정보 등이 있음",시스템 카탈로그,
카탈로그의 갱신,"사용자가 SQL문을 실행시켜 기본 테이블, 뷰, 인덱스 등에 변화를 주면 시스템이 자동으로 갱신한다",시스템 카탈로그,
분산 시스템에서의 카탈로그,"보통은 릴레이션, 인덱스, 사용자 등의 정보를 포함할 뿐 아니라 위치 투명성 및 중복 투명성을 제공하기 위해 필요한 모든 제어 정보를 가진다.",시스템 카탈로그,
DDL compiler,데이터 정의어를 메타 데이터를 갖는 테이블로 변환하여 데이터 사전에 저장시킨다,시스템 카탈로그,
DML compiler,응용 프로그램에 삽입된 ___ 문을 주 언어로 표현한 프로시저 호출로 변환하여 질의 처리기와 상호 통신한다,시스템 카탈로그,
Data Dictionary,"데이터를 실제로 접근하는데 필요한 정보를 관리 유지하는 시스템, 시스템 카탈로그와는 다르게 ___는 시스템만 접근할 수 있다",시스템 카탈로그,
질의 최적화기,사용자의 요구를 효율적인 형태로 변환하고 질의를 처리하는게 좋은 전략을 모색한다,시스템 카탈로그,
트랜잭션 처리기,복수 사용자 환경에서 평행으로 동시에 일어나는 ___ 문제를 해결하여 각각의 사용자가 데이터베이스 자원을 배타적으로 이용할 수 있도록 한다.,시스템 카탈로그,
저장 레코드,물리적 데이터베이스 구조의 기본적인 데이터 단위,물리 데이터베이스 설계,
물리적 설계 시 고려사항,"인덱스 구조, 레코드 크기, 파일에 존재하는 레코드 개수, 파일에 대한 트랜잭션의 갱신과 참조 성향, 성능 향상을 위한 개념 스키마의 변경 여부 검토, 빈번한 질의와 트랜잭션들의 수행속도를 높이기 위한 고려, 시스템 운용 시 파일 크기의 변화 가능성",물리 데이터베이스 설계,
트랜잭션,데이터베이스의 상태를 변환시키는 하나의 논리적 기능을 수행하기 위한 작업의 단위 또는 한꺼번에 모두 수행되어야할 일련의 연산들을 의미,물리 데이터베이스 설계,
개념 스키마,"데이터베이스의 전체적인 논리적 구조로서, 모든 응용 프로그램이나 사용자들이 필요로하는 데이터를 종합한 조직 전체의 데이터베이스로 하나만 존재함",물리 데이터베이스 설계,
반응시간,트랜잭션 수행을 요구한 시점으로부터 처리 결과를 얻을 때까지의 경과 시간,물리 데이터베이스 설계,
공간 활용도,데이터베이스 파일과 액세스 경로 구조에 의해 사용되는 저장 공간의 양,물리 데이터베이스 설계,
트랜잭션 처리량,단위시간 동안 데이터베이스 시스템에 의해 처리될 수 있는 트랜잭션의 평균 개수,물리 데이터베이스 설계,
데이터 명명 규칙,"데이터 표준화 및 논리 데이터베이스 설계의 결과물 등을 통해 파악, 일관성을 유지하고, 도메인과 데이터 사전에 대한 지식 필요",물리 데이터베이스 설계,
데이터 표준화,"데이터 정보 요소에 대한 명칭, 정의, 형식, 규칙에 대한 원칙을 수립하여 전체 시스템에 적용하는 것",물리 데이터베이스 설계,
도메인,"객체에 포함된 속성들의 데이터 타입, 크기 등을 표준화 규칙에 따라 일관성 있게 정의한 것",물리 데이터베이스 설계,
데이터 사전,"전체 프로젝트 과정에서 일관성 있는 데이터 이름과 인터페이스를 제공하기 위해 데이터 속성의 논리명, 물리명, 용어정의를 기술해 놓은 것",물리 데이터베이스 설계,
시스템 자원,데이터베이스 설치에 영향을 미칠 수 있는 물리적인 요소들로 사전에 미리 피악 필요,물리 데이터베이스 설계,
하드웨어 자원,"중앙처리장치, 메모리, 디스크, I/O controller, 네트워크 등의 물리적 요소",물리 데이터베이스 설계,
데이터베이스 관리 요소,"데이터베이스 시스템의 환경에 따라 달라질 수 있으므로 __ 파악 후 이를 기반으로 데이터베이스 시스템 조사 분석서를 작성한다. 파악할 것 : 데이터베이스 구조, 이중화 구성, 분산 데이터베이스, 접근 제어/통제, 암호화",물리 데이터베이스 설계,
테이블,데이터베이스의 가장 기본적인 객체로 로우와 컬럼으로 구성됨,데이터베이스 저장공간 설계,
일반 테이블,"현재 사용하는 대부분의 DBMS 에서 표준으로 사용되는 테이블 형태, Row 위치는 속성 값에 상관없이 데이터가 저장되는 순서에 따라 결정됨",데이터베이스 저장공간 설계,
클러스터드 인덱스 테이블,Primary key나 Index key의 순서에 따라 데이터가 저장되는 테이블,데이터베이스 저장공간 설계,
파티셔닝 테이블,"대용량의 테이블을 작은 논리적 단위인 파티션으로 나눈 테이블, 대용량의 데이터를 효과적으로 관리할 수 있지만, 키를 잘못 구성할 경우 성능 저하 등의 역효과를 초래할 수 있음",데이터베이스 저장공간 설계,
외부 테이블,"데이터베이스에서 일반 테이블처럼 이용할 수 있는 외부 파일로, 데이터베이스 내에 객체로 존재한다",데이터베이스 저장공간 설계,
임시 테이블,"트랜잭션이나 세션별로 데이터를 저장하고 처리할 수 있는 테이블로, 트랜잭션이 종료되면 삭제됨, 절차적인 처리를 위해 __ 사용함",데이터베이스 저장공간 설계,
컬럼,"테이블의 열을 구성하는 요소로 데이터 타입, 길이 등으로 정의함.",데이터베이스 저장공간 설계,
테이블스페이스,"테이블이 저장되는 논리적인 영역, 데이터베이스를 테이블, ___, 데이터 파일로 나눠 관리하면 논리적 구성이 물리적 구성에 종속되지 않아 투명성이 보장된다. ",데이터베이스 저장공간 설계,Tablespace
데이터웨어하우스,"조직이나 기업체의 중심이 되는 주요 업무 시스템에서 추출되어 새로이 생성된 데이터베이스로서, 의사결정지원 시스템을 지원하는 주체적, 통합적, 시간적 데이터의 집합체를 말함",데이터베이스 저장공간 설계,Data Warehouse
ETL,"데이터웨어하우스를 사용하여 추출, 변환, 적재하는 일련의 모든 과정을 의미함",데이터베이스 저장공간 설계,Extraction Transmission Loading
트랜잭션,데이터베이스의 상태를 변환시키는 하나의 논리적 기능을 수행하기 위한 작업의 단위 또는 한꺼번에 모두 수행되어야 할 일련의 연산들을 의미한다. 데이터의 무결성을 보장하기 위해 만들어졌다.,트랜잭션 정의,
활동,트랜잭션이 실행 중인 상태이다,트랜잭션 상태,Active
실패,트랜잭션 실행에 오류가 발생하여 중단된 상태이다,트랜잭션 상태,Failed
철회,트랜잭션이 비정상적으로 종료되어 Rollback 연산을 수행한 상태이다,트랜잭션 상태,Aborted
부분 완료,트랜잭션을 모두 성공적으로 실행한 후 Commit 연산이 실행되기 직전인 상태이다,트랜잭션 상태,Partially Committed
완료,트랜잭션을 모두 성공적으로 실행한 후 Commit 연산을 실행한 후의 상태이다,트랜잭션 상태,Committed
정확성,중복이나 누락이 없는 상태,트랜잭션 특성,
일관성,원인과 결과의 의미가 연속적으로 보장되어 변하지 않는 상태,트랜잭션 특성,
원자성,"트랜잭션의 연산은 데이터베이스에 모두 반영되도록 완료되든지 아니면 전혀 반영되지 않도록 복구되어야한다. 모든 명령은 반드시 완벽히 수행되어야하며, 모두가 완벽히 수행되지 않고 어느 하나라도 오류가 발생하면 트랜잭션 전부가 취소되어야 한다.",트랜잭션 특성,Atomicity
일관성,트랜잭션이 그 실행을 성공적으로 완료하면 언제나 일관성 있는 데이터베이스 상태로 변환한다. 시스템이 가지고 있는 고정 요소는 트랜잭션 수행 전과 수행 완료 후의 상태가 같아야 한다.,트랜잭션 특성,Consistency
독립성,둘 이상의 트랜잭션이 동시에 병행 실행되는 경우 어느 하나의 트랜잭션 실행 중에 다른 트랜잭션의 연산이 끼어들 수 없다. 수행중인 트랜잭션은 완전히 완료될 때까지 다른 트랜잭션에서 수행 결과를 참조할 수 없다.,트랜잭션 특성,Isolation
영속성,성공적으로 완료된 트랜잭션의 결과는 시스템이 고장나더라도 영구적으로 반영되어야 한다.,트랜잭션 특성,Durability
CRUD,"생성, 읽기, 갱신, 삭제의 앞 글자만 모아서 만든 용어, ___ 분석을 통해 부하가 집중되는 데이터베이스 채널을 파악하고 분산시킴으로써 연결 지연이나 타임아웃 오류를 방지할 수 있다.",CRUD,
CRUD 매트릭스,"2차원 형태의 표로서,  행에는 프로세스를, 열에는 테이블을, 행과 열이 만나는 위치에는 프로세스가 테이블에 발생시키는 변화를 표시하는 업무 프로세스와 데이터 간 상관 분석표이다",CRUD,
트랜잭션 분석,"CRUD 매트릭스를 기반으로 테이블에 발생하는 트랜잭션 양을 분석하여, 테이블에 저장되는 데이터의 양을 유추하고 이를 근거로 DB 용량을 산정하고 DB 구조를 최적화하는 것",CRUD,
트랜잭션 분석서,"단위 프로세스와 CRUD 매트릭스를 이용하여 작성하며, 단위 프로세스, CRUD 연산, 테이블명, 컬럼명, 테이블 참조 횟수, 트랜잭션 수, 발생 주기를 구성 요소로 갖는다",CRUD,
단위 프로세스,업무를 발생시키는 가장 작은 단위의 프로세스,CRUD,
인덱스,"데이터 레코드를 빠르게 접근하기 위해 (키 값, 포인터) 쌍으로 구성되는 데이터 구조이다. 데이터가 저장된 물리적 구조와 밀접한 관계가 있고, 레코드가 저장된 물리적 구조에 접근하는 방법을 제공한다.",인덱스 설계,
B 트리 인덱스,"일반적으로 사용되는 인덱스 방식, 루트 노드에서 하위 노드로 키 값의 크기를 비교해 나가면서 단말 노드에서 찾고자 하는 데이터를 검색한다. ",인덱스 설계,
브랜치 블록,"분기를 위한 목적으로 사용되고, 다음 단계를 가리키는 포인터를 가지고 있음",인덱스 설계,
리프 블록,인덱스를 구성하는 컬럼 데이터와 해당 데이터의 행 위치를 가리키는 레코드 식별자로 구성됨,인덱스 설계,
B+ 트리 인덱스,"단말 노드가 아닌 노드로 구성된 인덱스 세트와 단말 노드로만 구성된 순차 세트로 구분함, 인덱스 세트에 있는 노드들은 단말 노드에 있는 키 값을 찾아갈 수 있는 경로로만 제공되며, 순차 세트에 있는 단말 노드가 해당 데이터 레코드의 주소를 가리킨다.",인덱스 설계,
비트맵 인덱스,"인덱스 컬럼의 데이터를 Bit값인 0 또는 1로 변환하여 인덱스 키로 사용함, 키 값을 포함하는 행의 주소를 제공한다.",인덱스 설계,
함수 기반 인덱스,컬럼의 값 대신 컬럼에 특정 함수를 적용하여 산출된 값을 사용한다. B plus 트리 인덱스 또는 비트맵 인덱스를 생성하여 사용한다.,인덱스 설계,
분포도(선택성),"(조건에 맞는 레코드 수 / 전체 릴레이션 레코드 수) x 100,  분포도가 10 ~15% 인 경우 효율적인 인덱스 검색을 할 수 있음",인덱스 설계,
인덱스 설계,분명하게 드러난 컬럼에 대해 기본적인 인덱스를 먼저 지정한 후 개발 단계에서 필요한 인덱스 설계를 반복 진행한다.,인덱스 설계,
인덱스 대상 테이블 선정 기준,"Multi block read 수에 따라, 랜덤 액세스가 빈번한 테이블, 특정 범위나 특정 순서로 조회가 필요한 테이블, 다른 테이블과 순차적 조인 되는 테이블",인덱스 설계,
뷰,"사용자에게 접근이 허용된 자료만을 제한적으로 보여주기 위해 하나 이상의 기본 테이블로부터 유도된, 이름을 가지는 가상 테이블, 가상 테이블이기 때문에 물리적으로 구현되어 있지 않다. 변경은 불가능하고, CRUD에 대해 제약을 갖는다.",뷰 설계,
정의 테이블,"하나 이상의 다른 테이블로부터 유도된 하나의 가상 테이블이며, 뷰를 만들기 위해 유도된 테이블",뷰 설계,
인라인 뷰,FROM 절 안에 사용되는 서브 쿼리를 지칭함,뷰 설계,
클러스터,"데이터 저장 시 데이터 액세스 효율을 향상시키기 위해 동일한 성격의 데이터를 동일한 데이터 블록에 저장하는 물리적 저장 방법, 데이터 조회 속도는 향상시키지만 데이터 입력, 수정, 삭제에 대한 성능은 저하시킨다.",클러스터 설계,
클러스터링키,"테이블에서 각각의 행을 접근할 때 기준이 되는 열로, 데이터를 조회하면 __ 로 지정된 필드에서 시작하여 테이블을 조회함",클러스터 설계,
단일 테이블 클러스터링,"여러개의 테이블 뿐만 아니라 한 개의 테이블에 대해서도 클러스터링을 수행한 것, 특정 칼럼의 동일한 값을 동일 블록이나 연속된 블록에 저장하므로 데이터 조회 성능이 향상됨.",클러스터 설계,
파티션,"대용량의 테이블이나 인덱스를 작은 논리적 단위인 파티션으로 나누는 것, 대용량 DB의 경우 중요한 몇 개의 테이블에서만 집중되어 데이터가 증가되므로, 이런 테이블들을 작은 단위로 나눠 분산시키면 성능 저하를 방지할 뿐만 아니라 데이터 관리가 쉬워진다",파티션 설계,
범위 분할,지정한 열의 값을 기준으로 범위를 지정하여 분할한다.,파티션 설계,Range Partitioning
해시 분할,"해시 함수를 적용한 결과 값에 따라 데이터를 분할한다, 특정 데이터가 어디있는지 판단할 수 없으나, 데이터를 고르게 분산할 때 유용하다. ",파티션 설계,Hash Partitioning
조합 분할,"범위 분할로 분할한 다음 해시 함수를 적용하여 다시 분할하는 방식, 범위 분할할 파티션이 너무 커서 관리가 어려울 때 유용함",파티션 설계,Composit Partitioning
목록 분할,지정한 열 값에 대한 목록을 만들어 이를 기준으로 분할한다,파티션 설계,List Partitioning
라운드 로빈 분할,"레코드를 균일하게 분배하는 방식이다. 각 레코드가 순차적으로 분배되며, 기본키가 필요없다.",파티션 설계,Round Robin Partitioning
파티션키,"파티션을 나누는 기준이 되는 열로, 파티션키로 지정된 열의 데이터 값에 따라 파티션이 나뉨",파티션 설계,
인덱스 파티션,"파티션된 테이블의 데이터를 관리하기 위해 인덱스를 나눈 것, 파티션된 테이블의 종속 여부에 따라 로컬/글로벌 구분함",파티션 설계,
Local Partitioned Index,테이블 파티션과 인덱스 파티션이 1:1 대응되도록 파티셔닝한 것,파티션 설계,
Global Partitioned Index,테이블 파티션과 인덱스 파티션이 독립적으로 구성되도록 파티셔닝한 것,파티션 설계,
데이터베이스 용량 설계,"데이터가 저장될 공간을 정의한 것으로, 테이블에 저장할 데이터양과 인덱스, 클러스터 등 차지하는 공간 등을 예측하여 반영한다. 정확히 산정할수록 디스크 저장 공간을 효과적으로 사용하고 확장성 및 가용성을 높인다.",데이터베이스 용량 설계,
익스텐트,데이터 베이스 용량이 모두 찼을 경우 추가적으로 할당되는 공간 의미,데이터베이스 용량 설계,
테이블스페이스 용량,"테이블 용량을 모두 더한 값에 약 40% 정도 할당함, 확장 가능성이 낮을 경우 20%",데이터베이스 용량 설계,
분산 데이터베이스,논리적으로는 하나의 시스템에 속하지만 물리적으로는 네트워크를 통해 연결된 여러 개의 컴퓨터 사이트에 분산되어 있는 데이터베이스를 말함,분산 데이터베이스 설계,
분산 처리기,자체적으로 처리 능력을 가지며 지리적으로 분산되어 있는 컴퓨터 시스템을 말한다,분산 데이터베이스 설계,
분산 데이터베이스,지리적으로 분산되어 있는 데이터베이스로서 해당 지역의 특성에 맞게 데이터베이스가 구성된다.,분산 데이터베이스 설계,
통신 네트워크,분산 처리기들을 통신망으로 연결하여 논리적으로 하나의 시스템처럼 작동할 수 있도록 하는 구성 요소를 말한다,분산 데이터베이스 설계,
위치 투명성,액세스하려는 데이터베이스의 실제 위치를 알 필요 없이 단지 데이터베이스의 논리적인 명칭만으로 액세스할 수 있어야하는 분산 데이터베이스의 목표이다.,분산 데이터베이스 설계,Location Transparency
중복 투명성,"동일 데이터가 여러 곳에 중복되어 있더라도 사용자는 마치 하나의 데이터만을 존재하는 것처럼 사용하고, 시스템은 자동으로 여러 자료에 대한 작업을 수행하는 분산 데이터베이스의 목표이다.",분산 데이터베이스 설계,Replication Transparency
병행 투명성,분산 데이터베이스와 관련된 다수의 트랜잭션이 동시에 실현되더라도 그 트랜잭션의 결과는 영향 받지 않는 분산 데이터베이스의 목표이다,분산 데이터베이스 설계,Concurrency Transparancy
장애 투명성,"트랜잭션, DBMS, 네트워크, 컴퓨터 장애에도 부룩하고 트랜잭션을 정확하게 처리하는 분산 데이터베이스의 목표이다.",분산 데이터베이스 설계,Failure Transparancy
분할,테이블의 데이터를 나누어 분산시키는 것,분산 데이터베이스 설계,Fragment
완전성,전체 데이터를 대상으로 분할해야하는 분할 규칙이다.,분산 데이터베이스 설계,Completeness
재구성,분할된 데이터는 관계 연산을 활용하여 본래의 데이터로 재구성할 수 있어야하는 분할 규칙이다.,분산 데이터베이스 설계,Reconstruction
상호 중첩 배재,분할된 데이터는 서로 다른 분할의 항목에 속하지 않아야하는 분할 규칙이다.,분산 데이터베이스 설계,Dis-jointness
수평 분할,특정 속성의 값을 기준으로 행 단위로 분할 하는 주요 분할 방법이다.,분산 데이터베이스 설계,
수직 분할,데이터 컬럼 단위로 분할하는 주요 분할 방법이다.,분산 데이터베이스 설계,
할당,"동일한 분할을 여러 개의 서버에 생성하는 분산 방법으로, 중복의 유무로 구분한다.",분산 데이터베이스 설계,Allocation
비중복 할당 방식,최적의 노드를 선택해서 분산 데이터베이스의 단일 노드에서만 분할이 존재하도록 하는 방식이다.,분산 데이터베이스 설계,
중복할당 방식,"동일한 테이블을 다른 서버에 복제하는 방식으로, 일부만 복제 또는 전체 복제하는 방식으로 나뉜다.",분산 데이터베이스 설계,
데이터베이스 이중화,시스템 오류로 인한 데이터베이스 서비스 중단이나 물리적 손상 발생 시 이를 복구하기 위해 동일한 데이터베이스를 복제하여 관리하는 것,데이터베이스 이중화,
Eager 기법,"트랜잭션 수행 중 데이터 변경이 발생하면, 이중화된 모든 데이터베이스에 즉시 전달하여 변경 내용이 즉시 적용되도록 하는 기법",데이터베이스 이중화,
Lazy 기법,"트랜잭션의 수행이 종료되면 변경 사실을 새로운 트랜잭션에 작성하여 각 데이터베이스에 전달되는 기법으로, 데이터베이스마다 새로운 트랜잭션이 수행되는 것으로 간주된다.",데이터베이스 이중화,
활동-대기,한 DB가 활성 상태로 서비스하고 있으면 다른 DB는 대기하고 있다가 활성 DB에 장애가 발생하면 대기 상태로 있던 DB가 자동으로 모든 서비스를 대신 수행한다. 구성과 관리가 쉽다,데이터베이스 이중화,
활동-활동,두 개의 DB가 서로 다른 서비스를 제공하다가 둘 중 한쪽 DB에 문제가 발생하면 나머지 다르 DB가 서비스를 제공한다. 두 DB가 모두 처리하기 때문에 처리율이 높지만 구성 방법과 설정이 복잡하다,데이터베이스 이중화,
클러스터링,"두 대 이상의 서버를 하나의 서버처럼 운영하는 기술이다, 서버 이중화 및 공유 스토리지를 사용하여 서버의 고가용성을 제공한다",서버 클러스터링,
공유 스토리지,데이터 저장소를 네트워크로 연결하여 파일 및 데이터를 공유하는 것으로 다수의 사용자 또는 서버가 데이터를 안전하고 편리하게 공유할 수 있게 하는 기술,서버 클러스터링,Network Attached Storage(NAS)
고가용성,시스템을 오랜 시간동안 계속해서 정상적으로 운영이 가능한 성질을 의미,서버 클러스터링,High Availability(HA)
고가용성 클러스터링,하나의 서버에 장애가 발생하면 다른 노드가 받아 처리하여 서비스 중단을 방지하는 방식으로 일반적으로 언급되는 클러스터링이다.,서버 클러스터링,
병렬 처리 클러스터링,전체 처리율을 높이기 위해 하나의 작업을 여러 개의 서버에서 분산하여 처리하는 방식이다.,서버 클러스터링,
로드 밸런서,특정 서버에 집중되는 부하를 덜기 위해 여러 개의 서버로 부하를 분산시키는 네트워크 서비스,서버 클러스터링,
데이터베이스 보안,"데이터베이스의 일부분 또는 전체에 대해서 권한이 없는 사용자가 액세스 하는 것을 금지하기 위해 사용되는 기술, 사용자들은 일반적으로 서로 다른 객체에 대하여 다른 접근 권리 또는 권한을 갖게 된다",데이터베이스 보안,
암호화,데이터를 보낼 때 송신자가 지정한 수신자 이외에는 그 내용을 알 수 없도록 평문을 암호문으로 변환하는 것,데이터베이스 보안,
개인키 암호 방식,"비밀키 암호화 기법이라고도 하며, 동일한 키로 데이터를 암호화하고 복호화한다.",데이터베이스 보안,
공개키 암호 방식,"서로 다른키로 데이터를 암호화하고 복호화한다, 데이터를 암호화할 때 사용하는 키는 데이터베이스 사용자에게 공개하고, 복호화할 때의 키는 관리자가 비밀리에 관리하는 기법이다. 비대칭 암호 방식이라고도 함",데이터베이스 보안,
RSA,"SSL/TLS에 가장 많이 사용되는 공개키 암호화 알고리즘, 매우 큰 숫자는 소인수분해하기 힘들다는 것을 이용하여 두 소수를 곱하는 방식으로 사용함",데이터베이스 보안,Rivest Shamir Aldeman
SSL,"인터넷을 사용한 통신에서 보안을 확보하려면 두 통신 당사자가 서로가 신뢰할 수 있는 자임을 확인할 수 있어야 하며, 서로간의 통신 내용이 제 3자에 의해 도청되는 것을 방지해야 한다. 따라서 서로 자신을 신뢰할 수 있음을 알리기 위해 전자 서명이 포함된 인증서를 사용하며, 도청을 방지하기 위해 통신 내용을 암호화한다. 이러한 통신 규약을 묶어 정리한 것이 바로 TLS. 주요 웹브라우저 주소창에 자물쇠 아이콘이 뜨는 것으로 TLS의 적용 여부를 확인할 수 있다.",데이터베이스 보안,Secure Sockets Layer
TSL,"인터넷에서의 정보를 암호화해서 송수신하는 프로토콜, 넷스케이프 커뮤니케이션스사가 개발한 SSL 에 기반한 기술로, 국제 인터넷 표준화 기구에서 표준으로 인정받은 프로토콜임. TCP 443 포트를 사용한다. 명칭은 ___ 이지만 아직도 SSL 로 불리고 있음",데이터베이스 보안,Transport Layer Security
DES,"개인키 암호 방식의 대표적 알고리즘, 64Bit의 평문 블록을 56Bit의 16개 키를 이용하여 16회의 암호 계산 단계를 거쳐 64BIt 의 암호문을 얻는 방식",데이터베이스 보안,Data Encryption Standard
전위 기법,"기존 시스템의 변화를 최소화하자는 간결성을 목적으로 기존의 운영체계나 자료기지 관리체계를 변화시키지 않고 프로세스 단위의 접근 제어 모듈을 이용하여 고수준의 보안성을 유지하고자 하는 것, 하드웨어가 아닌 소프트웨어를 이용한 구현형태로 설계되어, 보안 컴파일러, 보안 운영체계, 보안 자료기지 관리체계 등의 보안 메커니즘에 비해 보안성 검증과 관리가 용이하며 이식성 높음",데이터베이스 보안,
대체 기법,원 문서에 있는 임의의 문자를 다른 문자로 대체하는 암호화 방식,데이터베이스 보안,
전치 기법,원 문서의 내용에 포함된 문자들의 배열 순서를 변경해 암호화 하는 방식,데이터베이스 보안,
접근통제,데이터가 저장된 객체와 이를 사용하려는 주체 사이의 정보 후름을 제한하는 것,데이터베이스 보안,
GRANT,객체에 대한 권한을 부여하는 SQL 명령어,데이터베이스 보안,
REVOKE,객체에 부여된 권한을 취소하는 SQL 명령어,데이터베이스 보안,
임의 접근통제,"데이터에 접근하는 사용자의 신원에 따라 접근 권한을 부여하는 방식, 데이터 소유자가 접근통제 권한을 지정하고 제어한다. SQL 명령어로는 GRANT와 REVOKE가 있다.",데이터베이스 보안,DAC(Discretionary Access Control)
강제 접근통제,"주체와 객체의 등급을 비교하여 접근 권한을 부여하는 방식, 시스템이 접근통제 권한을 지정한다. 객체별로 보안등급을 부여할 수 있고 사용자 별로 인가등급을 부여할 수 있다. 주체는 자신보다 보안 등급이 높은 객체에 대해 읽기, 수정, 등록 모두 불가능하나 낮은 객체에 대해서는 읽기가 가능함. 같은 객체에서는 읽기, 수정, 등록 가능",데이터베이스 보안,MAC(Mandatory Access Control)
역할기반 접근 통제,"사용자의 역할에 따라 접근 권한을 부여하는 방식, 중앙 관리자가 접근 통제 권한을 갖는다. 다중 프로그래밍 환경에 최적화된 방식",데이터베이스 보안,RBAC(Role Based Access Control)
벨 라파듈라 모델,"군대의 보안 레벨처럼 정보의 기밀성에 따라 상하 관계가 구분된 정보를 보호하기 위해 사용함. 보안 취급자 등급 기준으로 읽기 권한과 쓰기 권한이 제한됨, 보안 레벨 2급 취급자 : 2, 3급의 문서 조회 가능, 1, 2급의 문서 작성 가능",데이터베이스 보안,Bell-LaPadula Model
비바 무결성 모델,"벨 라파듈라 모델을 보완한 수학적 모델로, 무결성을 보장하는 최초의 모델, 비인가자에 의한 데이터 변형을 방지함",데이터베이스 보안,Biba Integrity Model
클락-윌슨 무결성 모델,"무결성 중심의 상업용 모델로, 사용자가 직접 객체에 접근할 수 없고 프로그램에 의해 접근이 가능한 보안 모델",데이터베이스 보안,Clark-Wilson Integrity Model
만리장성 모델,서로 이해 충돌 관계에 있는 객체 간의 정보 접근을 통제하는 모델,데이터베이스 보안,Chines Wall model
접근통제 정책,"어떤 주체가 언제, 어디서, 어떤 객체에게, 어떤 행위에 대한 허용 여부를 정의하는 것으로, 신분 기반 정책, 규칙 기반, 역할 기반 정책이 있다.",데이터베이스 보안,
신분 기반 정책,"주체나 그룹의 신분에 근거하여 객체의 접근을 제한하는 방법으로, IBP, GBP가 있다.",데이터베이스 보안,
IBP,"최소 권한 정책으로, 단일 주체에게 하나의 객체에 대한 허가를 부여한다.",데이터베이스 보안,Individual-Based Policy
GBP,복수 주체에 하나의 객체에 대한 허가를 부여한다.,데이터베이스 보안,Group-Based Policy
규칙 기반 정책,"주체가 갖는 권한에 근거하여 객체의 접근을 제한하는 방법으로, MLP, CBP가 있다.",데이터베이스 보안,
MLP,사용자 및 객체별로 지정된 기밀 분류에 따른 정책,데이터베이스 보안,Multi-Level Policy
CBP,집단별로 지정된 기밀 허가에 따른 정책,데이터베이스 보안,Compartment-Based Policy
역할 기반 정책,"GBP의 변형된 정책으로, 주체의 신분이 아니라 주체가 맡은 역할에 근거하여 객체의 접근을 제한하는 방법",데이터베이스 보안,
접근 통제 목록,객체를 기준으로 특정 객체에 대해 어떤 주체가 어떤 행위를 할 수 있는지를 기록한 목록,데이터베이스 보안,Access control List
능력 리스트,주체를 기준으로 주체에게 허가된 자원 및 권한을 기술한 목록,데이터베이스 보안,Capability List
보안 등급,"주체나 객체 등에 부여된 보안 속성의 집합으로, 이 등급을 기반으로 접근 승인 여부가 결정된다",데이터베이스 보안,Security Level
패스워드,주체가 자신임을 증명할 때 사용하는 인증 방법이다,데이터베이스 보안,
암호화,"데이터를 보낼 때 지정된 수신자 이외에는 내용을 알 수 없도록 평문을 암호문으로 변환하는 것으로, 무단 도용을 방지하기 위해 사용됨",데이터베이스 보안,
접근통제 보안 모델,"보안 정책을 구현하기 위한 정형화된 모델로, 기밀성 모델, 무결성 모델, 접근통제 모델이 있다.",데이터베이스 보안,
기밀성 모델,"군사적인 목적으로 개발된 최초의 수학적 모델로, 기밀성 보장이 최우선적인 모델이다.",데이터베이스 보안,Confidentiality
단순 보안 규칙,주체는 자신보다 높은 등급의 객체를 읽을 수 없다는 기밀성 모델 제약 조건,데이터베이스 보안,
스타 보안 규칙,주체는 자신보다 낮은 등급의 객체에 정보를 쓸 수 없다는 기밀성 모델 제약 조건,데이터베이스 보안,
강한 스타 보안 규칙,주체는 자신과 등급이 다른 객체를 읽거나 쓸 수 없다.,데이터베이스 보안,
무결성 모델,"기밀성 모델에서 발생하는 불법적인 정보 변경을 방지하기 위해 ___을 기반으로 개발된 모델, 데이터의 일관성 유지에 중점을 두어 개발되었다. 기밀성 모델과 동일하게 주체 및 객체의 보안등급을 기반으로 함",데이터베이스 보안,
단순 무결성 규칙,주체는 자신보다 낮은 등급의 객체를 읽을 수 없다.,데이터베이스 보안,
스타 무결성 규칙,주체는 자신보다 높은 등급의 객체에 정보를 쓸 수 없다.,데이터베이스 보안,
접근 통제 모델,"접근통제 메커니즘을 보안 모델로 발전시킨 것으로, 대표적으로 접근 통제 행렬이 있다.",데이터베이스 보안,
접근통제 행렬,"임의적인 접근통제를 관리하기 위한 보안 모델로, 행은 주체, 열은 객체, 행과 열로 주체와 객체에 권한 유형을 나타낸 것",데이터베이스 보안,Access Control Matrix
접근통제 조건,접근통제 매커니즘의 취약점을 보완하기 위해 접근통제 정책에 부가하여 적용할 수 있는 조건이다.,데이터베이스 보안,
값 종속 통제,"일반적으로 객체에 저장된 값에 상관없이 접근 통제를 동일하게 허용하지만, 객체에 저장된 값에 따라 다르게 접근 통제를 허용해야하는 경우에 사용함",데이터베이스 보안,Value-Dependent Control
다중 사용자 통제,지정된 객체에 다수의 사용자가 동시에 접근을 요구하는 경우 사용한다.,데이터베이스 보안,Multi-User Control
컨텍스트 기반 통제,"특정 시간, 네트워크 주소, 접근 경로, 인증 수준 등에 근거하여 접근을 제어하는 방법으로, 다른 보안 정책과 결합하여 보안 시스템의 취약점을 보완할 때 사용된다.",데이터베이스 보안,Context-Based Control
감사 추적,"사용자나 애플리케이션이 데이터베이스에 접근하여 수행한 모든 활동을 기록하는 기능, 오류가 발생한 데이터베이스를 복구하거나 부적절한 데이터 조작을 파악하기 위해 사용한다. 감사 추적시 실행한 프로그램, 사용자, 날짜 시간, 변경 이전 이후 값 등이 저장된다.",데이터베이스 보안,
데이터베이스 백업,"전산 장비의 장애에 대비하여 데이터베이스에 저장된 데이터를 보호하고 복구하기 위한 작업으로, 치명적인 데이터 손실을 막기 위해서는 데이터베이스에 __ 를 정기적으로 수행해야한다.",데이터베이스 백업,
사용자 실수,실수로 인해 테이블이 삭제되거나 잘못된 트랜잭션이 처리된 데이터베이스 장애 유형,데이터베이스 백업,
미디어 장애,"CPU, 메모리, 디스크 등 하드웨어 장애나 데이터가 파손된 데이터베이스 장애 유형",데이터베이스 백업,
구문 장애,프로그램 오류나 사용 공간의 부족으로 인해 발생하는 데이터베이스 장애 유형,데이터베이스 백업,
사용자 프로세스 장애,프로그램이 비정상적으로 종료되거나 네트워크 이상으로 세션이 종료되어 발생하는 데이터베이스 장애 유형,데이터베이스 백업,
인스턴스 장애,"하드웨어 장애, 정전, 시스템 파일 파손 등 비정상적인 요인으로 인해 메모리나 데이터베이스 서버의 프로세스가 중단되는 데이터베이스 장애 유형",데이터베이스 백업,
로그 파일,"데이터베이스의 처리 내용이나 이용 상황 등 상태 변화를 시간에 흐름에 따라 기록한 파일로, 데이터베이스의 복구를 위해 필요한 가장 기본적인 자료",데이터베이스 백업,
로그 파일 내용,"트랜잭션이 작업한 모든 내용, 트랜잭션 식별, 트랜잭션 레코드, 데이터 식별자, 갱신 이전 값, 갱신 이후 값 등",데이터베이스 백업,
데이터베이스 복구 알고리즘,데이터베이스를 장애 이전 상태로 복구하기 위해 사용하는 알고리즘으로 동기적/비동기적 갱신에 따라 구분된다.,데이터베이스 백업,
NO-UNDO/REDO,데이터베이스 버퍼의 내용을 비동기적으로 갱신한 경우 복구 알고리즘,데이터베이스 백업,
UNDO/NO-REDO,데이터베이스 버퍼의 내용을 동기적으로 갱신한 경우 복구 알고리즘,데이터베이스 백업,
UNDO/REDO,"데이터베이스 버퍼의 내용을 동기/비동기적으로 갱신한 경우의 알고리즘, 데이터베이스 기록 전에 트랜잭션이 완료될 수 있으므로 완료된 트랜잭션이 데이터베이스에 기록되지 못했다면 다시 실행해야한다. ",데이터베이스 백업,
NO-UNDO/NO-REDO,데이터베이스 버퍼의 내용을 동기적으로 저장 매체에 기록하지만 데이터베이스와는 다른 영역에 기록한 경우의 복구 알고리즘,데이터베이스 백업,
물리 백업,"데이터베이스 파일을 백업하는 방법으로, 백업 속도가 빠르고 작업이 단순하지만, 문제 발생 시 원인 파악 및 해결이 어렵다",데이터베이스 백업,
논리 백업,"DB 내의 논리적 객체들을 백업하는 방법으로, 복원 시 데이터 손상을 막고 문제 발생 시 원인 파악 및 해결이 수월하지만, 백업/복원 시 시간이 많이 소요된다.",데이터베이스 백업,
동기적 갱신,트랜잭션이 완료되기 전에 데이터베이스 버퍼 내용을 동시적으로 저장매체에 기록하는 것,데이터베이스 백업,
비동기적 갱신,트랜잭션이 완료된 내용을 일정 주기나 작업량에 따라 시간 차이를 두고 저장매체에 기록하는 것,데이터베이스 백업,
스토리지,단일 디스크로 처리할 수 없는 대용량의 데이터를 저장하기 위해 서버와 저장장치를 연결하는 기술,스토리지,
DAS,서버와 저장장치를 전용 케이블로 직접 연결하는 방식으로 일반 가정에서 외장하드를 연결하는 방식,스토리지,Direct Attached Storage
NAS,"서버와 저장장치를 네트워크를 통해 연결하는 방식, Ethernet 스위치를 통해 다른 서버에서도 스토리지에 접근할 수 있어 파일 공유가 가능하고, 장소에 구애받지 않고 저장장치에 쉽게 접근할 수 있다.",스토리지,Network Attached Storage
SAN,DAS의 빠른 처리와 NAS의 파일 공유 장점을 혼합한 방식으로 서버와 저장장치를 연결하는 전용 네트워크를 별도로 구성하는 방식이다. 저장장치를 공유함으로써 어러 개의 저장장치나 백업 장비를 단일화 시킬 수 있다.,스토리지,Storage Area Network
광 채널,컴퓨터 장치 간 데이터의 전송 속도를 기가바이트로 높이기 위한 네트워크 기술,스토리지,FC(Fiber Channel)
테이블,"데이터를 저장하는 데이터베이스의 가장 기본적인 오브젝트로, 컬럼과 로우로 구성됨",논리 데이터 모델의 물리 데이터 모델 변환,
엔티티의 변환,"논리 데이터 모델에서 정의된 ___를 물리 데이터 모델의 테이블로 변환하는 것, 테이블 목록 정의서를 작성한다",논리 데이터 모델의 물리 데이터 모델 변환,
테이블 목록 정의서,"전체 테이블을 목록으로 요약 관리하는 문서로, 테이블 목록이라고도 한다.",논리 데이터 모델의 물리 데이터 모델 변환,
슈퍼타입/서브타입 변환,"논리 데이터 모델에서 이용되는 형태로 물리 데이터 모델로 설계할 때는 테이블로 변환해야한다. 슈퍼타입 기준 변환, 서브타입 기준 변환, 개별 타입 기준 변환이 있다",논리 데이터 모델의 물리 데이터 모델 변환,
슈퍼타입 기준 변환,"서브타입을 슈퍼타입에 통합하여 하나의 테이블로 만드는 것, 서브 속성이나 관계가 적을 때 사용하는 방법",논리 데이터 모델의 물리 데이터 모델 변환,
서브타입 기준 변환,슈퍼타입 속성들을 각각의 서브타입에 추가하여 서브타입 개별적인 테이블로 만드는 것,논리 데이터 모델의 물리 데이터 모델 변환,
개별타입 기준 변환,"슈퍼타입과 서브타입들을 각각의 개별적인 테이블로 변환한다. 저장공간이 상대적으로 적으나, 조인이 많아질 수 있다.",논리 데이터 모델의 물리 데이터 모델 변환,
속성을 컬럼으로 변환,"논리 데이터 모델에서 정의한 속성을 물리 데이터 모델의 컬럼으로 변환하는 것, 일반 속성 변환, Primary UID, Secondary UID 변환 등이 있다.",논리 데이터 모델의 물리 데이터 모델 변환,
일반 속성 변환,속성과 컬럼은 명칭이 반드시 일치할 필요는 없으나 표준화된 약어를 사용하는 것이 좋다. 예약어 사용을 피한다.,논리 데이터 모델의 물리 데이터 모델 변환,
Primary UID 를 기본키로 변환,논리 데이터 모델에서의___는 물리 데이터 모델의 기본키로 만든다,논리 데이터 모델의 물리 데이터 모델 변환,Primary Uniqque Identifier
Primary UID(관계의 UID Bar) 를 기본키로 변환,다른 엔티티와의 관계로 인해 생성된 Primary UID는 물리 데이터 모델의 기본키로 만든다,논리 데이터 모델의 물리 데이터 모델 변환,
UID Bar,엔티티에 포함된 고유한 속성의 식별자가 아니라 다른 엔티티와의 관계로 인해 생성된 식별자 UID 를 의미함,논리 데이터 모델의 물리 데이터 모델 변환,
Secondary UID를 유니크키로 변환,논리 모델링에서 정의된 Secondary UID 및 Alternate Key는 물리 모델에서 유니크 키로 만든다.,논리 데이터 모델의 물리 데이터 모델 변환,
관계를 외래키로 변환,논리 데이터 모델에서 정의된 관계는 기본키와 이를 참조하는 외래키로 변환한다.,논리 데이터 모델의 물리 데이터 모델 변환,
1:1관계,개체 A의 기본키를 개체 B의 외래키로 추가하거나 개체 B의 기본키를 개체 A의 외래키로 추가하여 표현함,논리 데이터 모델의 물리 데이터 모델 변환,
1:N 관계,개체 A의 기본키를 개체 B의 외래키로 추가하여 표현하거나 별도의 테이블로 표현한다,논리 데이터 모델의 물리 데이터 모델 변환,
N:M 관계,릴레이션 A와 B의 기본키를 모두 포함한 별도의 릴레이션으로 표현한다. 이때 생성된 별도의 릴레이션을 교차 릴레이션 또는 교차 엔티티라고 한다.,논리 데이터 모델의 물리 데이터 모델 변환,
1:M 순환 관계,개체 A에서 개체 A의 기본키를 참조하는 외래키 컬럼을 추가하여 표현한다. 데이터 계층 구조를 표현하기 위해 주로 사용함,논리 데이터 모델의 물리 데이터 모델 변환,
관리 목적의 테이블,논리 데이터 모델에는 존재하지 않는 테이블이나 컬럼을 관리 혹은 이용하는 프로그래밍의 수행 속도를 향상시키기 위해 물리 데이터 모델에 추가할 수 있다.,논리 데이터 모델의 물리 데이터 모델 변환,
데이터 타입 선택,논리 데이터 모델에서 정의된 논리적인 데이터 타입을 물리적인 DBMS의 물리적 특성과 성능을 고려하여 최적의 데이터 타입과 데이터의 최대 길이를 선택한다.,논리 데이터 모델의 물리 데이터 모델 변환,
물리 데이터 품질 검토,물리 데이터 모델을 설계하고 데이터베이스 객체를 생성한 후 개발 단계로 넘어가기 전에 모델러와 이해관계자들이 모여 수행한다. 검토 항목에 따라 체크리스트 작성하여 평가함,물리 데이터 모델 품질 검토,
정확성,"데이터 모델이 요구사항이나 업무 규칙, 표기법에 따라 정확하게 표현되었음을 의미하는 물리 데이터 모델 품질 기준이다",물리 데이터 모델 품질 검토,
완전성,데이터 모델이 데이터 모델의 구성 요소를 누락 없이 정의하고 요구사항이나 업무 영역을 누락 없이 반영하였음을 의미하는 물리 데이터 모델 품질 기준이다,물리 데이터 모델 품질 검토,
준거성,"데이터 모델이 데이터 표준, 표준화 규칙, 법적 요건 등을 정확하게 준수하였음을 의미하는 물리 데이터 모델 품질 기준이다",물리 데이터 모델 품질 검토,
최신성,데이터 모델이 최근의 이슈나 현행 시스템을 반영하고 있음을 의미하는 물리 데이터 모델 품질 기준이다,물리 데이터 모델 품질 검토,
일관성,데이터 모델이 표현상의 일관성을 유지하고 있음을 나타내는 물리 데이터 모델 품질 기준이다,물리 데이터 모델 품질 검토,
활용성,작성된 모델과 설명을 사용자가 충분히 이해할 수 있고 업무 변화에 따른 데이터 구조의 변경이 최소화 될 수 있도록 설계되었음을 의미하는 물리 데이터 모델 품질 기준이다,물리 데이터 모델 품질 검토,
SQL,"1974년 IBM 연구소 SEQUEL에서 유래, 국제 표준 데이터베이스 언어, 관계 대수와 관계 해석을 기초로 한 혼합 데이터 언어, 질의어이지만 데이터 구조, 정의, 조작, 제어 등의 기능을 모두 갖추고 있음",SQL 개념,
DDL,"SCHEMA, DOMAIN, TABLE, VIEW, INDEX를 정의하거나 변경 또는 삭제할 때 사용하는 언어",SQL 개념,Data Define Language
CREATE,"SCHEMA, DOMAIN, TABLE, VIEW, INDEX 정의",SQL 개념,
ALTER,TABLE에 대한 정의를 변경하는데 사용한다,SQL 개념,
DROP,"SCHEMA, DOMAIN, TABLE, VIEW, INDEX를 삭제한다",SQL 개념,
DML,데이터베이스 사용자가 응용 프로그램이나 질의어를 통해 저장된 데이터를 실질적으로 처리하는데 사용되는 언어,SQL 개념,Data Manipulation Language
SELECT,테이블에서 조건에 맞는 튜플을 검색한다,SQL 개념,
INSERT,테이블에 새로운 튜플을 삽입한다.,SQL 개념,
DELETE,테이블에서 조건에 맞는 튜플을 삭제한다,SQL 개념,
UPDATE,테이블에서 조건에 맞는 튜플의 내용을 변경한다.,SQL 개념,
DCL,"데이터의 보안, 무결성, 회복, 병행 수행 제어 등을 정의하는데 사용되는 언어",SQL 개념,Data Control Language
COMMIT,"명령에 의해 수행된 결과를 실제 물리적 디스크로 저장하고, 데이터베이스 조작 작업이 정상적으로 완료되었음을 관리자에게 알려준다",SQL 개념,
ROLLBACK,데이터베이스 조작 작업이 비정상적으로 종료되었을 때 원래의 상태로 복귀한다.,SQL 개념,
GRANT,데이터베이스 사용자에게 사용 권한을 부여한다,SQL 개념,
REVOKE,데이터베이스 사용자에게 사용 권한을 취소한다.,SQL 개념,
Schema,"데이터베이스의 구조아 제약 조건에 관한 전반적인 명세의 기술한 것으로 데이터 개체, 속성, 관계 및 데이터 조작 시 데이터 값들이 갖는 제약 조건 등에 관해 전반적으로 정의한 것",SQL 개념,
Domain,하나의 속성이 취할 수 있는 동일한 유형의 원자값들의 집합을 의미함.,SQL 개념,
Cascade 법칙,"참조 무결성 제약이 설정된 기본 테이블의 어떤 데이터를 삭제할 경우, 그 데이터와 밀접하게 연관되어 있는 다른 테이블의 데이터들도 도미노처럼 자동으로 삭제되는 규칙",SQL 개념,
SAVEPOINT,트랜잭션 내에 ROLLBACK 할 위치인 저장점을 지칭하는 명령어,SQL 개념,
ROLLBACK,아직 COMMIT되지 않은 변경된 모든 내용들을 취소하고 데이터베이스를 이전 상태로 되돌리는 명령어,SQL 개념,
PREDICATE,"불러올 튜플 수를 제한할 명령어를 기술하는 자리로서, ALL, DISTINCT, DISTINCTROW 가 있다.",SQL 개념,
그룹함수,"GROUP BY 절에 지정된 그룹별로 속성의 값을 집계할 함수를 기술한다. COUNT, SUM, AVG, MAX, MIN, STDDEV, VARIANCE, ROLLUP, CUBE 가 있다.",SQL 개념,
WINDOW 함수,"GROUP BY 절을 이용하지 않고 속성의 값을 집계할 함수를 기술한다. ROW_NUMBER(), RANK(), DENSE_RANK() 가 있다.",SQL 개념,
UNION,"두 SELECT 문의 조회 결과를 통합하여 모두 출력하되, 중복된 행은 한번만 출력한다.",SQL 개념,
UNION ALL,"두 SELECT 문의 조회 결과를 통합하여 모두 출력하되, 중복된 행도 그대로 출력한다",SQL 개념,
INTERSECT,두 SELECT 문의 조회 결과 중 공통된 행만 출력한다,SQL 개념,
EXCEPT,첫번째 SELECT 문의 조회 결과에서 두 번째 SELECT 문의 조회 결과를 제외한 행을 출력한다.,SQL 개념,
CROSS JOIN,"조인하는 두 테이블에 있는 튜플들의 순서쌍을 결과로 반환, 반환되는 테이블의 행의 수는 두 테이블 행의 수의 곱",SQL 개념,
INNER JOIN,"일반적으로 EQUI JOIN 과 NON-EQUI JOIN으로 구분함, 조건이 없는 ___ 는 CROSS JOIN과 동일하다",SQL 개념,
EQUI JOIN,JOIN 대상 테이블에서 공통 속성을 기준으로 equal 비교에 의해 같은 값을 가지는 행을 연결하여 결과를 생성하는 JOIN 방식,SQL 개념,
NON-EQU JOIN,equal 비교가 아닌 비교 연산자를 사용하는 JOIN 방식,SQL 개념,
OUTER JOIN,릴레이션에서 JOIN 조건을 만족하지 않는 튜플도 결과로 출력하기 위한 JOIN 방법,SQL 개념,
LEFT OUTER JOIN,"INNER JOIN 의 결과를 구한 후, 우측 항 릴레이션의 어떤 튜플과도 맞지 않는 좌측 항의 릴레이션에 있는 튜플들에 NULL 값을 붙여서 INNER JOIN의 결과에 추가한 것",SQL 개념,
RIGHT OUTER JOIN,"INNER JOIN 의 결과를 구한 후, 좌측 항 릴레이션의 어떤 튜플과도 맞지 않는 우측 항의 릴레이션에 있는 튜플들에 NULL 값을 붙여서 INNER JOIN의 결과에 추가한 것",SQL 개념,
FULL OUTER JOIN,LEFT OUTER JOIN과 RIGHT OUTER JOIN 을 합쳐 놓은 것,SQL 개념,
SELF JOIN,같은 테이블에서 2개의 속성을 연결하여 EQUI JOIN을 하는 방법,SQL 개념,
프로시저,"절차형 SQL을 활용하여 특정 기능을 수행하는 일종의 트랜잭션 언어로, 호출을 통해 실행되어 미리 저장해 놓은 SQL 작업을 수행한다. 데이터베이스에 저장되어 수행되기 때문에 스토어드 프로시저라고도 함. 일괄 작업 등에 주로 사용",SQL 활용,
DECLARE,"프로시저의 명칭, 변수, 인수, 데이터 타입을 정의하는 선언부",SQL 활용,
BEGIN - END,프로시저의 시작과 종료를 의미함,SQL 활용,
CONTROL,조건문 또는 반복문이 삽입되어 순차적으로 처리된다.,SQL 활용,
SQL,"DML, DCL이 삽입되어 데이터 관리를 위한 조회, 추가, 수정, 삭제 작업을 수행한다.",SQL 활용,
EXCEPTION,BEGIN~END 안의 구문 실행 시 예외가 발생하면 이를 처리하는 방법을 정의한다.,SQL 활용,
TRANSACTION,수행된 데이터 작업들을 DB에 적응할지 취소할지 결정하는 처리부이다.,SQL 활용,
OR REPLACE,이 예약어를 사용할 경우 동일한 프로시저 이름이 이미 존재하는 경우 기존의 프로시저를 대체할 수 있다.,SQL 활용,
EXECUTE,프로시저를 실행시키기 위해 호출하는 명령어로 EXEC 또는 CALL 이라고도함,SQL 활용,
TRIGGER,"데이터베이스 시스템에서 데이터의 삽입, 갱신, 삭제 등의 이벤트가 발생할 때마다 관련 작업이 자동으로 수행되는 절차형 SQL 이다. DDL, DML만 사용가능",SQL 활용,
DBMS 접속,사용자가 데이터를 사용하기 위해 응용 시스템을 이용하여 DBMS에 접근하는 것을 의미한다. ,DBMS 접속 기술,
NVL 함수,"A가 NULL인 경우 B를 반환하고, 아니면 A를 반환하는 함수로, 동적 SQL에서 원하는 조건에 따라 NVL함수 없이 SQL문 구성 가능하다",DBMS 접속 기술,
동적 SQL,"개발 언어에 삽입되는 SQL 코드를 문자열 변수에 넣어 처리하는 것으로, 조건에 따라 SQL 구문을 동적으로 변경하여 처리할 수 있다.",DBMS 접속 기술,
SQL 테스트,"SQL이 작성 의도에 맞게 원하는 기능을 수행하는지 검증하는 과정, 테스트 전에 생성을 통해 구문 오류나 참조 오류의 존재 여부를 확인한다.",SQL 테스트,
TCL,"트랜잭션을 제어하는 COMMIT, ROLLBACK, SAVEPOINT 명령을 가리키는 용어",SQL 테스트,Transaction Control Language
DESC,개체의 정보를 확인할 때 사용하는 명령어,SQL 테스트,Describe
ORM,객체지향 프로그래밍의 객체와 관계형 데이터베이스의 데이터를 연결하는 기술을 의미한다,객체지향 데이터베이스,Object-Relational Mapping
쿼리 성능 최적화,"데이터 입출력 애플리케이션의 성능 향상을 위해 SQL 코드와 인덱스를 최적화 하는 것, APM을 사용하고, 옵티마이저가 수립한 실행 계획을 검토할 수 있다.",쿼리 성능 최적화,
APM,"애플리케이션의 성능 관리를 위해 접속자, 자원 현황, 트랜잭션 수행 내역, 장애 진단 등 다양한 모니터링 기능을 가진 도구, 리소스 방식(Nagios, Zabbix, Cacti), 엔드투엔드(VisualVM, Jenifer, Scouter) 있다.",쿼리 성능 최적화,
Optimizer,작성된 SQL이 가장 효율적으로 수행되도록 최적의 경로를 찾아주는 모듈로 실무에서는 주로 CBO가 사용됨,쿼리 성능 최적화,
RBO,규칙 기반 옵티마이저 개발자의 SQL 숙련도에 따라 성능 결정,쿼리 성능 최적화,
CBO,"비용 기반 옵티마이저, 옵티마이저의 예측 성능에 따라 엑세스 비용을 산정해줌",쿼리 성능 최적화,
Execution Plan,"DBMS의 옵티마이저가 수립한 SQL 코드의 실행 절차와 방법을 의미한다. EXPLAIN 명령어로 확인 가능하고, 그래픽이나 텍스트로 표현됨",쿼리 성능 최적화,
데이터 전환,운영 중인 기존 정보시스템에 축적되어 있는 데이터를 추출하여 새로 개발할 정보 시스템에 운영 가능하도록 변환한 후 적재하는 일련의 과정을 의미한다.,데이터 전환,Data Migration
데이터 전환 계획서,데이터 전환이 필요한 대상을 분석하여 데이터 전환 작업에 필요한 모든 계획을 기록하는 문서이다,데이터 전환,
데이터 전환 대상 및 범위,"단위 업무별로 데이터 전환 대상 정보, 해당 업무에 사용되는 Table 수, 데이터 크기를 기술한다.",데이터 전환,
데이터 전환 환경 구성,"원천 시스템과 목적 시스템의 구성도, 전환 단계별 DISK 사용량을 기술한다.",데이터 전환,
데이터 정제 요청서,원천 데이터의 정제와 전환 프로그램의 수정을 위해 요청사항 및 조치사항 등 데이터 정제와 관련된 전반적인 내용을 문서로 작성한 것,데이터 전환,
소프트웨어 개발 방법론,소프트웨어의 생산성과 품질 향상을 목적으로 필요한 각종 기법 및 도구를 체계적으로 정리하여 표준화한 것,소프트웨어 개발 방법론,
구조적 방법론,"정형화된 분석 절차에 따라 사용자 요구사항을 파악하여 문서화하는 처리 중심의 방법론, 복잡한 문제를 다루기 위해 분할 정복 원리를 적용한다",소프트웨어 개발 방법론,
정보공학 방법론,"계획, 분석, 설계, 구축에 정형화된 기법들을 상호 연관성 있게 통합 및 적용하는 자료 중심의 방법론이다, 정보 시스템 개발 주기를 이용하여 대규모 정보 시스템을 구축하는데 적합하다. 데이터 모델링으로 E-R Diagram을 사용한다",소프트웨어 개발 방법론,
객체지향 방법론,"현실 세계의 개체를 기계의 부품처럼 하나의 객체로 만들어, 소프트웨어를 개발할 때 기계의 부품을 조립하듯이 객체들을 조립해서 필요한 소프트웨어를 구현하는 방법론이다.",소프트웨어 개발 방법론,
컴포넌트 기반 방법론,기존의 시스템이나 소프트웨어를 구성하는 컴포넌트를 조합하여 하나의 새로운 애플리케이션을 만드는 방법론이다. 재사용이 가능하여 시간과 노력을 절감할 수 있다. 새로운 기능을 추가하는 것이 간단하여 확장성이 보장된다.,소프트웨어 개발 방법론,
애자일 방법론,고객의 요구사항 변화에 유연하게 대응할 수 있도록 일정한 주기를 반복하면서 개발 과정을 진행하는 방법론이다.,소프트웨어 개발 방법론,
사용자 스토리,사용자의 요구사항,소프트웨어 개발 방법론,
임베디드 소프트웨어,"디지털 TV, 전기밥솥, 냉장고, PDA 등 해당 제품의 특정 기능에 맞게 특화되어서 제품 자체에 포함된 소프트웨어",소프트웨어 개발 방법론,
소프트웨어 재사용,"이미 개발되어 인정받은 소프트웨어의 전체 혹은 일부분을 다른 소프트웨어 개발이나 유지에 사용하는 것, 개발 시간과 비용을 단축시킬 수 있다.",소프트웨어 개발 방법론,
합성 중심 소프트웨어 재사용,"전자 칩과 같은 소프트웨어 부품, 즉 블록(모듈)을 만들어서 끼워 맞추어 소프트웨어를 완성시키는 방법으로 블록 구성 방법이라고도 함",소프트웨어 개발 방법론,Composition-Based
생성 중심 소프트웨어 재사용,추상화 형태로 쓰여진 명세를 구체화하여 프로그램을 만드는 방법으로 패턴 구성 방법이라고도 함,소프트웨어 개발 방법론,Generation-Based
분석 활동,"기존 소프트웨어의 명세서를 확인하여 소프트웨어의 동작을 이해하고, 재공학할 대상을 선정하는 소프트웨어 재공학 활동",소프트웨어 개발 방법론,Analysis
재구성 활동,기존 소프트웨어의 구조를 향상시키기 위하여 코드를 재구성하는 소프트웨어 재공학 활동,소프트웨어 개발 방법론,Restructuring
역공학 활동,기존 소프트웨어를 분석하여 소프트웨어 개발 과정과 데이터 처리 과정을 설명하는 분석 및 설계 정보를 재발견하거나 다시 만들어 내는 소프트웨어 재공학 활동,소프트웨어 개발 방법론,Reverse Engineering
이식 활동,기존 소프트웨어를 다른 운영체제나 하드웨어 환경에서 사용할 수 있도록 변환하는 소프트웨어 재공학 활동,소프트웨어 개발 방법론,Migration
CASE,"소프트웨어 개발 과정에서 사용되는 요구 분석, 설계, 구현, 검사 및 디버깅 과정 전체 또는 일부를 컴퓨터와 전용 소프트웨어 도구를 사용하여 자동화하는 것, 자동화 도구(CASE Tool)이다. 공통 모듈을 사용할 수 있고, 정형화된 매커니즘을 활용하여 효율성과 유지보수성이 올라간다.",소프트웨어 개발 방법론,Computer Aided Software Engineering
자동화 도구,소프트웨어 공학과 관련된 작업 중에서 하나의 작업을 자동화하는 패키지를 의미함,소프트웨어 개발 방법론,CASE Tool
상위 CASE 도구,"요구 부석, 설계 과정을 지원하는 CASE 도구",소프트웨어 개발 방법론,
하위 CASE 도구,"구현, 테스트 과정을 지원하는 CASE 도구",소프트웨어 개발 방법론,
소프트웨어 비용 산정,"소프트웨어 개발 규모를 소요되는 인원, 자원, 기간 등으로 확인하여 실행 가능한 계획을 수립하기 위해 필요한 비용을 산정하는 것, 하향식, 상향식 기법으로 나뉜다.",소프트웨어 비용 산정,
소프트웨어 비용 결정 요소,"프로젝트 요소, 자원 요소, 생산성 요소가 있다",소프트웨어 비용 산정,
제품 복잡도,소프트웨어의 종류에 따라 발생할 수 있는 문제점들의 난이도를 의미하는 프로젝트 비용 결정 요소,소프트웨어 비용 산정,
시스템의 크기,소프트웨어의 규모에 따라 개발해야할 시스템의 크기를 의미하는 프로젝트 비용 결정 요소,소프트웨어 비용 산정,
요구되는 신뢰도,일정 기간 내 주어진 조건하에 프로그램이 필요한 기능을 수행하는 정도를 의미하는 프로젝트 비용 결정 요소,소프트웨어 비용 산정,
인적 자원,소프트웨어 개발 관련자들이 갖춘 능력 혹은 자질을 의미하는 자원 비용 결정 요소,소프트웨어 비용 산정,
하드웨어 자원,"소프트웨어 개발 시 필요한 장비와 워드프로세서, 프린터 등의 보조 장비를 의미하는 자원 비용 결정 요소",소프트웨어 비용 산정,
소프트웨어 자원,"소프트웨어 개발 시 필요한 언어 분석기, 문서화 도구 등의 개발 자원 도구의 자원 비용 결정 요소",소프트웨어 비용 산정,
개발자 능력,"개발자들이 갖춘 전문지식, 경험, 이해도, 책임감, 창의력 등을 의미하는 생산성 비용 결정 요소",소프트웨어 비용 산정,
개발 기간,소프트웨어를 개발하는 기간을 나타내는 생산성 비용 결정 요소,소프트웨어 비용 산정,
하향식 비용 산정 기법,"과거의 유사한 경험을 바탕으로 전문 지식이 많은 개발자들이 참여한 회의를 통해 비용을 산정하는 비과학적인 방법, 프로젝트 전체 비용을 산정한 후 각 작업별로 비용을 세분화한다.",소프트웨어 비용 산정,
전문가 감정 기법,"조직 내에 있는 경험이 많은 두 명 이상의 전문가에게 비용 산정을 의뢰하는 기법, 편리하고 신속하게 비용 산정이 가능하나 개인적이고 주관적일 수 있음",소프트웨어 비용 산정,
델파이 기법,"전문가 감정 기법의 주관적인 편견을 보완하기 위해 많은 전문가의 의견을 종합하여 산정하는 기법으로, 한 명의 조정자와 여러 전문가로 구성되어 산정 비용을 비교, 의논하여 의견이 일치될 때까지 종합하는 것",소프트웨어 비용 산정,
상향식 비용 산정 기법,"프로젝트의 세부적인 작업 단위별로 비용을 산정한 후 집계하여 전체 비용을 산정하는 방법, LOC 기법, 개발 단계별 인월수 기법, 수학적 산정 기법 등이 있다.",소프트웨어 비용 산정,
LOC 기법,"원시 코드 라인 수 기법이라고도 하며, 비관치, 낙관치, 기대치를 측정하여 예측치를 구하고 이를 이용하여 비용을 산정하는 기법이다. 측정이 용이하고 이해하기 쉬운 장점을 갖는다.  원시코드 = (비관 + 4*낙관 + 기대) /6",소프트웨어 비용 산정,source Line Of Code
개발 단계별 인월수 기법,"LOC 기법을 보완하기 위한 기법으로, 각 기능을 구현시키는데 필요한 노력을 생명 주기의 각 단계별로 산정하여 정확도를 높였다.",소프트웨어 비용 산정,Effort Per Task
수학적 산정 기법,"상향식 비용 산정 기법으로, 경험적 추정 모형, 실험적 추적 모형이라고도 하며, 개발 비용 산정의 자동화를 목표로 한다. 비용을 자동으로 산정하기 위해 사용되는 공식은 과거 유사한 프로젝트를 기반으로하여 경험적으로 유도된 것이고, COCOMO 모형, Putnam 모형, 기능 점수 모형 등이 있다.",소프트웨어 비용 산정,
COCOMO 모형,"보헴이 제안한 것으로, LOC에 의한 비용 산정 기법이다. 개발할 소프트웨어의 LOC를 예측한 후, 이를 소프트웨어 종류에 따라 다르게 책정되는 비용 산정 방정식에 대입하여 비용을 산정한다. 작은 규모의 프로젝트에 적합하고, Man-Month와 프로그램 타입이 변수이다.",소프트웨어 비용 산정,COnstructive COst MOdel
조직형,"기관 내부에서 개발된 중소 규모의 소프트웨어로 일괄 자료 처리나 과학 기술 계산용, 비즈니스 자료 처리용으로 5만 라인 이하의 COCOMO 개발 유형, MM = 2.4 * (KDSI)^1.05, TDEV = 2.5 * MM^0.38",소프트웨어 비용 산정,Organinc Mode
KDSI,"전체 라인 수를 1,000라인 단위로 묶은 것으로 KLOC와 같은 의미",소프트웨어 비용 산정,
반분리형,"조직형과 내장형의 중간형으로 트랜잭션 처리 시스템이나 운영체제, 데이터베이스 관리 시스템 등의 30만 라인 이하의 소프트웨어의 COCOMO 개발 유형, MM = 3.0 * KDSI^1.12,  TDEV = 2.5 * MM^0.35",소프트웨어 비용 산정,Semi-Detached Mode
내장형,"초대형 규모의 트랜잭션 처리 시스템이나 운영체제 등의 30만 라인 이상의 소프트웨어의 COCOMO 개발 유형, MM = 3.6 * KDSI^1.20,  TDEV = 2.5 * MM^0.32",소프트웨어 비용 산정,Embedded Mode
Putnam 모형,"소프트웨어 생명 주기의 전 과정 동안에 사용될 노력의 분포를 가정해주는 모형으로, Rayleigh-Norden 곡선의 노력 분포도를 기초로 함, MM = ( LOC ^ 3 ) / ( 환경상수 ^ 3 * 개발기간 ^ 4), 빈약 환경=2000, 좋은 환경 = 8000, 최적 환경 12000",소프트웨어 비용 산정,
Rayleigh-Norden 곡선,노든이 소프트웨어 개발에 관한 경험적 자료를 수집하여 이를 근거로 그린 곡선이다.,소프트웨어 비용 산정,
FP 모형,"알브레히트가 제안함, 소프트웨어의 기능을 증대시키는 요인별로 가중치를 부여하고 요인별 가중치를 합산하여 총 기능 점수를 산출하며, 총 기능 점수와 영향도를 이용하여 기능 점수를 구한 후 이를 이용해서 비용을 산정하는 기법, FP = (총 기능 점수 ) * (0.65 + (0.1 * 총 영향도))",소프트웨어 비용 산정,Function Point
프로젝트 일정,"프로젝트의 프로세스를 이루는 소작업을 파악하고 예측된 노력을 각 소작업에 분배하며, 소작업의 순서와 일정을 정하는 것, 개발 지연을 방지하고 프로젝트 진행을 관리하는 기초 자료가 된다. WBS, PERT/CPM, 간트 차트 등이 있다",프로젝트 일정 계획,
PERT,"프로젝트에 필요한 전체 작업의 상호 관계를 표시하는 네트워크로 각 작업별로 낙관적인 경우, 가능성이 있는 경우, 비관적인 경우로 나누어 각 단계별 종료 시기를 결정하는 방법, 노드와 간선으로 구성된다. 작업 예측치 = (비관치 + 4*기대치 + 낙관치) /6, 평방 편차 = ((비관치 - 낙관치)/6)^2",프로젝트 일정 계획,Program Evaluation and Review Technique
PERT/CPM,"___ 네트워크는 프로젝트 지연을 방지하고 계획대로 진행되게 하기 위한 일정을 계획하는 것으로, 대단위 계획의 조직적인 추진을 위해 자원의 제약하에 비용을 적게 사용하면서 최단시간 내 계획 완성을 위한 프로젝틑 일정 방법",프로젝트 일정 계획,
낙관치,모든 상황이 좋아서 최대로 빨리 진행될 때 걸리는 시간,프로젝트 일정 계획,
기대치,모든 상황이 정상적으로 진행될 때 걸리는 시간,프로젝트 일정 계획,
비관치,모든 상황에 많은 장애가 생겨서 가장 늦게 진행될 때 걸리는 시간,프로젝트 일정 계획,
결정 경로,각 노드별로 탐색하여 최소 비용이 발생하는 경로,프로젝트 일정 계획,
작업에 대한 경계 시간,"PERT/CPM에선 각 노드간 낙관치, 기대치, 비관치 시간을 표시하여 각 작업간의 경계시간을 알 수 있다",프로젝트 일정 계획,
상호 관련성,PERT/CPM에서는 노드와 간선으로 표시하기 때문에 작업의 진행 과정을 알 수 있다.,프로젝트 일정 계획,
WBS,개발 프로젝트를 여러 개의 작은 관리 단위(소작업)으로 분할하여 계층적으로 기술한 업무 구조,프로젝트 일정 계획,Work Breakdown Structure
CPM,"프로젝트 완성에 필요한 작업을 나열하고, 작업에 필요한 소요 기간을 예측하는데 사용하는 기법이다. 노드와 간선으로 구성된 네트워크로 노드는 작업을, 간선은 작업 사이의 전후 의존 관계를 나타낸다. 박스 노드는 이정표를 의미하며 예상 완료 시간을 표시한다. 병행 작업이 가능하도록 설계할 수 있고, 이를 위한 자원할당도 가능함",프로젝트 일정 계획,Critical Path Method
임계 경로,CPM 에서 가장 오래 걸리는 경로의 시간을 계산한 것,프로젝트 일정 계획,
간트 차트,"프로젝트의 각 작업들이 언제 시작하고 언제 종료되는지에 대한 작업 일정을 막대 도표로 이용하여 표시하는 프로젝트 일정표로, 시간선(TIme-Line) 차트라고도 함, CPM 네트워크 데이터를 바탕으로 해당 차트를 작성할 수 있으며, 이정표, 작업 일정, 작업 기간, 산출물로 구성되어있음",프로젝트 일정 계획,Gantt Chart
소프트웨어 개발 방법론 결정,"프로젝트 관리와 재사용 현황을 소프트웨어 개발 방법론에 반영하고, 확정된 소프트웨어 생명 주기와 개발 방법론에 맞춰 소프트웨어 개발 단계, 활동, 작업, 절차 등을 정의한 것",소프트웨어 개발 방법론 결정,
프로젝트 관리,주어진 기간 내에 최소의 비용으로 사용자를 만족시키는 시스템을 개발하기 위한 전반적인 활동,소프트웨어 개발 방법론 결정,
일정 관리,"작업 순서, 작업 기간 산정, 일정 개발, 일정 통제를 의미하는 프로젝트 관리 유형",소프트웨어 개발 방법론 결정,
비용 관리,"비용 산정, 비용 예산 편성, 비용 통제를 의미하는 프로젝트 관리 유형",소프트웨어 개발 방법론 결정,
인력 관리,"프로젝트 팀 편성, 자원 산정, 프로젝트 조직 정의, 프로젝트 팀 개발, 자원 통제, 프로젝트 팀 관리를 의미하는 프로젝트 관리 유형",소프트웨어 개발 방법론 결정,
위험 관리,"위험 식별, 위험 평가, 위험 대처, 위험 통제를 의미하는 프로젝트 관리 유형",소프트웨어 개발 방법론 결정,
품질 관리,"품질 계획, 품질 보증 수행, 품질 통제 수행을 의미하는 프로젝트 관리 유형",소프트웨어 개발 방법론 결정,
소프트웨어 개발 프로세스,"소프트웨어 제품 생산을 위해 수행하는 작업으로, 소프트웨어 명세, 개발, 검토, 진화로 구분됨",소프트웨어 개발 방법론 결정,
소프트웨어 개발 생명 주기,"소프트웨어를 개발하기 위해 정의하고, 운용, 유지보수 등의 과정을 각 단계별로 나눈 것이다.",소프트웨어 개발 방법론 결정,
소프트웨어 프로세스 모형,"소프트웨어 생명 주기를 표현하는 형태를 의미하며, 폭포수 모형, 나선형 모형, 프로토타이핑 모형 등이 있다.",소프트웨어 개발 방법론 결정,
소프트웨어 개발 표준,"소프트웨어 개발 단계에서 수행하는 품질 관리에 사용되는 국제 표준을 의미한다, 대표적으로 ISO/IEC 12207, CMMI, SPICE 가 있다. 기본 생명 주기, 지원 생명 주기, 조직 생명 주기로 프로세스를 구분한다.",소프트웨어 개발 표준,
ISO/IEC 12207,"국제표준화기구에서 만든 표준 소프트웨어 생명 주기 프로세스로, 소프트웨어의 개발, 운영, 유지보수 등을 체계적으로 관리하기 위한 생명 주기 표준을 제공한다.",소프트웨어 개발 표준,
CMMI,"소프트웨어 개발 조직의 업무 능력 및 조직의 성숙도를 평가하는 모델로, 미국 카네기멜론 대학교의 소프트웨어 공학연구소에서 개발하였다. 초기, 관리, 정의, 정량적 관리, 최적화의 5단계로 구분한다.",소프트웨어 개발 표준,Capability Maturity Model Integration
초기,"정의된 프로세스 없는 성숙도, 작업자 능력에 따라 성공 여부 결정됨",소프트웨어 개발 표준,Initial
관리,"규칙화된 프로세스 성숙도, 특정한 프로젝트 내의 프로세스 정의 및 수행",소프트웨어 개발 표준,Managed
정의,"표준화된 프로세스 성숙도, 조직의 표준 프로세스를 활용하여 업무 수행",소프트웨어 개발 표준,Defined
정량적 관리,"예측 가능한 프로세스 성숙도, 프로젝트를 정량적으로 관리 및 통제",소프트웨어 개발 표준,Quantitatively Managed
최적화,"지속적 개선 프로세스 성숙도, 프로세스 역량 향상을 위해 지속적인 프로세스 개선",소프트웨어 개발 표준,Optimizing
SPICE,"정보 시스템 분야에서 소프트웨어의 품질 및 생산성 향상을 위해 소프트웨어 프로세스를 평가 및 개선하는 국제 표준으로 공식 명칭은 ISO/IEC 15504이다. 프로세스 개선을 위해 개발 기관이 스스로 평가하고, 요구조건의 만족 여부를 개발 조직이 스스로 평가하는 것, 계약 체결을 위해 수탁 기관의 프로세스를 6단계로 평가하는 것을 목적으로 한다.",소프트웨어 개발 표준,Software Process Improvement and Capablility dEntermination
고객-공급자 프로세스,"소프트웨어를 개발하여 고객에게 전달하는 것을 지원하고, 소프트웨어의 정확한 운용 및 사용을 위한 프로세스로 구성된다. 인수, 공급, 요구, 도출, 운영에 대해 10개의 프로세스를 가짐",소프트웨어 개발 표준,Customer-Supplier
공학 프로세스,"시스템과 소프트웨어 제품의 명세화, 구현, 유지보수를 하는데 사용되는 프로세스로 구성된다. 개발, 소프트웨어 유지보수에 대해 9개의 프로세스를 가짐",소프트웨어 개발 표준,Engineering
지원 프로세스,"소프트웨어 생명 주기에서 다른 프로세스에 의해 이용되는 프로세스로 구성된다. 문서화, 형상, 품질 보증, 검증, 확인, 리뷰, 감사, 품질 문제 해결에 대해 8개의 프로세스를 가짐",소프트웨어 개발 표준,Support
관리 프로세스,"소프트웨어 생명 주기에서 프로젝트 관리자에 의해 사용되는 프로세스로, 관리, 프로젝트 관리, 품질 및 위험 관리에 대해 4가지 프로세스를 가짐",소프트웨어 개발 표준,Management
조직 프로세스,"조직의 업무 목적 수립과 조직의 업무 목표 달성을 위한 프로세스로 구성된다. 조직 배치, 개선 활동 프로세스, 인력 관리, 기반 관리, 측정 도구, 재사용에 대해 9개의 프로세스를 가짐",소프트웨어 개발 표준,Organizaton
Level 0 - 불완전,프로세스가 구현되지 않았거나 목적을 달성하지 못한 프로세스 수행 능력 단계이다,소프트웨어 개발 표준,
Level 1 - 수행,프로세스가 수행되고 목적이 달성한 프로세스 수행 능력 단계이다,소프트웨어 개발 표준,
Level 2 - 관리,정의된 자원의 한도 내에서 그 프로세스가 작업 산출물을 인도하는 프로세스 수행 능력 단계이다,소프트웨어 개발 표준,
Level 3 - 확립,소프트웨어 공학 원칙에 기반하여 정의된 프로세스 수행 능력 단계이다,소프트웨어 개발 표준,
Level 4 - 예측,"프로세스가 목적 달성을 위해 통제되고, 양적인 측정을 통해서 일관되게 수행되는 프로세스 수행 능력 단계이다",소프트웨어 개발 표준,
Level 5 - 최적화,"프로세스 수행을 최적화하고, 지속적인 개선을 통해 업무 목적을 만족시키는 프로세스 수행 능력 단계이다",소프트웨어 개발 표준,
소프트웨어 개발 방법론 테일러링,"프로젝트 상황 및 특성에 맞도록 정의된 소프트웨어 개발 방법론의 절차, 사용기법 등을 수정 및 보완하는 작업이다. 관리적 측면에서 볼 때, 최단기간에 안정적인 프로젝트 진행을 위해 사전 위험을 식별하고 제거하는 작업, 기술적 측면에서 볼 때는 프로젝트 특성에 맞는 최적의 기법과 도구를 찾아가는 작업이다",소프트웨어 개발 방법론 테일러링,
목표 환경,시스템의 개발 환경과 유형이 서로 다른 경우 고려할 테일러링 내부적 기준이다,소프트웨어 개발 방법론 테일러링,
요구사항,"프로젝트의 생명 주기 활동에서 개발, 운영, 유지보수 등 프로젝트에서 우선적으로 고려할 ___가 다른 경우 고려할 테일러링 내부적 기준이다",소프트웨어 개발 방법론 테일러링,
프로젝트 규모,"비용, 인력, 기간 등 프로젝트 규모가 서로 다른 경우 고려할 테일러링 내부적 기준",소프트웨어 개발 방법론 테일러링,
보유 기술,"프로세스, 개발 방법론, 산출물, 구성원의 능력이 서로 다른 경우 고려할 테일러링 내부적 기준",소프트웨어 개발 방법론 테일러링,
법적 제약상황,프로젝트별 적용될 IT Compliance 가 서로 다른 경우 고려할 테일러링 외부적 기준,소프트웨어 개발 방법론 테일러링,
표준 품질 기준,"금융, 제도 등 분야별 표준 품질 기준이 서로 다른 경우 고려할 테일러링 외부적 기준",소프트웨어 개발 방법론 테일러링,
IT Compliance,기업 운영 시 IT분야에서 내외부적으로 반드시 지켜야하는 법적 규제 사항이나 지침을 의미합니다.,소프트웨어 개발 방법론 테일러링,
프로젝트 규모와 복잡도,"가장 일반적 기법, 프로젝트 규모를 프로젝트 기간, 작업 범위, 참여 인원 등에 따라 대,중,소로 구분하고 업무 난이도에 따라 복잡도를 상, 중, 하로 구분하는 기법",소프트웨어 개발 방법론 테일러링,
프로젝트 구성원,프로젝트에 참여하는 구성원들의 기술적 숙련도와 방법론의 이해 정도를 확인하여 테일러링 수준을 결정하는 기법,소프트웨어 개발 방법론 테일러링,
팀내 방법론 지원,프로젝트 수행 시 각 팀별로 방법론 담당 인력을 배정하여 팀의 방법론 교육과 프로젝트 전체의 방법론 운영을 위한 의사소통을 담당하도록 인력을 구성하는 기법,소프트웨어 개발 방법론 테일러링,
자동화,프로젝트 수행 시 작업 부하를 줄이기 위해 중간 단계에서의 산출물을 자동화 도구를 사용하여 산출할 수 있도록 지원하는 기법,소프트웨어 개발 방법론 테일러링,
프레임워크,"소프트웨어 개발에 공통적으로 사용되는 구성 요소와 아키텍처를 일반화하여 손쉽게 구현할 수 있도록 여러 가지 기능을 제공해주는 반제품 형태의 소프트웨어 시스템, 사업자 종속성이 해소됨, 이미 내장된 클래스 라이브러리가 구현되어 있음",소프트웨어 개발 프레임워크,
모듈화,"프레임워크는 캡슐화를 통해 ___를 강화하고 설계 및 구현의 변경에 따른 영향을 최소화함으로써 소프트웨어의 품질을 향상시키고, 개발표준에 의한 ___로 유지 보수가 용이하다",소프트웨어 개발 프레임워크,
재사용성,"프레임워크는 ___ 가능한 모듈을 제공함으로써 예산 절감, 생산성 향상, 품질 보증이 가능하다",소프트웨어 개발 프레임워크,
확장성,프레임워크는 다형성을 통한 인터페이스 ___이 가능하여 다양한 형태와 기능을 가진 애플리케이션 개발이 가능하다,소프트웨어 개발 프레임워크,
제어의 역전,개발자가 관리하고 통제해야하는 객체들의 제어를 프레임워크에 넘김으로써 생산성을 향상시킨다.,소프트웨어 개발 프레임워크,
다형성,메시지에 의해 객체가 연산을 수행하게 될 때 하나의 메시지에 대해 각가의 객체가 가지고 있는 고유한 방법으로 응답할 수 있는 능력을 의미함,소프트웨어 개발 프레임워크,
스프링 프레임워크,자바 플랫폼을 위한 오픈 소스 경량형 애플리케이션 프레임워크,소프트웨어 개발 프레임워크,
전자정부 프레임워크,우리나라의 공공부문 정보화 사업 시 효율적인 정보 시스템의 구축을 지원하기 위해 필요한 기능 및 아키텍처를 제공하는 프레임워크이다.,소프트웨어 개발 프레임워크,
닷넷 프레임워크,"Windows 프로그램의 개발 및 실행 환경을 제공하는 프레임워크로, Microsoft 사에서 통합 인터넷 전략을 위해 개발하였다. CLR 이라라는 이름의 가상머신 상에서 작동하고, 메모리 관리, 유형 및 메모리 안전성, 보안, 네트워크 작업 등 여러가지 서비스를 제공한다.",소프트웨어 개발 프레임워크,
지능형 초연결망,"과학기술정보통신부 주관으로 추진 중인 사업으로, 4차 산업혁명 시대를 맞아 새로운 변화에 따라 급격하게 증가하는 데이터 트래픽을 효과적으로 수용하기 위해 시행되는 정부 주관 사업, 국가 전체 망에 소프트웨어 정의기술(SDE)을 적용하는 방법으로 네트워크 데이터 트래픽 증가를 예상하고 이를 수용할 전략이다.",네트워크 관련 신기술,
소프트웨어 정의 기술,"네트워크, 데이터 센터 등에서 소유한 자원을 가상화하여 개별 사용자에게 제공하고, 중앙에서는 통합적으로 제어가 가능한 기술이다",네트워크 관련 신기술,Software-Defined Everything
소프트웨어 정의 네트워킹,"네트워크를 컴퓨터처럼 모델링하여 여러 사용자가 각각의 소프트웨어들로 네트워킹을 가상화하여 제어하고 관리하는 네트워크이다. 하드웨어에 의존하는 네트워크 체계에 비해 보다 효율적으로 네트워크를 제어, 관리할 수 있다.",네트워크 관련 신기술,Software Defined Networking
소프트웨어 정의 데이터 센터,데이터 센터의 모든 자원을 가상화하여 인력의 개입없이 소프트웨어 조작만으로 관리 및 제어되는 데이터 센터이다,네트워크 관련 신기술,Software Defined Data Center
소프트웨어 정의 스토리지,"물리적인 데이터 스토리지를 가상화하여 여러 스토리지를 하나처럼 관리하거나, 하나의 스토리지를 여러 스토리지로 나눠 사용할 수 있는 기술이다.",네트워크 관련 신기술,Software-Defined Storage
사물 인터넷,정보 통신 기술을 기반으로 실세계와 가상 세계의 다양한 사물들을 인터넷으로 서로 연결하여 진보된 서비스를 제공하기 위한 서비스 기반 기술이다. 유비쿼터스 공간을 구현하기 위한 컴퓨팅 기기들이 환경과 사물에 심겨 환경이나 사물 그 자체가 지능화되는 것,네트워크 관련 신기술,Internet of Things
유비쿼터스,"라틴어로 '보편적으로 존재하다'라는 의미로, 사용자가 컴퓨터나 네트워크를 의식하지 않고 장소에 상관없이 자유롭게 네트워크에 접속할 수 있는 환경을 의미한다.",네트워크 관련 신기술,Ubiquitous
M2M,"무선 통신을 이용한 기계와 기계 사이의 통신이다. 변압기 원격 감시, 전기, 가스 등의 원격 검침, 무선 신용카드 조회기, 무선 보안 단말기 등",네트워크 관련 신기술,Machine to Machine
메시 네트워크,"차세대 이동통신, 홈네트워킹, 공공 안전 등 특수 목적을 위한 네트워크, 수십에서 수천 개의 디바이스를 그물망 같이 유기적으로 연결하여 모든 구간을 동일한 무선망처럼 구성하여 사용자가 안정적인 네트워크를 사용할 수 있게 한다.",네트워크 관련 신기술,Mesh Network
와이선,"스마트 그리드와 같은 장거리 무선 통신을 필요로 하는 사물 인터넷 서비스를 위한 저전력 장거리 통신 기술, 낮은 지연 속도, 메시 네트워크 기반 확장성, 펌웨어 업그레이드 용이성 등으로 짧은 시간 동안 데이터 전송이 빈범한 검침 분야에 유용",네트워크 관련 신기술,Wi-SUN
UMB,"짧은 거리에서 많은 양의 디지털 데이터를 낮은 전력으로 전송하기 위한 무선 기술로 무선 디지털 펄스라고도 하며, 블루투스와 비교되는 기술, 땅속이나 벽면 뒤로도 전송이 가능하여 재해에도 인명 구조 가능하다",네트워크 관련 신기술,Ultra WideBand
PICONET,여러 개의 독립된 통신장치가 블루투스 기술이나 UMB 통신 기술을 사용하여 통신망을 형성하는 무선 네트워크 기술이다.,네트워크 관련 신기술,
USN,각종 센서로 다양한 정보를 무선으로 수집할 수 있도록 구성한 네트워크이다.,네트워크 관련 신기술,Ubiquitous Sensor Network
SON,"주변 상황에 맞추어 스스로 망을 구성하는 네트워크를 말한다. 갑작스러운 사용자의 증가나 감소 시에는 자동으로 주변 셀과의 협력을 통해 셀 용량을 변화시키며, 장애가 발생했을 때 자체적인 치유도 가능함",네트워크 관련 신기술,Self Organizing Network
BLE,"일반 블루투스와 동일한 2.4Ghz 주파수 대역을 사용하지만 연결되지 않은 대기 상태에서는 절전 모드를 유지하는 기술, 주로 낮은 전력으로 저용량 데이터를 처리하는 시계, 장난감, 비컨, 웨어러블 디바이스에 적합",네트워크 관련 신기술,Bluetooth Low Energy
NFC,"고주파를 이용한 근거리 무선 통신 기술로, 아주 가까운 거리에서 양방향 통신을 지원하는 RFID 기술의 일종, 13.56MHz 주파수를 이용해 10cm 내에서 최고 424Kbps 속도로 데이터 전송을 지원한다.",네트워크 관련 신기술,Near Field Communication
스마트 그리드,전기의 생산부터 소비까지의 전 과정에 정보통신 기술을 접목하여 에너지 효율성을 높이는 지능형 전력망 시스템,네트워크 관련 신기술,Smart Grid
RFID,사물에 전자 태그를 부착하고 무선 통신을 이용하여 사물의 정보 및 주변 정보를 감지하는 센서 기술,네트워크 관련 신기술,Radio Frequency IDentification
클라우드 컴퓨팅,각종 컴퓨터 자원을 중앙 컴퓨터에 두고 인터넷 기능을 갖는 단말기로 언제 어디서나 인터넷을 통해 컴퓨터 작업을 수행할 수 있는 환경을 의미한다. ,네트워크 관련 신기술,
모바일 클라우딩 컴퓨팅,모바일 기기로 클라우드 컴퓨팅 인프라를 구성하여 여러 가지 정보와 자원을 공유하는 기술,네트워크 관련 신기술,
인터클라우드 컴퓨팅,각기 다른 클라우드 서비스를 연동하거나 컴퓨팅 자원의 동적 할당이 가능하도록 여러 클라우드 서비스 제공자들이 제공하는 클라우드 서비스나 자원을 연결하는 기술,네트워크 관련 신기술,
대등 접속,클라우드 서비스 제공자 간 직접 연계하는 인터클라우드 컴퓨팅 형태,네트워크 관련 신기술,Peering
연합,자원 공유를 기본으로 사용 요구량에 따른 동적 자원 할당을 지원함으로써 논리적으로 하나의 서비스를 제공하는 인터클라우드 컴퓨팅 형태,네트워크 관련 신기술,Federation
중개,서비스 제공자 간의 직∙간접적인 자원 연계 또는 단일 서비스 제공자를 통한 중개 서비스를 제공하는 인터클라우드 컴퓨팅 형태,네트워크 관련 신기술,Intermediary
클라우드 기반 HSM,"클라우드를 기반으로 암호화 키의 생성, 저장, 처리 등의 작업을 수행하는 보안 기기를 가리키는 용어, 클라우드에 인증서를 저장하므로 스마트폰과 같은 개별 기기에서 인증서를 저장할 필요가 없다. 암호키 생성은 하드웨어적으로 구현되기 때문에 소프트웨어 암호 기술의 한계를 극복할 수 있다.",네트워크 관련 신기술,Cloud-based Hardware Security Module
파스-타,"소프트웨어 개발 환경을 제공하기 위해 개발한 개방형 클라우드 컴퓨팅 플랫폼, 과기부와 한국정보화진흥원이 연구개발하여, 국내 IT 서비스 경쟁력 강화를 목표로 한다.",네트워크 관련 신기술,
징,10cm 이내 거리에서 3.5Gbps 속도의 데이터 전송이 가능한 초고속 근접무선통신이다.,네트워크 관련 신기술,Zing
NDN,콘텐츠 자체의 정보와 라우터 기능만으로 데이터 전송을 수행하는 기술,네트워크 관련 신기술,Named Data Networking
CCN,"콘텐츠 중심 네트워킹이란 뜻으로, 인터넷에서 IP 주소에 따른 데이터 전송에서 벗어나 사용자가 요구하는 콘텐츠 중심의 데이터 전달이 가능하다",네트워크 관련 신기술,Content Centric Networking
올-IP,"유선 전화망, 무선 망, 패킷 데이터 망 등 기존의 통신망을 모두 IP 기반의 망으로 통합한 차세대 네트워크",네트워크 관련 신기술,
NGN,ITU-T에서 개발하고 있는 유선망 기반의 차세대 통신망이다. 이동통신에서 제공하는 완전한 이동성과 하나의 망으로 모든 정보와 서비스를 패킷으로 압축하여 전송하는 것을 목표로 한다,네트워크 관련 신기술,Next Generation Network
WBANN,웨어러블 또는 몸에 심는 형태의 센서나 기기를 무선으로 연결하는 개인 영역 네트워킹 기술이다,네트워크 관련 신기술,Wireless Body Area Network
GIS,"지리적인 자료를 수집, 저장,분석, 출력할 수 있는 컴퓨터 응용 시스템으로 위성을 이용해 모든 사물의 위치 정보를 제공해주는 것을 말함",네트워크 관련 신기술,Geographic Information System
Ad-hoc Network,재난 현장과 같이 별도의 고정된 유선망을 구축할 수 없는 장소에서 모바일 호스트만을 이용하여 구성한 네트워크이다. 유선망과 기지국이 필요 없고 호스트의 이동에 따라 제약 없이 빠른 망 구성과 저렴한 비용이 장점,네트워크 관련 신기술,
P2P,"개인대 개인이라는 의미를 가지며, 네트워크에서 개인 대 개인이 PC를 이용하여 서로 데이터를 공유하는 방식을 의미",네트워크 관련 신기술,
네트워크 슬라이싱,"5G 핵심기술 중 하나로, 하나의 물리적인 네트워크를 다수의 가상 네트워크로 분리하여 각각의 네트워크를 통해 다양한 고객 맞춤형 서비스를 제공하는 것을 목적으로 하는 네트워크 기술이다",네트워크 관련 신기술,
파장 분할 다중화,"광섬유를 이용한 통신 기술의 하나로, 파장이 다른 광선끼리는 서로 간섭을 일으키지 않는 성질을 이용하여 서로 다른 복수의 신호를 보냄으로써 여러 대의 단말기가 동시에 통신 회선을 사용할 수 있도록 하는 기술",네트워크 관련 신기술,Wavelength Division Multiplexing
LOD,"Linked Data와 Open data의 합성어로, 누구나 사용할 수 있도록 웹상에 공개된 연계 데이터를 의미한다, 웹상에 존재하는 데이터를 개별 URI로 식별하고, 각 URI에 링크 정보를 부여함으로써 상호 연결된 웹을 지향하는 모형이다",네트워크 관련 신기술,Linked Open Data
SSO,한 번의 로그인으로 개인이 가입한 모든 사이트를 이용할 수 있게 해주는 시스템,네트워크 관련 신기술,Single Sign On
네트워크 설치 구조,"정보를 전달하기 위해서 통신 규약에 의해 연결된 통신 설비의 집합. 통신망을 구성하는 요소들을 공간적으로 배치하는 방법, 물리적 위치에 따라서 스타, 링, 버스, 트리, 메쉬 형으로 나뉨",네트워크 구축,
Star,"중앙에 컴퓨터가 있고, 이를 중심으로 단말장치들이 연결되는 중앙 집중식의 네트워크 구성 형태, Point to Point 방식, 중앙 컴퓨터가 고장나면 전체 통신망의 기능이 정지됨",네트워크 구축,
Ring,"컴퓨터와 단말장치들을 서로 이웃하는 것끼리 Point to Point 방식으로 연결, 어느 하나라도 고장 나면 전체 통신망에 영향을 미칠 수 있다.",네트워크 구축,
Bus,"한 개의 통신 회선에 여러 대의 단말장치가 연결되어 있는 형태, 물리적 구조가 간단하고 단말 장치의 추가와 제거 용이함",네트워크 구축,
Tree,"중앙 컴퓨터와 일정 지역의 단말장치까지는 하나의 통신 회선으로 연결시키고, 이웃하는 단말장치는 일정 지역 내에 설치된 중간 단말장치로부터 다시 연결시키는 형태",네트워크 구축,
Mesh,모든 지점의 컴퓨터와 단말장치를 서로 연결한 형태로 노드의 연결성이 높다.,네트워크 구축,
근거리 통신망,"주로 자원 공유 목적으로 가까운 거리에 있는 컴퓨터, 프린터, 테이프 등 자원 연결할 때 구성한다.",네트워크 구축,Local Area Network
광대역 통신망,국가와 국가 혹은 대륙과 대륙 등과 같이 멀리 떨어진 사이트들을 연결하여 구성한다. ,네트워크 구축,Wide Area Network
VLAN,"LAN의 물리적인 배치와 상관없이 논리적으로 분리하는 기술로, 접속된 장비들의 성능 및 보안을 향상시킬 수 있다.",네트워크 구축,Virtual Local Area Network
802.1,"전체의 구성, OSI 참조 모델과의 관계, 통신망 관리 등에 관한 규약",네트워크 구축,
802.2,논리 링크 제어 계층에 관한 규약,네트워크 구축,
802.3,CSMA/CD 방식의 매체 접근 제어 계층에 관한 규약,네트워크 구축,
802.4,토큰 버스 방식의 매체 접근 제어 계층에 관한 규약,네트워크 구축,
802.5,토큰 링 방식의 매체 접근 제어 계층에 관한 규약,네트워크 구축,
802.6,도시형 통신망(MAN)에 관한 규약,네트워크 구축,
802.9,종합 음성/데이터 네트워크에 관한 규약,네트워크 구축,
802.11,무선 LAN에 관한 규약,네트워크 구축,
CSMA/CA,무선 랜에서 데이터 전송 시 매체가 비어있음을 확인한 뒤 충돌을 피하기 위해 일정시간 기다린 후 데이터를 전송하는 방법,네트워크 구축,
802.11 초기,2.4GHz 대역 전파와 CSMA/CA 기술을 사용해 2Mbps까지의 전송 속도를 지원함,네트워크 구축,
802.11a,5GHz 대역 전파를 사용하여 OFDM 기술을 사용해 54Mbps까지의 전송 속도를 지원한다,네트워크 구축,
802.11b,"802.11 초기 개선안으로 등장하여, 초기 버전의 대역 전파에 비해 최고 11Mbps 전송 속도로 데이터를 전송하는 방법",네트워크 구축,
802.11e,"802.11의 부가 기능 표준으로, QoS 기능이 지원되도록하기 위해 매체 접근 제어(MAC) 계층에 해당하는 부분을 수정함",네트워크 구축,
802.11g,"2.4GHz 대역 전파를 사용하지만, 5GHz 대역 전파를 사용하는 802.11a 와 동일한 54Mbps까지의 전송 속도를 지원함",네트워크 구축,
802.11i,802.11의 보안 기능 표준으로 인증방식에 WPA/WPA2 를 사용한다.,네트워크 구축,
802.11n,2.4GHz 대역과 5GHz 대역을 사용하는 규격으로 최고 600Mbps 까지의 전송 속도를 지원한다.,네트워크 구축,
WPA,WI-FI에서 제정한 무선랜 인증 및 암호화 관련 표준,네트워크 구축,Wi-Fi Protected Access
WPA2,IEEE 802.11i 표준을 완전히 수용하지 못했던 WPA를 개선한 버전,네트워크 구축,Wi-Fi Protected Access 2
스위치,"브릿지와 같이 LAN과 LAN을 연결하여 훨씬 더 큰 LAN을 만드는 장치로 OSI 7계층의 Layer에 따라 L2, L3, L4, L7으로 분류한다.",스위치,
L1 switch,"Hub, 물리적으로 복사하여 프레임 전송",스위치,
L2 switch,"일반적으로 지칭하는 스위치, MAC 주소를 기반으로 프레임을 전송한다. 동일 네트워크 간의 연결만 가능하다",스위치,
L3 switch,"OSI 3계층 장비, IP 주소를 기반으로 패킷을 나눠준다, 서로 다른 네트워크 간의 연결이 가능하다",스위치,
L4 switch,"OSI 4계층 장비, 로드벨런서가 달린 L3 스위치로, IP 주소 및 TCP/UDP를 기반으로 사용자들의 요구를 서버의 부하가 적은 곳에 배분하는 기능 제공",스위치,
L7 switch,"OSI 7계층, IP 주소, TCP/UDP 포트 정보에 패킷 내용까지 참조하여 세밀하게 로드벨런싱 함",스위치,
프레임,"L2 스위치에는 패킷을 프레임이라고 함, Preamble, SFD, mac Destination Address, mac Source Address, EtherType, Data, PAD, CRC 로 구성, MTU 1500바이트, 거의 언제나 3계층 참조(20바이트)+TCP헤더(20바이트)를 포함여 형성함",스위치,
MTU,네트워크에 연결된 장치가 받아들일 수 있는 최대 데이터 패킷 크기,스위치,Maximum Transmission Unit
플러딩,"어떤 노드에서 온 하나의 패킷을 라우터에 접속되어 있는 다른 모든 노드로 전달하는 것, 네트워크에서 수정된 라우팅 정보를 모든 노드에 빠르게 배포하는 수단으로 주로 사용",스위치,Flooding
Store and Fowarding,데이터를 모두 받은 후 스위칭하는 스위치 방식,스위치,
Cut-through,데이터 목적지 주소만을 확인한 후 바로 스위칭하는 방식,스위치,
Fragment Free,"Store and Forwarding 과 Cut-through 방식의 장점을 결합한 방식으로, 전달 전에 프레임의 64byte를 기다린다. 일반적으로 프레임 에러는 거의 매번 처음 64Byte 안에 나타나기 때문에, 에러 체크 기능이 추가된다.",스위치,
Backbone Switch,"여러 네트워크들을 연결할 때 중추적 역할을 하는 네트워크를 부르는 말, 모든 패킷이 지나가는 네트워크의 중심에 배치한다. 주로 L3 스위치가 역할을 대신한다.",스위치,
Hierarchical 3 Layer Model,"네트워크 구성 시 사용되는 모델의 한 종류로, Access, Distribution, Core layer 로 구분하는 것",스위치,
Access Layer,"사용자가 네트워크에 접속할 때 최초로 연결되는 지점으로, 사용자들로부터 오는 통신을 집약하여 DIstribution layer 로 전송하는 역할, 주로 L2 switch를 사용함, 장비 성능은 낮아도 되지만, 포트 수는 사용자 수 만큼 필요하다.",스위치,
Distribution Layer,"액세스 계층의 장치들이 연결되는 지점으로 액세스 계층에서 오는 통신을 집약해서 코어 계층으로 전송함, LAN 간에 라우팅 기능을 수행함, 라우터, L3 스위치가 사용된다",스위치,
Core Layer,"디스트리뷰션 계층에서 오는 통신을 집약해 인터넷에 연결하는 계층, 백본 스위치를 사용함",스위치,
Routing,"경로 제어는 송∙수신 측 간의 전송 경로 중에서 최적 패킷 교환 경로를 결정하는 기능, 경로 제어표를 참조하여 이뤄지며, 이를 수행하는 기기가 라우터이다.",라우팅,
자율 시스템,하나의 도메인에 속하는 라우터들의 집합을 말함. 그러므로 하나의 자율 시스템에 속한다는 것은 하나의 도메인에 속한다는 것 의미함,라우팅,Autonomous System
경로 제어 프로토콜,"효율적인 경로 제어를 위해 네트워크 정보를 생성, 교환, 제어하는 프로토콜을 총칭함, IGP, EGP, BGP 가 있다.",경로 제어,
IGP,"하나의 자율 시스템 내의 라우팅에 사용되는 프로토콜이다. RIP, OSPF 가 있다.",경로 제어,Interior Gateway Protocol
RIP,"현재 가장 널리 사용되는 라우팅 프로토콜로 거리 벡터 라우팅 프로토콜이라고도 불리며, 최단 경로 탐색에 Bellman-Ford 알고리즘이 사용된다. 소규모 네트웨크 내에서 효율적인 방법으로, 최대 홉을 15로 제한하고,  30초마다 모든 네트워크 라우터에 라우터 정보를 보내며, 180초 내 응답하지 않으면, 해당 경로를 상태 이상으로 간주한다",경로 제어,Routing Information Protocol
OSPF,"RIP 단점을 해결하여 새로운 기능을 지원하는 인터넷 프로토콜로, 대규모 네트워크에서 사용된다. 인터넷 망에서 이용자가 최단 경로를 선정할 수 있도록 라우팅 정보에 노드 간의 거리 정보, 링크 상태 정보를 실시간 반영하여 라우팅 테이블을 형성, 라우팅 정보의 변화가 생길 경우 주변 모든 라우터에 알리고, 이를 다시 라우팅 테이블에 반영한다. 다익스트라 알고리즘을 사용한다.",경로 제어,
Bellman-Ford Algorithm,두 노드 간의 최단 경로를 구하는 알고리즘,경로 제어,
Dijkstra Algorithm,벨만포드 알고리즘에 비해 가중치가 음수인 경우도 처리할 수 있음,경로 제어,
홉,데이터가 목적지까지 전달되는 과정에서 거치는 네트워크의 수,경로 제어,
EGP,"자율 시스템 간의 라우팅, 즉 게이트웨이 간의 라우팅에 사용되는 프로토콜이다",경로 제어,Exterior Gateway Protocol
BGP,"자율 시스템 간의 라우팅 프로토콜로, EGP의 단점을 보완하기 위해 만들어졌음, 초기에 ___ 라우터들이 연결될 때에는 전체 경로 제어표를 교환하고 이후에는 변환된 정보만을 교환한다.",경로 제어,Border Gateway Protocol
트래픽 제어,"네트워크의 보호, 성능 유지, 네트워크 자원의 효율적인 이용을 위해 전송되는 패킷의 흐름 또는 그 양을 조절하는 기능으로 흐름 제어, 폭주 제어, 교착상태 방지 기법이 있음",경로 제어,
흐름 제어,"네트워크 내의 원활한 흐름을 위해 송수신 측 사이에 전송되는 패킷의 양이나 속도를 규제하는 기능, 송신 측과 수신 측 간의 처리 속도 또는 버퍼 크기의 차이에 의해 생길 수 있는 수신 측 오버플로를 방지하기 위함",경로 제어,
정지-대기,"수신 측의 확인 신호(ACK)를 받은 후에 다음 패킷을 전송하는 방식으로, 한 번에 하나의 패킷만 전송할 수 있음",경로 제어,Stop-and-Wait
슬라이딩 윈도우,"확인 신호, 즉 수신 통지를 이용하여 송신 데이터의 양을 조절하는 방식, 수신 측의 확인 신호를 받지 않더라도 미리 정해진 패킷의 수만큼 연속적으로 전송하는 방식으로 효율이 좋음. 미리 패킷의 최대치를 약속받아서 가능함. 이 패킷의 최대치가 윈도우 크기이다. 윈도우의 크기는 상황에 따라 변하므로, 응답에 대해 ACK or NAK 에 따라 윈도우 사이즈가 변한다",경로 제어,Sliding Window
폭주 제어,네트워크 내의 패킷 수를 조절하여 네트워크의 오버플로를 방지하는 기능이다.,경로 제어,Congestion Control
느린 시작,"윈도우 크기를 1,2,4 ∙ ∙ ∙ 2배수씩 지수적으로 증가시켜 초기엔 느리지만 갈수록 빨라지는 혼잡 제어 방식, 전송 데이터의 크기가 임계값에 도달하면 혼잡 회피 단계로 넘어간다",경로 제어,Slow Start
혼잡 회피,"느린 시작의 지수적 증가가 임계 값에 도달하면 혼잡으로 간주하고, 회피를 위해 윈도우의 크기를 1씩 선형적으로 증가시켜 혼잡을 예방하는 방식",경로 제어,Congestion Avoidance
교착 상태,"교환기 내 패킷들을 축적하는 기억 공간이 꽉 차있을 때, 다음 패킷들이 기억 공간을 들어가기 위해 무한정 기다리는 현상을 말함",경로 제어,Dead lock
교착 상태 방지,"평상시 패킷이 같은 목적지를 갖지 않도록 할당하고, 데드락이 걸렸을 때, 단말장치를 선택하여 패킷 버퍼를 폐기한다.",경로 제어,
인공지능,"인간의 두뇌와 같이 컴퓨터 스스로 추론, 학습, 판단 등 인간지능적인 작업을 수행하는 시스템",SW 관련 신기술,Artificial Intelligence
뉴럴링크,작은 전극을 뇌에 이식함으로써 생각을 업로드하고 다운로드하는 것을 목표로함,SW 관련 신기술,NeralLink
딥 러닝,인간의 두뇌를 모델로 만들어진 인공 신경망을 기반으로 하는 기계 학습 기술이다. 데이터를 정형화하지 않고도 스스로 필요한 데이터를 수집 분석하여 고속으로 처리할 수 있다.,SW 관련 신기술,Deep learning
전문가 시스템,"의료 진단 등과 같은 특정 분야의 전문가가 수행하는 고도의 업무를 지원하기 위한 컴퓨터 응용 프로그램이다, 지식 베이스라는 데이터베이스와 추론 기구를 통해 결정을 내리거나 문제를 해결한다.",SW 관련 신기술,Expert System
VR,컴퓨터 등을 사용하여 실제가 아닌 환경이나 상황을 구현한다.,SW 관련 신기술,Virtual Reality
AR,실제 촬영한 화면에 가상의 정보를 부가하여 보여주는 기술이다.,SW 관련 신기술,Augmented Reality
MR,가상현실과 현실 세계를 합쳐 현실의 물리적인 객체와 가상의 객체가 상호작용할 수 있는 환경을 구현하는 기술이다.,SW 관련 신기술,Mixed Reality
그레이웨어,"소프트웨어를 제공하는 입장에서는 악의적이지 않은 유용한 소프트웨어라고 주장할 수 있지만 사용자 입장에서는 악의적일 수도 있는 애드웨어, 트랙웨어, 악성 코드 등을 지칭한다.",SW 관련 신기술,Greyware
매시업,"웹에서 제공하는 정보 및 서비스를 이용하여 새로운 소프트웨어나 서비스, 데이터베이스 등을 만드는 기술이다.",SW 관련 신기술,Mashup
RIA,플래시 애니메이션 기술과 웹 서버 애플리케이션 기술을 통합하여 기존 HTML보다 역동적이고 인터렉티브한 웹페이지를 제공하는 신개념 플래시 웹페이지 제작 기술,SW 관련 신기술,Rich internet Application
시맨틱 웹,"컴퓨터가 사람을 대신하여 정보를 읽고 이해하고 가공하여 새로운 정보를 만들어 낼 수 있도록 이해하기 쉬운 의미를 가진 차세대 지능형 웹이다. 웹 자원을 서술하기 위한 자원 서술 기술, 온톨로지를 통한 지식 서술 기술, 통합적으로 에이전트 기술들을 들 수 있다.",SW 관련 신기술,semantic web
애드웨어,소프트웨어 자체에 광고를 포함하여 이를 보는 대가로 무료로 사용하는 소프트웨어,SW 관련 신기술,adware
트랙웨어,적절한 사용자의 동의 없이 사용자 정보를 수집하는 프로그램으로 스파이웨어라고도 함,SW 관련 신기술,trackware
온톨리지,"인간뿐만 아니라 컴퓨터도 정보를 이해할 수 있도록 해주는 개념화 명세로서, 단어와 관계들로 구성된 일종의 사전을 의미",SW 관련 신기술,ontology
증발품,판매 계획 또는 배포 계획은 발표되었으나 실제로 고객에게 판매되거나 배포되지 않고 있는 소프트웨어,SW 관련 신기술,Vaporware
OGSA,"애플리케이션 공유를 위한 웹 서비스를 그리드 상에서 제공하기 위해 만든 개방형 표준, 웹 서비스 표준을 적극적으로 따르고 기존 웹 개발 툴들을 그대로 사용할 수 있다는 장점 있음",SW 관련 신기술,Open Grid Service Architecture
Grid,한 번에 한 곳만 연결할 수 있던 기존의 웹과는 달리 동시에 여러 곳에 연결할 수 있는 인터넷 망 구조,SW 관련 신기술,
SOA,"기업의 소프트웨어 인프라인 정보시스템을 공유와 재사용이 가능한 서비스 단위나 컴포넌트 중심으로 구축하는 정보기술 아키텍처이다. 기업의 IT 시스템을 비즈니스에 맞춰 유연하게 사용할 수 있다는 것이 장점.  표현 계층, 업무 프로세스 계층, 서비스 중간 계층, 애플리케이션 계층, 데이터 저장 계층으로 구분함",SW 관련 신기술,Service Oriented Architecture
SaaS,"소프트웨어의 여러 기능 중에서 사용자가 필요로 하는 서비스만 이용할 수 있도록 한 소프트웨어, 공급업체가 하나의 플랫폼을 이용해 다수의 고객에게 소프트웨어 서비스를 제공하고 사용자는 이용한 만큼 돈을 지급하는 방식",SW 관련 신기술,Software as a Servicee
CEP,"실시간으로 발생하는 많은 사건들 중 의미가 있는 것만을 추출할 수 있도록 사건 발생 조건을 정의하는 데이터 처리 방법이다. 금융, 통신, 전력, 물류, 국방 등에서 대용량 데이터 스트림에 대한 요구를 실시간으로 대응하기 위하여 개발된 기술",SW 관련 신기술,Complex Event Processing
Digital Twin,"현실속의 사물을 소프트웨어로 가상화한 모델로, 실제 자신의 특성에 대한 정확한 정보를 얻을 수 있고, 최적화, 돌발사고 최소화, 생산성 증가 등 설계부터 제조, 서비스에 이르는 모든 과정의 효율성을 향상시킬 수 있다. 현실 속의 사물을 대신해 다양한 상황을 모의 실험하기 위한 용도로 사용함",SW 관련 신기술,
TensorFlow,"구글의 구글 브레인 팀이 만든, 다양한 작업에 대해 데티어 흐름 프로그래밍을 위한 오픈소스 소프트웨어 라이브러리. C++ 언어로 제작되었고, 구글 검색, 음성 인식, 번영 등의 구글 서비스 전반에서 다양하게 사용되고 있음",SW 관련 신기술,
Docker,"컨테이너 기술을 자동화하여 쉽게 사용할 수 있게 하는 오픈소스 프로젝트, 소프트웨어 컨테이너 안에 응용 프로그램을 배치시키는 일을 자동화해주는 역할 수행함",SW 관련 신기술,
Scrapy,"Python 기반의 웹 크롤링 프레임워크로, 코드 재사용을 높이는 데 도움이 되며, 대규모의 크롤링 프로젝트에 적합함",SW 관련 신기술,
Container,앱이 운영체제에 상관 없이 독립적으로 실행되기 위한 파일들을 묶어놓은 패키지,SW 관련 신기술,
Blockchain,P2P 네트워크를 이용하여 온라인 금융 거래 정보를 온라인 네트워크 참여자의 디지털 장비에 분산 저장하는 기술,보안 관련 신기술,
DLT,"중앙 관리자나 중앙 데이터 저장소가 존재하지 않고, P2P 망내의 참여자들에게 모든 거래 목록이 분산 저장되어 거래가 발생할 때마다 지속적으로 갱신되는 디지털 원장이다.",보안 관련 신기술,Distributed Ledger Technology
QKD,"양자 통신을 위해 비밀키를 분배하여 관리하는 기술, 두 시스템이 암호 알고리즘 동작을 위한 비밀키를 안전하게 공유하기 위해 양자 암호키 분배 시스템을 설치하여 운용하는 방식으로 활용함",보안 관련 신기술,Quantum key Technololgy
PET,"개인정보 위험 관리 기술로, 암호화, 익명화 등 개인정보를 보호하는 기술에서 사용자가 직접 개인정보를 통제하기 위한 기술까지 다양한 사용자 프라이버시 보호 기술을 통칭한다.",보안 관련 신기술,Privacy Enhancing Technology
CC,"ISO 15408 표준으로 채택된 정보 보호 제품의 평가 기준, 시스템의 평가 원칙과 평가 모델, 시스템 보안 기능 요구사항, 시스템 7등급 평가를 위한 보증 요구사항으로 구성되어 있다",보안 관련 신기술,Common Creitieria
PIA,"개인 정보를 활용하는 새로운 정보시스템의 도입 및 기존 정보시스템의 중요한 변경 시 시스템의 구축 운영이 기업의 고객은 물론 국민의 사생활에 미칠 영향에 대해 미리 조사,분석, 평가하는 제도",보안 관련 신기술,Privacy Impact Assessment
Software Escrow,"소프트웨어 개발자의 지식재산권을 보호하고, 사용자는 저렴한 비용으로 소프트웨어를 안정적으로 사용 및 유지보수 받을 수 있도록 소스 프로그램과 기술 정보 등을 제 3의 기관에 보관하는 것",보안 관련 신기술,
BaaS,"블록체인 앱의 개발 환경을 클라우드 기반으로 제공하는 서비스, 블록체인 네트워크에 노드의 추가 및 제거가 용이하고, 블록체인 플랫폼마다 다른 블록체인 기술을 보다 편리하게 사용할 수 있다",보안 관련 신기술,Blockchian as a Service
OWASP,"웹 정보 노출이나 악성 코드, 스크립트, 보안이 취약한 부분을 연구하는 비영리 단체, 보안에 미치는 영향이 큰 것을 기준으로 선정한 10대 웹 애플리케이션 취약점을 3~4년에 한 번씩 발표하고 있다.",보안 관련 신기술,the Open Web Application Security Project
TCP Wrapper,"외부 컴퓨터의 접속 인가 여부를 점검하여 접속을 허용 및 거부하는 보안용 도구, 네트웨크에 접속하면 로그인한 다른 컴퓨터 사용자의 ID 및 로그를 조회하여 악용 가능하나 이를 방지하기 위한 방화벽 역할을 함",보안 관련 신기술,
Honeypot,"비정상적 접근을 탐지하기 위해 설치해 둔 시스템이다, 침입자를 속여 실제 공격을 당하는 것처럼 보여줌으로써 추적 및 공격 기법에 대한 정보를 수집한다",보안 관련 신기술,
DPI,"OSI 7 layer 전 계층의 프로토콜과 패킷 내부의 콘텐츠를 파악하여 침입 시도, 해킹을 탐지하고 트래픽을 조정하기 위한 패킷 분석 기술",보안 관련 신기술,Deep Packet Inspection
소프트웨어 개발 보안,소프트웨어 개발 과정에서 발생할 수 있는 보안 취약점을 최소화하여 보안 위협으로부터 안전한 소프트웨어를 개발하기 위한 일련의 보안 활동을 의미한다,소프트웨어 개발 보안,
행정안전부,"소프트웨어 개발 보안정책을 총괄, 보안 관련 법규, 지침, 제도를 정비한다. 보안 약점을 진단하는 사람의 양성 및 관련 업무 수행하는 보안 관련 기관",소프트웨어 개발 보안,
한국인터넷진흥원,"소프트웨어 개발 보안 정책 및 가이드를 개발, 보안에 대한 기술을 지원하고 교육과정 및 자격 제도를 운영하는 보안 관련 기관",소프트웨어 개발 보안,
발주기관,"소프트웨어 개발 보안의 계획을 수립, 보안 사업자 및 감리 법인을 선정, 개발 보안 준수 여부를 점검하는 보안 관련 기관",소프트웨어 개발 보안,
사업자,"보안 관련 기술 수준 및 적용 계획을 명시, 보안 관련 인력 교육, 참조 개발, 자체 약점 진단 제거, 시정 요구사항을 이행하는 보안 관련 기관",소프트웨어 개발 보안,
감리법인,"감리 계획을 수립하고 협의, 보안 약점의 제거 여부 및 조치 결과를 확인한다",소프트웨어 개발 보안,
프로젝트 관리자,"응용 프로그램에 대한 보안 전략을 조직 구성원들에게 전달, 응용 프로그램 보안 영향을 이해시키고, 조직의 상태를 모니터링 하는 직무",소프트웨어 개발 보안,
요구사항 분석가,"아키텍트가 고려해야 할 보안 관련 비즈니스 요구사항을 설명, 팀이 고려해야 할 구조 정의 및 해당 구조에 존재하는 자원에 대한 보안 요구사항을 정의하는 직무",소프트웨어 개발 보안,
아키텍트,보안 오류가 발생하지 않도록 보안 기술 문제를 충분히 이해한다. 시스템에 사용되는 모든 리소스 정의 및 각 리소스별로 적절한 보안 요구사항을 적용한다,소프트웨어 개발 보안,
설계자,"특정 기술에 대해 보안 요구사항의 민족성 여부를 확인, 소프트웨어에서 발견된 보안 위협에 대해 적절히 대응하는 직무",소프트웨어 개발 보안,
구현 개발자,구조화된 소프트웨어 개발 환경에서 프로그램을 원할히 구현할 수 있도록 시큐어 코딩 표준 준수 개발하는 직무,소프트웨어 개발 보안,
테스트 분석가,"소프트웨어 개발 요구사항과 구현 결과를 반복적으로 확인, 보안 위험에 대한 학습이나 툴 사용법 정도는 숙지하는 직무",소프트웨어 개발 보안,
보안 감시자,"소프트웨어 개발 프로젝트의 현재 상태의 보안을 보장, 요구사항 검토 시 요구사항의 적합성과 완전성을 확인, 전체 단계에서 활동하는 직무",소프트웨어 개발 보안,
시큐어 코딩,개발하고 있는 소프트웨어의 보안상 취약점을 사전에 보완하면서 프로그래밍 하는 것을 의미,소프트웨어 개발 보안,
개인정보 보호법,개인정보의 처리 및 보호에 관한 사항을 정함으로써 개인의 자유와 권리를 보호한다,소프트웨어 개발 보안,
HACMP,"긴 시간동안 안정적인 서비스 운영을 위해 장애 발생 시 즉시 다른 시스템으로 대체 가능한 환경을 구축하는 메커니즘, 클러스터링으로 엮어 다수의 시스템을 동시에 연결할 수 있다. 2개의 서버를 연결하는 이중화를 통해 안전성 높일 수 있음",HW 관련 보안,High Availablity Clustrering Multi Processiong
3D Printing,손으로 만질 수 있는 실제 물체로 만들어내는 것을 말한다. 아주 얇은 두께로 한층한층 적층시켜 하나의 형태를 만들어내는 기술,HW 관련 보안,
4D Printing,특정 시간이나 환경 조건이 갖추어지면 스스로 형태를 변화시키거나 제조되는 자가 조립 기술이 적용된 제품을 3D Printing 하는 기술을 의미,HW 관련 보안,
RAID,"여러 개의 하드디스크로 디스크 배열을 구성하여 파일을 구성하고 있는 데이터블록들을 서로 다른 디스크에 분산 저장할 경우 여러 디스크에서 동시에 읽거나 쓸 수 있으므로, 디스크 속도가 매우 향상되는 기술, 한 디스크에만 결함이 발생해도 전체 데이터에 파일이 손상되는 문제가 발생한다. 이러한 문제를 해결하기 위해 디스크 배열에 오류 검출 및 복구를 위한 여분의 디스크들을 추가하여 원래 데이터를 복구할 수 있게함",HW 관련 보안,Redundant Array of Inexpensive Disk
N-Screen,N개의 서로 다른 단말기에서 동일한 컨텐츠를 자유롭게 이용할 수 있는 서비스,HW 관련 보안,
Companion Screen,"방송 시청 시 방송 내용을 공유하여 추가적인 기능을 수행할 수 있는 스마트폰, 태블릿 PC 등을 의미함, 세컨드 스크린이라고도 함.",HW 관련 보안,
Thin Client PC,하드디스크나 주변 장치 없이 기본적인 메모리만 갖추고 서버와 네트워크로 운용되는 개인용 컴퓨터를 의미함. ,HW 관련 보안,
Phablet,폰과 태블릿의 합성어로 대화면 스마트폰 의미,HW 관련 보안,
Universal Serial Bus Type-C,"범용 인터페이스 규격인 유에스비 표준 중 하나, 초당 10Gbps, 100W 전력 전송 가능",HW 관련 보안,
MEMS,"초정밀 반도체 제조 기술을 바탕으로 센서, 액추에이터 등 기계 구조를 다양한 기술로 미세 가공하여 전기기계적 동작을 할 수 있도록 한 초미세 장치, 일반적으로 작은 실리콘 칩 위에 마이크로 단위의 작은 부품과 이들을 입체적으로 연결하는 마이크로 회로들로 구성되며, 정보기기의 센서나 프린터 헤드, HDD 자기 헤드 등 이용됨",HW 관련 보안,Micro-Electro Mechanical Systems
TrustZone Technology,"ARM에서 개발한 기술로, 하나의 프로세서 내에서 일반 애플리케이션을 처리하는 일반 구역과 보안이 필요한 애플리케이션을 처리하는 보안 구역으로 분할하여 관리하는 하드웨어 기반의 보안 기술",HW 관련 보안,
M-DISC,"한번의 기록만으로 자료를 영구 보관할 수 있는 광 저장 장치, 디스크 표면에 무기물층에 레이저를 이용해 자료를 조각함",HW 관련 보안,
Memristor,메모리와 레지스터의 합성어로 전류의 방향과 양 등 기존의 경험을 모두 기억하는 특별한 소자. 전원 공급이 끊어졌을 때도 직전에 통과한 전류의 방향과 양을 기억하고 있기 때문에 전원이 공급되면 기존의 상태가 그대로 복원됨,HW 관련 보안,
Secure OS,"기존 운영체제에 내재된 보안 취약점을 해소하기 위해 보안 기능을 갖춘 커널을 이식하여 외부의 침입으로부터 시스템 자원을 보호하는 운영체제, TCB를 기반으로 참조 모니터의 개념을 구현하고 집행함",Secure OS,
TCB,"운영체제, 하드웨어, 소프트웨어, 펌웨어 등 컴퓨터 시스템 내의 모든 장치가 보안 정책을 따르도록 설계한 보호 매커니즘",Secure OS,Trusted Computing Base
암호적 분리,내부 정보를 암호화하는 방법,Secure OS,
논리적 분리,프로세스의 논리적 구역을 지정하여 구역을 벗어나는 행위를 제한하는 방법,Secure OS,
시간적 분리,동일 시간에 하나의 프로세스만 수행되도록하여 동시 실행으로 발생하는 보안 취약점을 제거하는 방법,Secure OS,
물리적 분리,사용자별로 특정 장비만 사용하도록 제한하는 방법,Secure OS,
참조 모니터,"보호대상의 객체에 대한 접근 통제를 수행하는 추상머신이며, 이것을 실제로 구현한 것이 보안 커널이다. 격리성, 검증가능성, 완전성 특징을 갖는다",Secure OS,
격리성,부정 조작이 불가능해야하는 참조 모니터 특성이다,Secure OS,
검증가능성,적절히 구현되었다는 것을 확인할 수 있어야하는 참조 모니터 특성이다,Secure OS,
완전성,우회가 불가능해야하는 참조 모니터 특성이다,Secure OS,
Kernel,"컴퓨터가 부팅될 때 주기억장치에 적재된 후 실행된 상태로 상주하면서 하드웨어를 보호하고, 프로그램과 하드웨어 간의 인터페이스 역할을 담당함",Secure OS,
Big Data,"기존의 관리 방법이나 분석 체계로는 처리하기 어려운 막대한 양의 정형 또는 비정형 데이터 집합으로, 효과적으로 분석함으로써 미래를 예측해 최적의 대응 방안을 찾고, 이를 수익으로 연결하여 새로운 가치를 창출하는 것",DB 관련 신기술,
Broad Data,"다양한 채널에서 소비자와 상호 작용을 통해 생성된 기업 마케팅에 있어 효율적이고 다양한 데이터이며, 이전에 사용하지 않거나 알지 못했던 새로운 데이터나, 기존 데이터에 새로운 가치가 더해진 데이터를 말한다.",DB 관련 신기술,
Meta Data,"일련의 데이터를 정의하고 설명해주는 데이터, 데이터 사전의 내용, 스키마 등을 의미한다. 방송에서는 방대한 분량의 저작물을 신속하게 검색하기 위한 촬영, 일시, 장소, 작가, 출연자 등과 음원의 검색을 위한 작곡자나 가수명 등을 메타 데이터로 처리함",DB 관련 신기술,
Digital Archiving,"디지털 정보 자원을 장기적으로 보존하기 위한 작업을 ㅁ라함. 아날로그 컨텐츠는 디지털로 변환 후 압축해서 저장하고, 디지털 콘텐츠도 체계적으로 분류하고 메타 데이터를 만들어 DB 화 하는 작업",DB 관련 신기술,
Hadoop,"오픈 소스를 기반으로 한 분산 컴퓨팅 플랫폼, 일반 PC급 컴퓨터들로 가상화된 대형 스토리지를 형성하고, 그 안에 보관된 거대한 데이터 세트를 병렬로 처리할 수 있도록 개발된 자바 소프트웨어 프레임워크로, 구글, 야후 등에 적용되고 있음. __ 과 관련된 데이터베이스 간 대용량 데이터를 전송할 때 Sqoop 이라는 도구를 사용함",DB 관련 신기술,
Sqoop,하둡과 관계형 데이터베이스 사이에서 효율적으로 데이터를 이관하고 변환해주는 명령줄 인터페이스 애플리케이션,DB 관련 신기술,
MapReduce,"대용량 데이터를 분산 처리하기 위한 목적으로 개발된 프로그래밍 모델로, 흩어져 있는 데이터를 연관성 있는 데이터 분류로 묶는 Map 작업을 수행한 후 중복 데이터를 제거하고 원하는 데이터를 추출하는 Reduce 작업을 수행함",DB 관련 신기술,
Tajo,"아파치 하둡 기반의 분산 데이터 웨어하우스 프로젝트로, 우리나라가 주도하여 개발하고 있다. SQL을 사용하여 하둡 분산 파일 시스템 파일을 바로 읽어낼 수 있다.",DB 관련 신기술,
Data Diet,"데이터를 삭제하는 것이 아니라, 압축하고 중복된 정보는 중복을 배제하고 새로운 기준에 따라 나누어 저장하는 작업이다",DB 관련 신기술,
Data Mining,데이터 웨어하우스에 저장된 데이터 집합에서 사용자의 요구에 따라 유용하고 가능성 있는 정보를 발견하기 위한 기법,DB 관련 신기술,
CLAP,다차원으로 이루어진 데이터로부터 통계적인 요약 정보를 분석하여 의사결정에 활용하는 방식을 말함,DB 관련 신기술,Online Analytical Processing
회복,트랜잭션들을 수행하는 도중 장애가 발생하여 데이터베이스가 손상되었을 때 손상되기 이전의 정상 상태로 복구하는 작업,회복,
트랜잭션 장애,"입력 데이터 오류, 불명확한 데이터, 시스템 자원 요구의 과다 등 ___ 내부의 비정상적인 상황으로 프로그램 실행이 중지되는 장애 유형",회복,
시스템 장애,"데이터베이스에 손상을 입히지는 않으나 하드웨어 오동작, 소프트웨어의 손상, 교착 상태 등에 의해 모든 트랜잭션의 연속적인 수행에 장애를 주는 장애 유형",회복,
미디어 장애,저장장치인 디스크 블록의 손상이나 디스크 헤드의 충돌 등으로 인해 데이터베이스 일부 또는 전부가 물리적 손상된 상태의 장애 유형,회복,
회복 관리기,"DBMS의 구성요소로, 트랜잭션 실행이 성공적으로 완료되지 못하면 트랜잭션이 데이터베이스에 생성했던 모든 변화를 취소하고, 원래 상태로 복구하는 역할을 담당한다. 메모리 덤프, 로그를 이용하여 __을 수행함",회복,Recovery Managment
Dump,주기적으로 데이터베이스 전체를 복사해 두는 것,회복,
연기 갱신 기법,"트랜잭션이 성공적으로 완료될 때까지 데이터베이스에 대한 실질적인 갱신을 연기하는 방법, 트랜잭션 동안 수정된 내용은 일단 Log 에 보관하고 부분완료 시점에 Log에 보관하고 있던 내용을 데이터베이스에 기록한다. 만약 부분 완료 전에 장애가 발생할 경우 Undo 시킬 필요 없이 무시하면 된다.",회복,Deferred Update
즉각 갱신 기법,"트랜잭션이 부분완료 되기 전이라도 즉시 실제 데이터베이스에 반영하는 방법으로, 트랜잭션이 실패할 경우 Log내용을 기반으로 Undo 시행한다.",회복,Immediate Update
그림자 페이지 기법,"갱신 이전의 데이터베이스를 일정 크기의 페이지 단위로 구성하여 각 페이지마다 복사본인 그림자 페이지를 별도 보관해놓고, 장애가 발생하여 RollBack 할 경우 실제 페이지 부분에 그림자 페이지를 대체하여 회복시키는 기법. Log, Undo, Redo 알고리즘이 필요 없다",회복,
검사점 기법,트랜젹션 실행 중 특정 단계에서 재실행할 수 있도록 갱신 내용이나 시스템에 대한 상황 등에 관한 정보와 함께 검사점을 로그에 보관해두고 장애 발생 시 트랜잭션 전체를 철회하지 않고 검사점부터 회복 작업을 하여 회복시간을 절약하는 기법,회복,
병행제어,"다중 프로그램의 이점을 활용하여 동시에 여러 개의 트랜잭션을 병행수행할 때, 동시에 실행되는 트랜잭션들이 데이터베이스의 일관성을 파괴하지 않도록 트랜잭션 간의 상호 작용을 제어하는 것",병행 제어,Concurrency Control
Locking,"주요 데이터의 액세스를 상호 배타적으로 함, 트랜잭션이 어떤 __ 단위를 액세스하기 전에 잠금을 요청해서 잠금이 허락되어야만 해당 단위를 액세스 할 수 잇도록 하는 기법임",병행 제어,
Time Stamp Ordering,직렬성 순서를 결정하기 위해 트랜잭션 간의 처리 순서를 미리 선택하는 기법들 중 가장 보편적인 방법임. 트랜잭션과 트랜잭션이 읽거나 갱신한 데이터에 대해 트랜잭션 실행 전에 타임스탬프를 부여하여 부여된 시간에 따라 트랜잭션 작업을 수행하는 기법이다. 데드락이 발생하지 않음,병행 제어,
최적 병행수행,대부분의 트랜잭션이 판독 전용 트랜잭션(Read Only)일 경우 트랜잭션 간의 충돌률이 매우 낮아서 병행 제어 기법을 사용하지 않고 실행되어도 이 중 많은 트랜잭션은 시스템의 상태를 일관성 있게 유지한다는 점을 이용한 기법임,병행 제어,
다중 버전 기법,"타임스탬프의 개념을 이용한 기법으로 다중 버전 타임 스탬프 기법이라고도함. 기존 타임스탬프 기법은 트랜잭션 및 데이터들이 이용될 때의 시간을 시간표로 관리하지만, 해당 기법은 갱신될 때마다의 버전을 부여하여 관리한다.",병행 제어,
Locking Granularity,"병행 제어에서 한꺼번에 로킹할 수 있는 객체의 크기를 의미한다. 데이터베이스, 파일, 레코드 수, 필드 등이 로킹 단위가 될 수 있음. 단위에 따라 오버헤드 증감, 병행성 수준의 저하가 발생할 수 있음",병행 제어,
병행성 수준,"__ 수준이 낮을 경우 데이터베이스 공유도가 감소한다는 의미로, 시스템 활용도를 감소시고 사용자 응답 시간을 늘린다.",병행 제어,
Lost Update,두 개 이상의 트랜잭션이 같은 자료를 공유하여 갱신할 때 갱신 결과의 일부가 없어지는 현상,병행 제어,
Uncommited Dependency,"하나의 트랜잭션이 수행이 실패한 후 회복되기 전에 다른 트랜잭션이 실패한 갱신 결과를 참조하는 현상, 임시 갱신이라고도 함",병행 제어,
Inconsistency,"두 개의 트랜잭션이 병행수행될 때, 원치 않는 자료를 이용함으로써 발생하는 문제",병행 제어,
Cascading Rollback,병행수행 되던 트랜잭션들 중 어느 하나에 문제가 생겨 Rollback 하는 경우 다른 트랜잭션도  Rollback 되는 현상,병행 제어,
Dead Lock,"상호 배제에 의해 나타나는 문제점으로, 네 가지 조건이 충족되어야 발생 가능하다. 상호 배제, 점유와 대기, 비선점, 환형 대기",교착 상태,
Mutual Exclusion,한 번에 한 개의 프로세스만이 공유 자원을 사용할 수 있어야한다는 교착 상태의 필요 충분 조건,교착 상태,
Hold and Wait,최소한 하나의 자원을 점유하고 있으면서 다른 프로세스에 할당되어 사용되고 있는 자원을 추가로 점유하기 위해 대기하는 프로세스가 있어야하는 교착 상태의 필요 충분 조건,교착 상태,
Non-preemption,다른 프로세스에 할당된 자원은 사용이 끝날 때까지 강제로 빼앗을 수 없어야한다.,교착 상태,
Circular Wait,공유 자원과 공유 자원을 사용하기 위해 대기하는 프로세스들이 원형으로 구성되어 있어 자신에게 할당된 자원을 점유하면서 앞이나 뒤에 있는 프로세스의 자원을 요구하는 교착 상태의 필요 충분 조건,교착 상태,
Prevention,"Deadlock에 빠지기 전에 시스템을 제어하는 방법으로, 4가지 발생 조건 중에 어느 하나를 제거하는 방법, 자원 낭비가 가장 심함",교착 상태,
Avoidance,Deadlock 발생 가능성을 배제하지 않고 발생하면 Banker's Algorithm 을 사용하여 모든 고객의 요구가 충족되도록 현금을 할당하는 기법 적용함,교착 상태,
Detection,"시스템에 교착 상태가 발생했는지 점검하여 교착상태에 있는 프로세스의 자원을 발견하는 것을 의미함, 교착상태 발견 알고리즘과 자원 할당 그래프를 사용할 수 있다",교착 상태,
Recovery,교착 상태를 일으킨 프로세스를 종료하거나 교착상태의 프로세스에 할당된 자원을 선점하여 프로세스나 자원을 회복하는 것을 의미,교착 상태,
데이터 표준화,"시스템을 구성하는 데이터 요소의 명칭, 정의, 형식, 규칙에 대한 원칙을 수립하고 적용하는 것을 의미, 사용자가 데이터를 정확히 이해하고 활용할 수 있도록 용어, 항목 이름이 중복되지 않고 직관적이며 공통된 의미로 전달되도록 표준 항목명을 부여함, 데이터 표준, 관리조직, 절차를 구성요소로 갖는다",데이터 표준화,
데이터 표준,데이터 모델이나 DB에서 정의할 수 있는 모든 오브젝트를 대상으로 데이터 표준화를 수행해야함,데이터 표준화,
표준 단어,업무에서 사용하고 일정한 의미를 갖고 있는 최소 단위의 단어를 의미한다,데이터 표준화,
표준 도메인,"문자형, 숫자형, 날짜형, 시간형과 같이 컬럼의 성질에 따라 그룹핑한 개념",데이터 표준화,
표준 코드,선택할 수 있는 값을 정형화하기 위해 기준에 맞게 이미 정의된 코드 값으로 도메인의 한 유형,데이터 표준화,
표준 용어,"단어, 도메인, 코드 표준이 정의되면 이를 바탕으로 표준 용어를 구성한다.",데이터 표준화,
데이터 관리 조직,"데이터 표준 원칙이나 데이터 표준의 준수 여부 등을 관리하는 사람들로, 대표적으로 데이터 관리자가 있다.",데이터 표준화,
DA,"조직 내의 데이터에 대한 정의, 체계화, 감독 등의 업무를 담당함, 데이터 표준 관리 및 적용",데이터 표준화,Data Architecture
DBA,"데이터베이스를 관리하는 사람으로써, 데이터의 정합성 관리를 함",데이터 표준화,Database Administrator
데이터 표준화 절차,"표준화 요구사항 수집, 데이터 표준 정의, 데이터 표준 확정, 데이터 표준 관리 순으로 진행",데이터 표준화,
데이터 표준화 대상,"데이터 명칭, 데이터 정의, 데이터 형식, 데이터 규칙이 있다",데이터 표준화,
데이터 명칭,"데이터를 유일하게 구별할 수 있는 유일성, 의미 전달의 충분성, 그리고 업무적 보편성을 갖는 이름으로 정의해야한다",데이터 표준화,
데이터 정의,데이터를 제 3자 입장에서도 쉽게 이해할 수 있도록 해당 데이터가 의미하는 범위 및 자격 요건 등을 규정한다,데이터 표준화,
데이터 형식,"업무 규칙 및 사용 목적과 유사한 데이터에 대해 일관되게 데이터 형식을 정의함으로써 데이터 입력 오류, 통제 위험 등을 최소화한다",데이터 표준화,
데이터 규칙,"기본 값, 허용 값, 허용 범위 등과 같이 발생할 수 있는 데이터 값을 사전에 지정함으로써 데이터의 정합성 및 안전성을 향상시킨다",데이터 표준화,
Secure SDLC,"보안상 안전한 소프트웨어를 개발하기 위해 기존 SDLC에 보안 강화를 위한 프로세스를 포함한 것을 의미한다, SDLC 전체 단계에 걸쳐 수행되어야할 보안 활동을 제시한다",Secure SDLC,
SDLC,"소프트웨어 개발 생명주기를 의미하며, 소프트웨어 개발 방법론의 바탕이 되는 것으로, 전 과정을 각 단계별로 나눈 것",Secure SDLC,Software Development Life Cycle
CLAPS,"Secure Software 사에서 개발한 소프트웨어, SDLC 초기 단계에서 보안을 강화하기 위해 개발된 방법론, 활동 중심, 역할 기반의 프로세스로 구성되어 현재 운용중인 시스템에 적용하기 적합하다",Secure SDLC,
SDL,"마이크로소프트 사에서 안전한 소프트웨어 개발을 위해 기존의 SDLC를 개선한 방법론, 전통적인 나선형 모델을 기반으로함",Secure SDLC,
Seven Touchpoints,"소프트웨어 보안의 모범사례를 SDLC 에 통합한 방법론, 설계 및 개발 과정의 모든 산출물에 대해 위험 분석 및 테스트를 수행한다. SDLC 각 단계에 관련된 7개의 보안 강화 활동을 수행함",Secure SDLC,
기밀성,시스템 내의 정보와 자원은 인가된 사용자에게만 접근이 허용된다. 정보가 전송 중에 노출되더라도 데이터를 읽을 수 없는 보안 요소,Secure SDLC,Confidentiality
무결성,시스템 내의 정보는 오직 인가된 사용자만 수정할 수 있는 보안 요소,Secure SDLC,Integrity
가용성,인가받은 사용자는 언제라도 사용할 수 있는 보안 요소,Secure SDLC,Availability
인증,"시스템 내의 정보와 자원을 사용하려는 사용자가 합법적인 사용자인지 확인하는 모든 행위를 말하며, 대표적으로 패스워드, 인증용 카드 등이 있는 보안 요소",Secure SDLC,Authentication
부인 방지,데이터를 송∙수신한 자가 송∙수신 사실을 부인할 수 없도록 송∙수신 증거를 제공하는 보안 요소,Secure SDLC,NonRepudiation
네트워크,설계 단계에서의 보안 활동으로 외부의 사이버 공격으로부터 개발 환경을 보호하기 위해 ____를 분리하거나 방화벽을 설치한다.,Secure SDLC,
서버,"설계 단계에서의 보안 활동으로 보안이 뛰어난 운영체제를 사용하고, 보안 업데이트, 외부접속에 대한 접근 통제를 실시한다",Secure SDLC,
물리적 보안,"출입통제, 개발 공간 제한, 폐쇄회로 등의 감시 설비를 설치하는 설계 단계에서의 보안 활동",Secure SDLC,
개발 프로그램,허가되지 않은 프로그램을 통제하고 지속적인 데이터 무결성 검사를 실시한다,Secure SDLC,
표준 코딩 정의서,"코딩 시 다른 개발자나 운영자가 쉽게 접근할 수 있도록 클래스, 메소드 등의 네이밍 규칙, 주석 첨부 방식 등을 정의해 둔 문서",Secure SDLC,
소프트웨어 개발 보안 가이드,안전한 소프트웨어 개발을 위해 정부에서 제작하여 배포하고 있는 지침,Secure SDLC,
단위 테스트,프로그램의 단위 기능을 구현하는 모듈이 정해진 기능을 정확히 수행하는지 검증하는 것,Secure SDLC,
시큐어 코딩,소프트웨어 구현 단계에서 발생할 수 있는 보안 취약점들을 최소화하기 위해 보안 요소들을 고려하며 코딩하는 것을 의미함. 개발 참여자에게는 ___를 교육을 실시해야함,Secure SDLC,Secure Coding
동적 분석 도구,"프로그램을 실제 또는 가상으로 실행시킨 상황에서 메모리 분석, 보안 취약점 검색, 오류 탐지 등의 다양한 기능을 수행하는 소프트웨어",Secure SDLC,
보안 점검 내용,"소프트웨어 개발 구현 단계에서 검증해야하는 7가지, 입력 데이터 검증 및 표현, 보안 기능, 시간 및 상태, 에러처리, 코드 오류, 캡슐화, API 오용",세션 통제,
세션 통제,"서버와 클라이언트의 연결을 세션이라 함, ___ 는 세션의 연결과 연결로 인해 발생하는 정보를 관리함을 의미함, 소프트웨어 개발 과정 중 요구사항 분석 및 설계 단계에서 진단해야하는 보안 점검 내용, 불충분한 세션 관리, 잘못된 세션에 의한 정보 노출 등의 문제가 발생할 수 있음",세션 통제,Session Control
세션 ID,"서버가 클라이언트들을 구분하기 위해 부여하는 키로, 클라이언트가 서버에 요청을 보낼 때마다 세션 ID를 통해 인증이 수행된다.",세션 통제,Session Id
불충분한 세션 관리,"일정한 규칙이 존재하는 세션ID가 발급되거나 타임아웃이 너무 길게 설정되어 있어 발생할 수 있는 보안 약점, 세션 하이잭킹 같은 공격에 취약점이 발생한다",세션 통제,
세션 하이재킹,"서버에 접속하고 있는 클라이언트들의 세션 정보를 가로채는 공격 기법. 정상적인 연결 RST 패킷을 통해 종료시킨 후 재연결 시 공격자가 연결하는 방식, 공격자는 서버와 상호 간의 동기화된 시퀀스 번호를 이용하여 인가되지 않은 시스템의 기능을 이용하거나 중요한 정보에 접근할 수 있게 됨. 탐지 방법은 비동기화 상태 탐지, ACK storm 탐지, 패킷의 유실 탐지, 예상치 못한 접속의 리셋 탐지",세션 통제,Session Hijacking
ACK Storm,세션 하이재킹 과정 중에 패킷량이 비정상적으로 늘어나는 현상,세션 통제,
잘못된 세션에 의한 노출,"다중 스레드 환경에서 멤버 변수에 정보를 저장할 때 발생하는 보안 약점으로, 싱글통 패턴에서 발생하는 레이스컨디션으로 인해 동기화 오류가 발생하거나, 멤버 변수의 정보가 노출될 수 있음. 멤버 변수보단 지역 변수를 활용하여 변수의 범위를 제한함으로써 방지 가능하다",세션 통제,
다중 스레드,"프로세스 내의 작업 단위로, 시스템의 자원을 할당받아 실행하는 프로그램 단위를 스레드라고 하는데, 두 개 이상의 스레드가 생성되어 동시 처리되는 다중 작업을 지칭함.",세션 통제,Multi-Thread
멤버 변수,"객체와 연결된 변수로, 클래스 내에 선언되어 클래스의 모든 메소드들이 접근 가능한 변수, __ 필드라고도 부르며, 종류에는 클래스 변수, 인스턴스 변수가 있다.",세션 통제,Member Variable
Singlton,"하나의 객체를 생성하면 생성된 객체를 어디서든 참조할 수 있지만, 여러 프로세스가 동시에 참조할 수 없는 디자인 패턴",세션 통제,
Race Condition,두 개 이상의 프로세스가 공용 자원을 획득하기 위해 경쟁하고 있는 상태를 의미함,세션 통제,
URL Rewite,쿠키를 사용할 수 없는 환경에서 SessionID 를 전달을 위해 URL에 SessionID를 포함시키는 것,세션 통제,
입력 데이터 검증 및 표현,"입력 데이터로 인해 발생하는 문제들을 예방하기 위해 구현 단계에서 검증해야 하는 보안 점검 항목, 이를 예방하기 위해서는 소프트웨어 개발의 구현 단계에서 유효성 검증 체계를 갖추고, 검증되지 않은 데이터가 입력되는 경우 이를 처리할 수 있도록 구현해야함",입력 데이터 검증 및 표현,
언어셋,"문자를 컴퓨터에서 처리하기 위해 사용하는 코드표를 의미하며, 종류에는 ANCI, UNICODE, UTF-8 등이 있음",입력 데이터 검증 및 표현,Character Set
SQL Injection,"웹 응용 프로그램에 SQL을 삽입하여 내부 DB 서버의 데이터를 유출 및 변조하고, 관리자 인증을 우회하는 보안 약점으로, 동적 쿼리에 사용되는 입력데이터에 예약어 및 특수문자가 입력되지 않게 필터링 되도록 설정하여 방지 가능함",입력 데이터 검증 및 표현,
경로 조작 및 자원 삽입,"데이터 입출력 경로를 조작하여 서버 자원을 수정, 삭제할 수 있는 보안 약점으로, 사용자 입력값을 식별자로 사용하는 경우 경로 순회 공격을 막는 필터를 사용하여 방지 가능함",입력 데이터 검증 및 표현,
XSS,"웹페이지에 악의적인 스크립트를 삽입하여 방문자들의 정보를 탈취하거나 비정상적인 기능 수행을 유발하는 보안 약점, HTML 태그의 사용을 제한하거나 스크립트에 삽입되지 않도록 '<', '>', '&' 등의 문자를 다른 문자로 치환함으로써 방지 가능하다",입력 데이터 검증 및 표현,
운영체제 명령어 삽입,"외부 입력값을 통해 시스템 명령어의 실행을 유도함으로써 권한을 탈취하거나 시스템 장애를 유발하는 보안 약점. 웹 인터페이스를 통해 시스템 명령어가 전달되지 않도록 하고, 외부 인력값을 검증 없이 내부 명령어로 사용하지 않음으로 방지 가능하다",입력 데이터 검증 및 표현,
위험한 형식 파일 업로드,"악의적인 명령어가 포함된 스크립트 파일을 업로드함으로써 시스템에 손상을 주거나 시스템을 제어할 수 있는 보안 약점, 업로드 되는 파일의 확장자 제한, 파일명의 암호화, 웹사이트와 파일 서버의 경로를 분리, 실행 속성을 제거하는 등의 방법으로 방지 가능함",입력 데이터 검증 및 표현,
신뢰되지 않는 URL 주소로 자동 접속 연결,"입력 값으로 사이트 주소를 받는 경우 이를 조작하여 방문자를 피싱 사이트로 유도하는 보안 약점, 화이트 리스트로 외부 사이트를 관리함으로써 방지한다.",입력 데이터 검증 및 표현,
메모리 버퍼 오버플로,"연속된 메모리 공간을 사용하는 프로그램에서 할당된 메모리의 범위를 넘어선 위치에서 자료를 읽거나 쓰려고 할 때 발생하는 보안 약점, 프로그램의 오동작을 유발시키거나, 악의적인 코드를 실행시켜 공격자가 프로그램을 통제할 수 있는 권한을 획득하게 됨, 메모리 버퍼를 사용할 경우 버퍼 사이즈를 적절하게 설정하고, 설정된 범위의 메모리 내에서 읽고 쓰게 함으로 방지 가능하다",입력 데이터 검증 및 표현,
XQuery injection,"XML 문서의 검색과 생성을 위한 서버 사이드 솔루션, XML 문서를 생성할 수 있는 XML기술로, ___ injection을 통해 서버 내 정보를 허가를 우회하여 데이터를 조회하거나 인증 절차를 무시할 수 있게됨",입력 데이터 검증 및 표현,
XPath injection,XML 구조에 악의적인 쿼리를 삽입하여 정보를 탈취하는 공격,입력 데이터 검증 및 표현,
LDAP/포맷 스트링 삽입,"SQL injection 과 비슷한 개념으로, TCP/IP 위에서 Directory Service를 조회하고 수정하는 Application Protocol에서 Command Line 처럼 위장하여 인가를 얻어내는 공격으로 Escape 문자를 사용하여 방지 가능하다",입력 데이터 검증 및 표현,
크로스사이트 요청 위조,"인증된 사용자가 웹 애플리케이션에 특정 요청을 보내도록 유도하는 공격 행위로 악의적인 스크립트를 인증된 사용자가 실행하도록 유도하는 방식, CSRF 토큰을 보내어 요청이 사용자가 전송한 것이 맞는지 확인하거나 재인증을 요구하는 등의 조치를 취함",입력 데이터 검증 및 표현,
HTTP 응답 분할,"Response parameter 로 전달되는 내용 중에, 개행문자가 포함되어 있을 경우, 공격자가 악의적으로 삽입한 응답이 실행되도록 유도하는 방식, 개행문자에 대해 제거 또는 치환을 통해 방어 가능하다",입력 데이터 검증 및 표현,
정수형/메모리 버퍼 오버플로우,"버퍼 오버플로우 공격이라고도 함, 프로그램이 함수를 호출 할 때, 지역 변수와 복귀주소를 스택구조로 메모리에 저장하는데, 지역변수 데이터의 사이즈를 크게 늘려서, 복귀 주소 영역을 침범하게됨. 이에 따라 함수는 복귀하지 못하고 다른 메모리 영역을 참조하려고 하면서, OS에 의해 비정상적인 종료를 당하는 공격 기법",입력 데이터 검증 및 표현,
보안기능 결정,"응용프로그램의 외부입력 값에 대해 신뢰를 바탕으로 한 보호메커니즘을 가질 경우, 공격자는 입력 값을 임의로 조작하여 쿠키, 환경 변수, 히든 필드 등의 입력 값을 이용해 인증을 우회하거나 데이터를 탈취하는 방식으로, 서버에 저장된 신뢰된 값을 조회하여 사용하는 것으로 방어할 수 있다.",입력 데이터 검증 및 표현,
보안 기능,"소프트웨어 개발의 구현단계에서 코딩하는 기능인 인증, 접근 제어, 기밀성, 암호화를 올바르게 구현하기 위한 점검 항목들로, 사용자의 인증에 관한 기능, 개인정보 암호화 기술 등의 내용이다",보안 기능,
적절한 인증 없이 중요기능 허용,"보안검사를 우회하여 인증과정 없이 중요한 정보 또는 기능에 접근 및 변경이 가능한 보안 약점, 중요 정보 기능을 수행하는 페이지에서는 재인증 기능을 수행하도록 하여 방지한다",보안 기능,
부적절한 인가,"접근제어 기능이 없는 실행 경로를 통해 정보 또는 권한을 탈취할 수 있는 보안 약점, 모든 실행 경로에 접근 제어 검사를 수행하고, 사용자에게는 반드시 필요한 접근 권한만을 부여한다",보안 기능,
중요한 자원에 대한 잘못된 권한 부여,"권한 설정이 잘못된 자원에 접근하여 해당 자원을 임의로 사용할 수 있게한 보안 약점, 소프트웨어 관리자만 자원들을 읽고 쓸수 있도록 설정하고, 인가되지 않은 사용자들의 중요 자원에 대한 접근 여부를 검사함으로써 방지할 수 있음",보안 기능,
취약한 암호화 알고리즘 사용,"암호화된 환경설정 파일을 해독하여 비밀번호 등의 중요 정보를 탈취하는 보안 약점, 보안인증사무국이 인정성을 확인한 암호 모듈을 사용하여 방지 가능하다",보안 기능,
중요 정보 평문 저장 및 전송,"암호화되지 않은 평문 데이터를 탈취하여 중요 정보를 획득하게 되는 보안 약점, 중요 정보에 대해서는 반드시 암호화 과정을 거치고 통신할 경우 HTTPS, SSH 같은 보안 채널을 이용함으로써 방지할 수 있다.",보안 기능,
하드코드된 비밀번호,"소스 코드 유출 시 내부에 하드코드된 패스워드를 이용하여 권리자 권한을 탈취하는 보안 약점, 패스워드 암호에 대해선 별도의 파일에 저장하고, 디폴트 패스워드나 디폴트 키의 사용을 피함으로써 방지 가능함",보안 기능,
IT 보안인증사무국,정보보호제품의 평가 인증을 수행하고 인증제품 목록을 공개 및 관리하는 국가보안기술 연구소 산하의 인증기관,보안 기능,
시간 및 상태,"동시 수행을 지원하는 병렬 처리 시스템이나 다수의 프로세스가 동작하는 환경에서 ___ 상태를 관리하여 시스템이 원활하게 동작되도록 하기 위한 보안 검증 항목, TOCTOU 경쟁 조건, 종료되지 않는 반복문, 재귀함수 등이 있다.",시간 및 상태,
TOCTOU,"검사시점과 사용시점을 고려하지 않고 코딩하는 경우 발생하는 보안 약점으로, 검사 시점에는 사용 가능했던 자원이 사용 시점에는 사용할 수 없게 된 경우에 발생함. 동기화 오류나 교착 상태 등이 발생 가능하다. 코드 내 동기화 구문을 사용하여 해당 자원에는 한 번에 하나의 프로세스만 접근하도록 구성함으로써 방지할 수 있음",시간 및 상태,Time Of Check Time Of User
종료되지 않는 반복문 또는 재귀함수,"종료 조건을 정의하지 않았거나, 논리 구조상 종료될 수 없는 경우 발생하는 보안 약점이다. 시스템 자원을 끊임없이 사용하여 고갈로 인한 서비스 장애 또는 시스템 장애가 발생하므로, 모든 반복 또는 재귀 함수에 대해 수행 횟수를 제한하거나, 종료 조건을 점검하여 방지 가능함",시간 및 상태,
에러처리,"소프트웨어 실행 중 발생할 수 있는 ___ 들을 사전에 정의하여 오류로 인해 발생할 수 있는 문제들을 예방하기 위한 보안 점검 항목, 중요 정보를 노출시키거나, 소프트웨어 실행이 중단되는 등의 예기치 못한 문제를 발생가능하다.",에러처리,
오류 메시지를 통한 정보 노출,"오류 발생으로 실행 환경, 사용자 정보, 디버깅 정보 등의 중요 정보를 소프트웨어가 메시지로 외부에 노출하는 보안 약점이다. 오류 메시지를 통해 노출되는 경로 및 디버깅 정보는 공격자에게 취약점을 제공할 수 있어 스택 트레이스가 노출되지 않게 하고, 사전에 준비된 메시지로 출력되도록 한다.",에러처리,
오류 상황 대응 부재,"예외 처리를 하지 않았거나 미비로 인해 발생하는 보안 약점으로, 소프트웨어 실행이 중단되거나 의도를 벗어난 동작으로 유도할 수 있다. 오류가 발생할 수 있는 부분에 대해 예외처리 구문을 작성하고, 제어문을 활용해 오류가 악용되지 않도록 코딩함으로써 방지 가능함",에러처리,
부적절한 예외처리,"함수의 변환값 또는 오류들을 세분화하여 처리하지 않고 광범위하게 묶어 한 번에 처리하거나 누락된 예외가 존재할 때 발생하는 보안 약점이다. 모든 오류들을 세세하게 정의하여 처리할 필욘 없으나, 광범위하게 오류 처리를 할 경우 예기치 않은 문제가 발생할 수 있다. 모든 함수의 반환 값이 의도대로 출력되는지 확인하고, 세분화된 예외처리를 수행함으로써 방지할 수 있다.",에러처리,
코드 오류,"소프트웨어 구현 단계에서 개발자들이 코딩 중 실수하기 쉬운 Type 변환, 자원 반환 등의 오류를 예방하기 위한 보안 점검 항목, Null pointer back-reference, 부적절한 자원 해제, 해제된 자원 사용, 초기화되지 않은 변수들의 사용 등이 있다.",코드 오류,
Null Pointer back-reference,"널 포인터가 가리키는 메모리에 어떠한 값을 저장할 때 발생하는 보안 약점으로, 대부분의 운영체제는 널 포인터를 메모리의 첫 주소를 가리키고 있으나, 해당 주소를 참조할 경우 소프트웨어가 비정상적으로 종료될 수 있다. 이에 따라 공격자가 예외 상황을 유발시킬 수 있어 Null check를 통해 방지할 수 있다. (예, 0x00000000을 참조)",코드 오류,
스택 가드,"널 포인터 역참조와 같이 주소가 저장되는 스택에서 발생하는 보안 약점을 막는 기술 중 하나로, 복귀 주소와 변수 사이에 특정 값을 저장한 후 그 값이 변경되었을 경우, 오버플로우 상태로 판단하여 프로그램을 중단함으로써 잘못된 복귀 주소의 호출을 막는 기술",코드 오류,Stack guard
부적절한 자원 해제,"자원을 반환하는 코드를 누락하거나 프로그램 오류로 할당된 자원을 반환받지 못했을 때 발생하는 보안 약점, 자원 반환 코드가 누락되었는지 확인하고, 오류로 인해 함수가 중간에 종료되었을 때, 예외처리와 관계없이 자원이 반환되도록 코딩함으로써 방지 가능함",코드 오류,
해제된 자원 사용,"이미 사용이 종료되어 반환된 메모리를 참조하는 경우 발생하는 보안 약점으로, 예상하지 못한 값 또는 코드를 수행하게 되어 의도치 않은 결과가 발생할 수 있음",코드 오류,
초기화되지 않은 변수 사용,"값이 부여되지 않은 변수를 사용할 때 발생하는 보안 약점으로, 변수가 외부에 노출되어있는 경우 중요 정보가 악용될 수 있다. 이에 따라 변수 선언 시 할당된 메모리를 초기화함으로써 방지 가능하다",코드 오류,
힙 메모리,소프트웨어가 자유롭게 사용할 수 있는 메모리 공간,코드 오류,
캡슐화,"정보 은닉이 필요한 중요한 데이터와 기능을 불충분하게 캡슐화하거나 잘못 사용함으로써 발생할 수 있는 문제를 예방하기 위한 보안 점검 항목, 잘못된 세션에 의한 정보 노출, 제거되지 않고 남은 디버그 코드, 시스템 데이터 정보 노출 등이 있다.",캡슐화,
잘못된 세션에 의한 정보 노출,"다중 스레드 환경에서 멤버 변수에 정보를 저장할 때 발생하는 보안 약점으로, 싱글통 패턴에서 발생하는 레이스 컨디션으로 인해 동기화 오류가 발생하거나, 멤버 변수의 정보가 노출될 수 있다. 멤버 변수를 사용하기 보단, 지역 변수를 활용하여 변수의 범위를 제한할 수 있다.",캡슐화,
제거되지 않고 남은 디버그 모드,"개발 중에 버그 수정이나 결과값 확인을 위해 남겨둔 코드들로 인해 발생하는 보안 약점으로, 소프트웨어 제어에 사용되는 중요한 정보나 구조가 노출될 수 있다. 배포 전 코드 검사를 통해 남아있는 디버그 코드들을 삭제함으로써 방지가능함",캡슐화,
시스템 데이터 정보 노출,"시스템의 내부 정보를 시스템 메시지 등을 통해 외부로 출력하도록 코딩했을 때 발생하는 보안 약점, 시스템 메시지를 통해 노출되는 메시지는 최소한의 정보만을 제공함으로써 방지한다.",캡슐화,
Public 메소드로부터 반환된 Private 배열,선언된 클래스 내에서만 접근이 가능한 Private 배열을 모든 클래스에서 접근이 가능한 Public method 에서 반환할 때 발생하는 보안 약점이다. 동일한 형태의 복제본으로 반환 받은 후 값을 전달하거나 별도의 메소드를 통해 조작한다,캡슐화,
Private 배열에 Public 데이터 할당,"Private 배열에 Public 으로 선언된 데이터 또는 메소드 파라미터를 저장할 때 발생하느 보안 약점으로, 레퍼런스가 아닌 값을 직접 저장함으로써 방지할 수 있다.",캡슐화,
API 오용,소프트웨어 구현 단계에서 API를 잘못 사용하거나 보안에 취약한 API를 사용하지 않도록 하기 위한 보안 검증 항목이다.,API 오용,
DNS Lookup에 의존한 보안 결정,"도메인명에 의존하여 인증이나 접근 통제 등의 보안 결정을 내리는 경우 발생하는 보안 약점이다. DNS 엔트리를 속여 동일한 도메인에 속한 서버인 것처럼 위장하거나, 사용자와 서버 간의 네트워크 트래픽을 유도하여 악성 사이트를 경유하도록 조작할 수 있음, DNS  검색을 통해 도메인 이름을 비교하지 않고 IP 주소를 직접 입력하여 접근함으로써 방지할 수 있다.",API 오용,
취약한 API 사용,"보안 문제로 사용이 금지된 API를 사용하거나 잘못된 방식으로 API를 사용했을 때 발생하는 API 보안 약점이다. 대표적으로 strcat(), strcpy(), strintf() 가 있다. 보안 상 안전한 API라도, 자원에 대한 직접 연결이나, 네트워크 소켓을 통한 직접 호출과 같이 보안에 위협을 줄 수 있는 인터페이스를 사용하는 경우 보안 약점에 노출된다.",API 오용,
암호 알고리즘,"패스워드, 주민번호, 은행계좌와 같은 중요정보를 보호하기 위해 평문을 암호화된 문장으로 만드는 절차 또는 방법을 의미함",암호 알고리즘,
개인키 암호화 기법,"동일한 키로 데이터를 암호화하고 복호화한다. 암호화 대상이 n 개일 때 사용되는 키의 개수는 n(n-1)/2이다. 대칭 암호 기법 또는 비밀키 암호화 기법이라고도 함. block type :DES, SEED, AES, ARIA, IDEA 가 있음, stream type : LFSR, RC4 가 있음, 사용자가 증가할수록 관리해야할 키의 수가 상대적으로 많아지는 단점 있다.",암호 알고리즘,
공개키 암호화 기법,"데이터를 암호화할 때 사용하는 공개키는 데이터베이스 사용자에게 공개하고, 복호화할 때의 비밀키는 관리자가 비밀리에 관리한다.  비대칭 암호기법이라고도 하며, RSA기법이 대표적이다. 속도가 느리고, 알고리즘이 복잡하고 용량이 크지만, 키 분배와 개수 관리가 용이하다",암호 알고리즘,
X 509 방식,인증기관에서 발생하는 인증서를 기반으로 상호 인증을 제공하는 공개키 기반 구조,암호 알고리즘,
non X 509 방식,"국가별, 지역별로 맞게 보완 개발한 공개키 기반 구조",암호 알고리즘,
NBS,미국 표준 기술 연구소의 과거 이름,암호 알고리즘,National Bureau of Standards
SEED,"1999년 한국인터넷진흥원에서 개발한 블록 암호화 알고리즘, 블록 크기는 128비트이며, 키 길이에 따라 128, 256으로 분류함",암호 알고리즘,
ARIA,"2004년 국가정보원과 산학연협회가 개발한 블록 암호화 알고리즘, 학계, 연구기관, 정부의 앞글자를 따 구성한 것, 블록은 128bit, 키 길이에 따라 128, 192, 256으로 분류한다",암호 알고리즘,Academy Research Institute Agency
DES,"1975년 미국 NBS에서 발표한 개인키 암호화 알고리즘으로 DES 를 3번 적용하여 보안을 강화한 3___도 있음, 블록 크기는 64비트, 키 길이는 56비트이다",암호 알고리즘,Data encryptyion Standard
AES,"2001년 미국 표준 기술 연구소에서 발표한 개인키 암호화 알고리즘, DES의 한계를 느낀 NIST에서 공모한 후 발표함, 128비트의 블록 크기로 키 길이에 따라 128, 192, 256으로 분류함",암호 알고리즘,Advanced Encryption Standard
RSA,"1978년 MIT의 라이베스트, 샤미르, 애들먼에 의해 제안된 공개키 암호화 알고리즘으로, 큰 숫자를 소인수분해하기 어렵다는 것을 기반으로 만들었다.",암호 알고리즘,Rivest Sharmir Adleman
Hash,임의의 길이의 입력 데이터나 메시지를 고정된 길이의 값이나 키로 변환하는 것을 의미한다. 무결성 검증을 위해 사용될 뿐만 아니라 정보보호의 다양한 분야에서 활용된다. 복호화가 거의 불가능한 일방향 함수에 해당함,암호 알고리즘,
SHA series,"1993년 미국 국가안보국이 처음 설계했으며, 미국 국립표준기술연구소에서 발표함",암호 알고리즘,
MD5,"1991년 R,Rivest가 MD4를 대체하기 위해 고안한 암호화 해시 함수, 블록 크기는 512비트, 키 길이는 128비트이다",암호 알고리즘,
N-NASH,"1989년 일본 전신전화주식회사에서 발표한 암호화 해시 함수, 블록 크기와 키 길이가 모두 128비트이다",암호 알고리즘,
SNEFRU,"1990년 R.C.Merkle가 발표한 해시 함수, 32비트 프로세서에서 구현을 용이하게할 목적으로 개발함",암호 알고리즘,
Salt,"둘 이상의 계정에 대해 패스워드를 'qwer1234'라고 지정하고 같은 암호화 알고리즘을 적용하면 결과도 마찬가지로 동일함, 이 경우 공격자가 나타나면 하나의 암호만 해제해도 둘 이상의 계정을 덕게 되므로, 원문에 무작위 값을 덧붙이는 과정을 수행하게 되는데 이때 덧붙이는 값을 부르는 말이다. ",암호 알고리즘,
서비스 공격 유형,"표적이 되는 서버의 자원을 고갈시킬 목적으로 다수의 공격자 또는 시스템이 대량의 데이터를 한 곳의 서버에 집중적으로 전송함으로써, 표적이 되는 서버의 정상적인 기능을 방해하는 것, Ping of Death, SMURFING, SYN Flooding, TearDrop, Land, DDoS 등이 있다",서비스 공격 유형,
Ping of Death,"명령을 전송할 때 패킷의 크기를 인터넷 프로토콜 허용 범위 이상으로 전송하여 공격 대상의 네트워크를 마비시키는 서비스 거부 공격 방법이다. 큰 패킷은 수백 개의 패킷으로 분할되어 전송되는데, 공격 대상은 분할된 대량의 패킷을 수신함으로써 전송된 패킷을 재조립해야하는 부담과 분할되어 전송된 각가의 패킷들의 ICMP Ping 메시지 응답을 처리하느라 시스템이 다운된다. 방화벽에서 차단하여 방어한다",서비스 공격 유형,
ICMP Ping message,"특정 IP로 패킷이 전송될 때 해당 IP의 노드가 현재 운영 중인지 확인을 요청하는 메세지로, 이를 수신한 노드가 운영중이라면 Ping 메시지에 대한 응답으로 에코 응답 메세지를 전송한다.",서비스 공격 유형,
SMURFING,"IP나 ICMP의 특성을 악용하여 엄청난 양의 데이터를 한 사이트에서 집중적으로 보냄으로써 네트워크를 불능 상태로 만드는 공격 방법, 공격자는 송신 주소를 공격 대상지의 IP 주소로 위장하고, 해당 네트워크 라우터의 브로드캐스트 주소를 수신지로 하여 패킷을 전송하면, 라우터의 브로드캐스트 주소로 수신된 패킷은 해당 네트워크 내의 모든 컴퓨터로 전송됨, 해당 패킷을 받은 컴퓨터는 이에 대해 응답하게 되는데 이를 처리하면서 타겟 네트워크는 정상적인 서비스를 수행할 수 없게 됨, 이에 대한 방어로, 네트워크 라우터에서 브로드케스트 주소를 사용할 수 없게 미리 막아놓는 것이다.",서비스 공격 유형,
SYN Flooding,"TCP는 신뢰성 있는 전송을 위해 3-way-handshake를 거친 후 데이터를 전송하게 되는데, 공격자가 가상의 클라이언트로 위장하여 3-way-handshake 과정을 의도적으로 중단시킴으로써, 공격 대상지 서버가 대기상태에 놓여 정상적인 서비스를 수행하지 못하게 하는 공격 방법, 공격자는 사용할 수 없는 IP 주소를 이용해 타겟 서버에 'SYN' 신호를 보낸다.  공격 대상지인 서버는 이에 반응하여 미리 메모리를 확보하는 과정을 거치나 'ACK' 신호가 기다려도 오지 않아 대기하게 된다. 공격자는 이 행위를 반복함으로써 메모리 자원을 고갈하고, 대기상태에 빠지게 되면서 더 이상 정상적인 서비스를 수행할 수 없게 한다. 'SYN' 수신 대기 시간을 줄이거나 침입 차단 시스템을 활용하여 방지한다",서비스 공격 유형,
TearDrop,"데이터 송수신 과정에서 패킷의 크기가 커 여러 개로 분할되어 전송될 때 분할 순서를 알 수 있도록 Fragment Offset 값을 함꼐 전송한다. 여기에 Offset을 변경시켜 수신측에서 패킷을 재조립할 때 오류로 인한 과부하를 발생시킴으로써, 시스템이 다운되도록 하는 공격 방법, TearDrop 에 대비하기 위해 Fragment Offset이 잘못된 경우 해당 패킷을 폐기하도록 설정하여 방어한다",서비스 공격 유형,
Land,"패킷을 전송할 때, 송신 IP 주소와 수신 IP 주소를 모두 공격 대상의 IP 주소로 하여 공격 대상에게 전송하는 것으로, 이 패킷을 받을 경우 자기 자신에게 응답을 계속 수행하게 된다. 송신 IP 주소와 수신 IP 주소의 적절성을 검사하여 방지할 수 있다.",서비스 공격 유형,
DDos,"여러 곳에 분산된 공격 지점에서 한 곳의 서버에 대해 분산 서비스 공격을 수행하는 것으로, 네트워크 취약점이 있는 호스트들을 탐색한 후 이들 호스트들에 대한 분선 서비스 공격용 툴을 설치하여 에이전트로 만든 후 서비스 취약점 공격을 시행하는 것",서비스 공격 유형,Distributed Denial of Service
Smishing,"문자 메시지를 이용해 사용자의 개인 신용 정보를 빼내는 방법, 비밀정보나 소액 결제를 유도하는 형태로 시작함, 각종 행사나 할인 등으로 위장하여 링크를 걸어 apk 설치를 유도하여 사용자 정보를 탈취함",서비스 공격 유형,
Spear Phsishing,"사회 공학의 기법으로 특정 대상을 선정한 후 그 대상에게 일반적인 이메일로 위장한 피알을 지속적으로 발송, 첨부된 파일을 클릭하도록 유도하여 사용자의 개인 정보를 탈취한다",서비스 공격 유형,
APT,다양한 IT 기술과 방식들을 이용해 조직적으로 특정 기업이나 조직 네트워크에 침투해 활동 거점을 마련한 뒤 때를 기다리면서 보안을 무력화시키고 정보를 수집한 다음 외부로 빼돌리는 형태의 공격,서비스 공격 유형,Advanced Persistent Threats
Brute Force Attack,암호화된 문서의 암호키를 찾아내기 위해 적용 가능한 모든 값을 대입하여 공격하는 방식,서비스 공격 유형,
Qshing,"QR 코드를 통해 악성 앱의 다운로드를 유도하거나 악성 프로그램을 설치하도록 하는 금융사기 기법의 하나로, QR코드와 개인 정보 및 금융 정보를 낚는 다는 뜻의 합성 신조어",서비스 공격 유형,
Phishing,개인정보(Private Data) 와 낚시의 합성어로 이메일이나 메신저 등을 통해 공기관이나 금융 기관을 사칭하여 개인 정보를 빼내는 기법,서비스 공격 유형,
Ping Flood,특정 사이트에 매우 많은 ICMP 메시지를 보내 이에 대한 응답으로 시스템 자원을 모두 사용하게 해 시스템 장애를 초래하는 기법,서비스 공격 유형,
Evil Twin Attack,실재 존재하는 동일한 이름의 무선 WiFi 신호를 송출하여 로그온한 사람들의 계정 정보나 신용 정보 등을 빼내는 기법,서비스 공격 유형,
Switch Jamming,"위조된 MAC 주소를 지속적으로 네트워크로 흘려보내, switch 로 하여금 MAC 주소 테이블의 저장기능을 혼란시켜 Dummy Hub처럼 작동하게 하는 공격",서비스 공격 유형,
BlueBug,블루투스 장비 사이의 취약한 연결 관리를 악용한 공격으로 휴대폰을 원격 조정하거나 통화를 감청할 수 있음,서비스 공격 유형,
BlueSnarf,블루투스의 취약점을 활용하여 장비의 파일에 접근하는 공격으로 인증 없이 간편하게 정보를 교환할 수 있는 OPP를 사용하여 정보를 열람함,서비스 공격 유형,
BluePrinting,공격 대상이 될 블루투스 장비를 검색하는 활동을 의미함,서비스 공격 유형,
BlueJacking,블루투스를 이용해 스팸처럼 메시지를 익명으로 퍼뜨리는 공격,서비스 공격 유형,
Zombie PC,악성코드에 감염되어 다른 프로그램이나 컴퓨터를 조종하도록 만들어진 컴퓨터로 C&C 서버의 제어를 받아 주로 DDoS 공격 등에 이용된다,서비스 공격 유형,
C&C 서버,해커가 원격지에서 감염된 PC에 명령을 내리고 악성코드를 제어하기 위한 용도로 사용하는 서버를 의미함,서비스 공격 유형,
Botnet,악성 프로그램에 감염되어 악의적인 의도로 사용될 수 있는 다수의 컴퓨터들이 네트워크로 연결된 형태를 말한다,서비스 공격 유형,
Worm,네트워크를 통해 연속적으로 자신을 복제하여 시스템 부하를 높음으로써 결국 다운시키는 바이러스 일종,서비스 공격 유형,
Zero Day Attack,보안 취약점이 발견되었을 때 발견된 취약점 존재 자체가 널리 공표되기 전에 해당 취약점을 통하여 이루어지는 보안 공격으로 공격의 신속성을 의미함,서비스 공격 유형,
Key Logger Attack,"컴퓨터 사용자의 키보드 움직임을 탐지해 ID, Password 등의 개인 중요 정보를 몰래 빼내가는 해킹 공격",서비스 공격 유형,
Ransomware,"인터넷 사용자의 컴퓨터에 잠입해 내부 문서나 파일 등을 암호화해 사용자가 열지 못하게 하는 프로그램으로, 암호 해독용 프로그램의 전달을 조건으로 사용자에게 돈을 요구하기도 한다",서비스 공격 유형,
Back Door,"시스템 설계자가 서비스 기술자나 유지 보수 프로그램 작성자의 액세스 편의를 위해 시스템 보안을 제거하여 만들어놓은 비밀 통로로, 컴퓨터 범죄에 악용되기도 한다. 탐지 방법으로 무결성 검사, 열린 포트 확인, 로그 분석, SetUID 파일 검사 등이 있다",서비스 공격 유형,
Trojan Horse,"정상적인 기능을 하는 프로그램으로 위장하여 프로그램 내에 숨어있다가, 해당 프로그램이 동작할 때 활성화되어 부작용을 일으키는 것으로 자기 복제 능력은 없다.",서비스 공격 유형,
보안 서버,"인터넷을 통해 개인정보를 암호화하여 송수신할 수 있는 기능을 갖춘 서버, Sniffing, Phising을 위조 사이트 등에 대비하기 위해 구축이 필요하다. SSL 인증서를 설치하여 전송 정보를 암호화한다.",서버 인증,
인증,다중 사용자 컴퓨터 시스템이나 네트워크 시스템에서 로그인을 요청한 사용자의 정보를 확인하고 접근 권한을 검증하는 보안 절차,서버 인증,
지식 기반 인증,사용자가 기억하고 있는 정보를 기반으로 인증을 수행하는 것,서버 인증,
Password,사용자가 알고 있는 비밀번호를 접속할 때마다 반복해서 입력한다,서버 인증,
Passphrase,일반 패스워드보다 길고 기억하기 쉬운 문장을 활용하여 비밀번호를 구성하는 것,서버 인증,
i-PIN,"주민번호 대신 쓸 수 있도록 만든 사이버 주민등록번호로, 사용자에 대한 신원 확인을 완료한 후 본인확인 기관에서 온라인으로 발행함",서버 인증,
소유 기반 인증,"사용자가 소유하고 있는 것을 기반으로 인증을 수행하는 것, 신분증, 메모리 카드, 토큰, 스마트 카드, OTP 등이 있다.",서버 인증,
생체 기반 인증,"사용자의 고유한 생체 정보를 기반으로 인증을 수행하는 것, 사용이 쉽고 도난의 위험 적음",서버 인증,
행위 기반 인증,사용자의 행동 정보를 이용해 인증 수행하는 것,서버 인증,
위치 기반 인증,인증을 시도하는 위치의 적절성 확인함,서버 인증,
Call Back,상대방이 전화로 인증을 요청한 경우 전화를 끊고 걸려온 번호로 다시 전화를 걸어 해당 전화번호가 유효한지 확인하는 기법,서버 인증,
보안 아키텍처,"정보 시스템의 무결성, 가용성, 기밀성을 확보하기 위해 보안 요소 및 보안 체계를 식별하고 이들 간의 관계를 정의한 구조를 말한다",보안 아키텍처,
관리적 보안,"정보보호 정책, 정보보호 조직, 정보자산 분류, 정보보호 교육 및 훈련, 인적 보안, 업무 연속성 관리 등의 정의",보안 아키텍처,
물리적 보안,"건물 및 사무실 출입 통제 지침, 전산실 관리 지침, 정보 시스템 보호 설치 및 관리 지침, 재해 복구 센터 운영 등의 정의",보안 아키텍처,
기술적 보안,"사용자 인증, 접근 제어, PC, 서버, 네트워크, 응용 프로그램, 데이터 등의 보안 지침 정의",보안 아키텍처,
Security Framework,안전한 정보 시스템 환경을 유지하고 보안 수준을 향상시키기 위한 체계를 의미함,보안 아키텍처,
ISO 27001,"정보보안 관리를 위한 국제 표준으로, 가장 대표적인 보안 프레임워크다. 영국 BSI가 제정한 BS 7799를 기반으로 구성되었고, 정보 관리 규격이 정의되어 있어 실제 심사/인증용으로 사용된다.",보안 아키텍처,
로그,시스템 사용에 대한 모든 내역을 기록해놓은 것으로 이러한 정보를 이용하면 시스템 침해 사고 발생 시 해킹 흔적이나 공격 기법을 파악할 수 있다.,로그,
Linux log,var/log 디렉터리에서 모든 시스템 로그들을 기록하고 관리하고 있다. syslog 데몬은 syslog.conf 파일을 읽어 로그 관련 파일들의 위치를 파악한 후 로그작업을 시작함,로그,
데몬,사용자의 직접적인 개입 없이 특정 상태가 되면 자동으로 동작하는 시스템 프로그램으로 LINUX 계열에서 지칭하는 소프트웨어 타입이다. WINDOWS에서는 서비스라고 함,로그,
Kernel/console,커널에 관련된 내용을 관리자에게 알리기 위해 파일로 저장하지 않고 지정된 장치에 표시한다,로그,
Kernel/wtmp,"성공적인 로그인/로그아웃에 대한 로그 기록, 시스템의 시작/종료 시간에 대한 로그를 기록함",로그,
Kernel/utmp,현재 로그인한 사용자의 상태에 대한 로그를 기록함,로그,
Kernel/btmp,실패한 로그인에 대한 로그를 기록함,로그,
Kernel/lastlog,마지막으로 성공한 로그인에 대한 로그를 기록함,로그,
boot,부팅 시 나타나는 메시지들을 기록함,로그,
cron,작업 스케줄러인 crond 작업 내역을 기록함,로그,
messages,kernel 에서 실시간으로 보내오는 메시지들을 기록함,로그,
secure,시스템 접속에 대한 로그를 기록함,로그,
xlerlog,FTP로 접속하는 사용자에 대한 로그를 기록함,로그,
Event viewer,윈도우에서 사용하는 로그 시스템,로그,
보안 솔루션,"접근 통제, 침입 차단 및 탐지 등을 수행하여 외부로부터의 불법적인 침입을 막는 기술 및 시스템을 말함",보안 솔루션,
Firewall,"기업이나 조직 내부의 네트워크와 인터넷 간에 전송되는 정보를 선별하여 수용, 거부, 수정하는 기능을 가진 침입 차단 시스템, 외부로 나가는 패킷은 그대로 통과시키고, 외부에서 내부 네트워크로 들어오는 패킷은 엄밀히 체크하여 인증된 패킷만 통과시키는 구조",보안 솔루션,
IDS,"시스템의 비정상적인 사용, 오용, 남용 등을 실시간으로 탐지하는 시스템, 방화벽 같은 차단 시스템만으로는 내부 사용자의 불법적인 행동과 외부 해킹에 완벽하게 대처할 수 없으므로, 내∙외부 정보의 흐름을 실시간으로 차단하기 위해 침입 패턴과 유해 정보 감시를 시행한다",보안 솔루션,Intrusion Detection System
Misuse Detection,미리 입력해둔 공격 패턴이 감지되면 이를 알려준다,보안 솔루션,
Anomaly Detection,평균적인 시스템의 상태를 기준으로 비정상적인 행위나 자원의 사용이 감지되면 이를 알려준다,보안 솔루션,
IPS,"방화벽과 침입 탐지 시스템을 결합한 것으로 비정상적인 트래픽을 능동적으로 차단하고 격리하는 등의 방어 조치를 취하는 보안 솔루션, 패킷을 하나씩 검사한 후 비정상적인 패킷이 탐지되면 방화벽 기능으로 해당 패킷을 차단한다.",보안 솔루션,Intrusion Prevention System
DLP,"내부의 정보의 외부 유출을 방지하는 보안 솔루션이다. 사내 직원이 사용하는 PC와 네트워크상의 모든 정보를 검색하고, 메일, 메신저, 웹하드, 네트워크 프린터 등의 사용자 행위를 탐지 통제하여 외부로의 유출을 사전에 막는다",보안 솔루션,Data Leakage Prrevention
Web Firewall,"일반 방화벽이 탐지하지 못하는 SQL injection , XSS 등의 웹 기반 공격을 방어할 목적으로 만들어진 웹 서버 특화 방화벽이다.",보안 솔루션,
VPN,가상 사설 네트워크로서 인터넷 등 통신 사업자의 공중 네트워크와 암호화 기술을 이용하여 사용자가 마치 자신의 전용 회선을 사용하는 것처럼 해주는 보안 솔루션,보안 솔루션,Virtual Private Network
NAC,"네트워크에 접속하는 내부 PC의 MAC 주소를 IP 관리 시스템에 등록한 후 일관된 보안 관리 기능을 제공하는 보안 솔루션, 내부 PC의 소프트웨어 사용 현황을 관리하여 불법적인 소프트웨어 설치를 방지함. 비인가 시스템을 자동으로 검출하여 자산을 관리함",보안 솔루션,
SSH,"다른 컴퓨터에 로그인, 원격 명령 실행, 파일 복사 등을 수행할 수 있도록 다양한 기능을 지원하는 프로토콜 또는 이를 이용한 응용프로그램이다. 데이터 암호화와 강력한 인증 방법으로 보안성이 낮은 네트워크에서도 안전하게 통신할 수 있음, PortNum : 22",보안 솔루션,
취약점 분석 및 평가,"사이버 위협으로부터 정보 시스템의 취약점을 분석 및 평가한 후 개선하는 일련의 과정을 의미함, 발견 시 위험 등급을 부여하고 개선 방향을 수립한다. 사이버 위협에 대한 항목별 세부 점검항목을 파악하여 취약점 분석을 수행한다.",취약점 분석 및 평가,